{
  "hash": "68f182de50c52c44b8e83561d5ad1f6c",
  "result": {
    "engine": "knitr",
    "markdown": "---\nformat:\n  html:\n    df-print: tibble\n---\n\n\n\n\n# Exclude Scans with \"Red\" Quality\n\nFor each MRI product, all pipeline derivatives have been included. This means that products were included regardless of their quality, and so some products are known to have poor quality--rated \"red\" or incomparable. This kit walks through one way to incorporate those outputs for [FreeSurfer products](freesurfer.qmd). For details on how the ratings were generated, see https://a2cps.atlassian.net/wiki/spaces/DIRC/pages/303857665/Raw+MRI+Data+Starter+Kit.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(fs)\nlibrary(readr)\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'dplyr'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(stringr)\n```\n:::\n\n\n\n\nFirst, start by loading the table of FreeSurfer outputs. In this example, the cortical parcellations will be used.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\naparc <- read_tsv(\"data/aparc.tsv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 399992 Columns: 14\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr  (4): StructName, ses, hemisphere, parc\ndbl (10): NumVert, SurfArea, GrayVol, ThickAvg, ThickStd, MeanCurv, GausCurv...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\naparc\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 399,992 × 14\n   StructName       NumVert SurfArea GrayVol ThickAvg ThickStd MeanCurv GausCurv\n   <chr>              <dbl>    <dbl>   <dbl>    <dbl>    <dbl>    <dbl>    <dbl>\n 1 bankssts            1360      909    2055     2.52    0.397    0.112    0.02 \n 2 caudalanteriorc…     852      604    1626     2.25    0.887    0.131    0.024\n 3 caudalmiddlefro…    2870     1857    4018     2.16    0.485    0.104    0.018\n 4 cuneus              1595     1090    2019     1.74    0.515    0.141    0.027\n 5 entorhinal           480      306    1366     3.03    0.816    0.105    0.018\n 6 fusiform            3434     2414    8326     2.91    0.603    0.123    0.023\n 7 inferiorparietal    4984     3387    7491     2.06    0.508    0.122    0.022\n 8 inferiortemporal    3816     2614    8405     2.79    0.552    0.118    0.021\n 9 isthmuscingulate    1167      782    1820     2.14    0.832    0.117    0.021\n10 lateraloccipital    6159     4023    8578     2.02    0.536    0.132    0.027\n# ℹ 399,982 more rows\n# ℹ 6 more variables: FoldInd <dbl>, CurvInd <dbl>, sub <dbl>, ses <chr>,\n#   hemisphere <chr>, parc <chr>\n```\n\n\n:::\n:::\n\n\n\n\n\nThe overall quality ratings (red/yellow/green) for the rawdata are included in the *scans.tsv files. For example\n\n\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n$ cat sub-10003/ses-V1/sub-10003_ses-V1_scans.tsv \nfilename\trating\nfunc/sub-10003_ses-V1_task-cuff_run-01_bold.nii.gz\tgreen\ndwi/sub-10003_ses-V1_dwi.nii.gz\tgreen\nfunc/sub-10003_ses-V1_task-rest_run-01_bold.nii.gz\tgreen\nfunc/sub-10003_ses-V1_task-rest_run-02_bold.nii.gz\tgreen\nanat/sub-10003_ses-V1_T1w.nii.gz\tgreen\nfmap/sub-10003_ses-V1_acq-fmrib0_dir-AP_epi.nii.gz\tn/a\nfmap/sub-10003_ses-V1_acq-fmrib0_dir-PA_epi.nii.gz\tn/a\nfmap/sub-10003_ses-V1_acq-dwib0_dir-AP_epi.nii.gz\tn/a\nfmap/sub-10003_ses-V1_acq-dwib0_dir-PA_epi.nii.gz\tn/a\n```\n:::\n\n\n\n\nTo load the files, first list them all with [`fs::dir_ls`](https://fs.r-lib.org/reference/dir_ls.html).\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nscan_files <- dir_ls(\"data/scans\", glob = \"*tsv\")\nhead(scan_files)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\ndata/scans/sub-10003_ses-V1_scans.tsv data/scans/sub-10005_ses-V1_scans.tsv \ndata/scans/sub-10008_ses-V1_scans.tsv data/scans/sub-10010_ses-V1_scans.tsv \ndata/scans/sub-10011_ses-V1_scans.tsv data/scans/sub-10013_ses-V1_scans.tsv \n```\n\n\n:::\n:::\n\n\n\n\nThey can be read and bound together using [`readr::read_tsv`](https://readr.tidyverse.org/reference/read_delim.html). Note that the BIDS way to represent null values is with `'n/a'`.  \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nscans <- read_tsv(scan_files, na = \"n/a\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 9188 Columns: 2\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr (2): filename, rating\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\nscans\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 9,188 × 2\n   filename                                           rating\n   <chr>                                              <chr> \n 1 func/sub-10003_ses-V1_task-cuff_run-01_bold.nii.gz green \n 2 dwi/sub-10003_ses-V1_dwi.nii.gz                    green \n 3 func/sub-10003_ses-V1_task-rest_run-01_bold.nii.gz green \n 4 func/sub-10003_ses-V1_task-rest_run-02_bold.nii.gz green \n 5 anat/sub-10003_ses-V1_T1w.nii.gz                   green \n 6 fmap/sub-10003_ses-V1_acq-fmrib0_dir-AP_epi.nii.gz <NA>  \n 7 fmap/sub-10003_ses-V1_acq-fmrib0_dir-PA_epi.nii.gz <NA>  \n 8 fmap/sub-10003_ses-V1_acq-dwib0_dir-AP_epi.nii.gz  <NA>  \n 9 fmap/sub-10003_ses-V1_acq-dwib0_dir-PA_epi.nii.gz  <NA>  \n10 anat/sub-10005_ses-V1_T1w.nii.gz                   yellow\n# ℹ 9,178 more rows\n```\n\n\n:::\n:::\n\n\n\n\nRatings will be used to exclude some FreeSurfer products, and so we only need the ratings for the T1w scans.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nt1w_ratings <- scans |>\n  filter(str_detect(filename, \"T1w\"))\n```\n:::\n\n\n\n\nIn this example, all scans with a rating \"red\" will be excluded, so filter for those scans.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nred_t1w <- t1w_ratings |>\n  filter(rating==\"red\")\nred_t1w\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 8 × 2\n  filename                         rating\n  <chr>                            <chr> \n1 anat/sub-10144_ses-V1_T1w.nii.gz red   \n2 anat/sub-10216_ses-V1_T1w.nii.gz red   \n3 anat/sub-10258_ses-V1_T1w.nii.gz red   \n4 anat/sub-10267_ses-V1_T1w.nii.gz red   \n5 anat/sub-10553_ses-V1_T1w.nii.gz red   \n6 anat/sub-10559_ses-V1_T1w.nii.gz red   \n7 anat/sub-20040_ses-V1_T1w.nii.gz red   \n8 anat/sub-20224_ses-V1_T1w.nii.gz red   \n```\n\n\n:::\n:::\n\n\n\n\nThe FreeSurfer rows are defined by the entities sub and ses, so extract these from the `filename` column.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nred_t1w_w_entities <- red_t1w |>\n  mutate(\n    sub = str_extract(filename, \"(?<=sub-)[[:digit:]]{5}\") |>\n      as.integer(),\n    ses = str_extract(filename, \"V[13]\")\n  )\n```\n:::\n\n\n\n\nFinally, this table with red ratings can be used to exclude participants with a low quality T1w scan.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\naparc_wo_red <- aparc |>\n  anti_join(red_t1w_w_entities, by = join_by(sub, ses))\naparc_wo_red\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 396,776 × 14\n   StructName       NumVert SurfArea GrayVol ThickAvg ThickStd MeanCurv GausCurv\n   <chr>              <dbl>    <dbl>   <dbl>    <dbl>    <dbl>    <dbl>    <dbl>\n 1 bankssts            1360      909    2055     2.52    0.397    0.112    0.02 \n 2 caudalanteriorc…     852      604    1626     2.25    0.887    0.131    0.024\n 3 caudalmiddlefro…    2870     1857    4018     2.16    0.485    0.104    0.018\n 4 cuneus              1595     1090    2019     1.74    0.515    0.141    0.027\n 5 entorhinal           480      306    1366     3.03    0.816    0.105    0.018\n 6 fusiform            3434     2414    8326     2.91    0.603    0.123    0.023\n 7 inferiorparietal    4984     3387    7491     2.06    0.508    0.122    0.022\n 8 inferiortemporal    3816     2614    8405     2.79    0.552    0.118    0.021\n 9 isthmuscingulate    1167      782    1820     2.14    0.832    0.117    0.021\n10 lateraloccipital    6159     4023    8578     2.02    0.536    0.132    0.027\n# ℹ 396,766 more rows\n# ℹ 6 more variables: FoldInd <dbl>, CurvInd <dbl>, sub <dbl>, ses <chr>,\n#   hemisphere <chr>, parc <chr>\n```\n\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}