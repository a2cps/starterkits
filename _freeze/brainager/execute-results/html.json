{
  "hash": "37d34e3c3da7873ec8464d03abe26891",
  "result": {
    "engine": "knitr",
    "markdown": "---\nformat:\n  html:\n    df-print: tibble\n---\n\n\n\n\n\n# Brain Age {#sec-brainager}\n\nThis starter kit walk through the \"Brain Age\" outputs that have been derived from the anatomical scans. The examples in the kit relies on `bash` and `R`. \n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readr)\nlibrary(ggplot2)\nlibrary(dplyr)\n```\n:::\n\n\n\n\n\n\n## Before Proposing Project\n\n### Confirm Sample Size\n\nNot all participants in a release have imaging, and not all MRIs are of good quality. Before proposing a project, please confirm that a release will have a large enough sample size. Release 2.0.0 has 1017 participants with for which Brain Age data have been extracted. \n\n## Starting Project\n\n### Locate data\n\nIn the release folder, data are stored underneath the `mris/derivatives` folder:\n\n```bash\n/corral-secure/projects/A2CPS/products/consortium-data/pre-surgery/mris/derivatives/brainager\n```\n\n### Extract data\n\nData for each participant is stored in a sub-directory.\n\n```bash\n$ ls | head\nsub-10003\nsub-10005\nsub-10008\nsub-10010\nsub-10011\nsub-10013\nsub-10014\nsub-10015\nsub-10017\nsub-10020\n```\n\nFor example[^tree]:\n\n[^tree]: The `tree` command is just used here to display the folder structure, and is not required for you to have.\n\n```bash\n$ tree sub-10319\nsub-10319\n└── ses-V1\n├── slicesdir_sub-10319_ses-V1_T1w.nii\n│   ├── index.html\n│   ├── _tmp_tmph17ksnl8_c1sub-10319_ses-V1_T1w.png\n│   ├── _tmp_tmph17ksnl8_c2sub-10319_ses-V1_T1w.png\n│   ├── _tmp_tmph17ksnl8_c3sub-10319_ses-V1_T1w.png\n│   ├── _tmp_tmph17ksnl8_smwc1sub-10319_ses-V1_T1w.png\n│   ├── _tmp_tmph17ksnl8_smwc2sub-10319_ses-V1_T1w.png\n│   └── _tmp_tmph17ksnl8_smwc3sub-10319_ses-V1_T1w.png\n├── sub-10319_ses-V1_T1w.m\n├── sub-10319_ses-V1_T1w_tissue_volumes.tsv\n└── sub-10319_ses-V1_T1w.tsv\n\n2 directories, 10 files\n\n```\n\n\nMost users will be interested in the predicted ages, which can be found in `sub-[recordid]/ses-[protocolid]/sub-[recordid]_ses-[protocolid]_T1w.tsv`. For example\n\n\n```bash\n$ cat sub-10003/ses-V1/sub-10003_ses-V1_T1w.tsv \nFile\tbrain.predicted_age\tlower.CI\tupper.CI\nsub-10003_ses-V1_T1w\t73.6037\t72.9683\t74.2392\n```\n\nHere is an example of how these files could be loaded using `R`.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# list all files\nfiles <- fs::dir_ls(\"data/brainager\", glob = \"*T1w.tsv\", recurse = TRUE)\n\n# read in all tsvs\nages <- readr::read_tsv(files)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 1017 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr (1): File\ndbl (3): brain.predicted_age, lower.CI, upper.CI\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\nages\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1,017 × 4\n   File                 brain.predicted_age lower.CI upper.CI\n   <chr>                              <dbl>    <dbl>    <dbl>\n 1 sub-10003_ses-V1_T1w                73.6     73.0     74.2\n 2 sub-10005_ses-V1_T1w                65.7     64.6     66.9\n 3 sub-10008_ses-V1_T1w                75.5     74.7     76.3\n 4 sub-10010_ses-V1_T1w                44.6     42.6     46.5\n 5 sub-10011_ses-V1_T1w                40.5     38.5     42.4\n 6 sub-10013_ses-V1_T1w                72.1     71.5     72.8\n 7 sub-10014_ses-V1_T1w                42.3     41.7     42.9\n 8 sub-10015_ses-V1_T1w                55.0     53.2     56.8\n 9 sub-10017_ses-V1_T1w                57.9     57.2     58.7\n10 sub-10020_ses-V1_T1w                59.2     58.6     59.7\n# ℹ 1,007 more rows\n```\n\n\n:::\n:::\n\n\n\n\n\nThe column `File` identifies the anatomical image that was used for to make the prediction. When working with other A2CPS data, it may be helpful to extract the subject ID.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nages_with_sub <- ages |>\n  dplyr::mutate(\n    sub = stringr::str_extract(File, \"[[:digit:]]{5}\") |> as.integer(),\n  )\nages_with_sub\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1,017 × 5\n   File                 brain.predicted_age lower.CI upper.CI   sub\n   <chr>                              <dbl>    <dbl>    <dbl> <int>\n 1 sub-10003_ses-V1_T1w                73.6     73.0     74.2 10003\n 2 sub-10005_ses-V1_T1w                65.7     64.6     66.9 10005\n 3 sub-10008_ses-V1_T1w                75.5     74.7     76.3 10008\n 4 sub-10010_ses-V1_T1w                44.6     42.6     46.5 10010\n 5 sub-10011_ses-V1_T1w                40.5     38.5     42.4 10011\n 6 sub-10013_ses-V1_T1w                72.1     71.5     72.8 10013\n 7 sub-10014_ses-V1_T1w                42.3     41.7     42.9 10014\n 8 sub-10015_ses-V1_T1w                55.0     53.2     56.8 10015\n 9 sub-10017_ses-V1_T1w                57.9     57.2     58.7 10017\n10 sub-10020_ses-V1_T1w                59.2     58.6     59.7 10020\n# ℹ 1,007 more rows\n```\n\n\n:::\n:::\n\n\n\n\n\n\n## Considerations While Working on the Project\n\n### Variability Across Scanners\n\n\nMany MRI biomarkers exhibit variability across the scanners, which may confound some analyses. The imaging DIRC is quantifying and mitigating this variability. For an ongoing review of the issue, please see [Confluence](https://a2cps.atlassian.net/wiki/spaces/DOC/pages/176619539/Imaging+Harmonization). \n\n\n\n### Data Quality\n\n\nAs with any MRI derivative, all pipeline derivatives have been included. This means that products were included regardless of their quality, and so some products may have been generated from images that are known to have poor quality--rated \"red\" or incomparable. For details on the ratings and how to exclude them, see @sec-rawdata-mri-qc-joining. Additionally, extensive QC has not yet been performed on the derivatives themselves, and so there may be cases where pipelines produced atypical outputs. For an overview of planned checks, see [Confluence](https://a2cps.atlassian.net/wiki/spaces/DOC/pages/262471688/Image+Processing+Checks). \n\n\n\n### Calculating the Brain Age Gap\n\nPredicted ages are neat, but these values are most useful when compared against a participant's chronological age. These can be found in the `demographics` portion of the release.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbaseline_ages <- read_csv(\n  \"data/demographics/demographics-2025-01-10.csv\",\n  col_select = c(\"record_id\", \"age\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 1401 Columns: 2\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (2): record_id, age\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\nbrainage <- ages_with_sub |>\n  left_join(baseline_ages, by = join_by(sub==record_id)) |>\n  mutate(\n    brain_age_gap = brain.predicted_age - age\n  ) |>\n  filter(!is.na(age)) # age not available for all participants\nbrainage\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 996 × 7\n   File          brain.predicted_age lower.CI upper.CI   sub   age brain_age_gap\n   <chr>                       <dbl>    <dbl>    <dbl> <dbl> <dbl>         <dbl>\n 1 sub-10003_se…                73.6     73.0     74.2 10003    73         0.604\n 2 sub-10005_se…                65.7     64.6     66.9 10005    58         7.73 \n 3 sub-10008_se…                75.5     74.7     76.3 10008    73         2.49 \n 4 sub-10010_se…                44.6     42.6     46.5 10010    64       -19.4  \n 5 sub-10011_se…                40.5     38.5     42.4 10011    54       -13.5  \n 6 sub-10013_se…                72.1     71.5     72.8 10013    71         1.14 \n 7 sub-10014_se…                42.3     41.7     42.9 10014    45        -2.70 \n 8 sub-10015_se…                55.0     53.2     56.8 10015    65        -9.98 \n 9 sub-10017_se…                57.9     57.2     58.7 10017    56         1.95 \n10 sub-10020_se…                59.2     58.6     59.7 10020    53         6.17 \n# ℹ 986 more rows\n```\n\n\n:::\n:::\n\n\n\n\n\n\nBy plotting the predicted ages against the true ages, we can review the accuracy of the predictions.\n\n\n\n\n\n::: {.cell caption='Predicted and Chronological Age. Each point corresponds to a participant.'}\n\n```{.r .cell-code}\nlm_eqn <- function(fit){\n  eq <- substitute(\n    italic(y) == a + b %.% italic(age)*\",\"~~italic(r)^2~\"=\"~r2,\n    list(\n      a = format(unname(coef(fit)[1]), digits = 2),\n      b = format(unname(coef(fit)[2]), digits = 2),\n      r2 = format(summary(fit)$r.squared, digits = 3)))\n  as.character(as.expression(eq))\n}\n\nfit <- lm(brain.predicted_age ~ age, data=brainage)\n\nbrainage |>\n  ggplot(aes(x=age, y=brain.predicted_age)) +\n  geom_abline() +\n  geom_point(alpha=0.5) + \n  geom_smooth(method=\"lm\", formula = y~x) +\n  coord_fixed() + \n  geom_text(x = 40, y = 80, label = lm_eqn(fit), parse = TRUE) \n```\n\n::: {.cell-output-display}\n![](brainager_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\n\n\nNote that using the raw Brain Age Gap can be problematic, and it is typical to calculate a derivative that has been \"corrected\". See @smith_estimation_2019.\n\n### Methods, Citations\n\nFor additional documentation on the files and a detailed description of the methods, please see the official [brainageR repo](https://github.com/james-cole/brainageR). \n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}