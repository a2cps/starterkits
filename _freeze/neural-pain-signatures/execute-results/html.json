{
  "hash": "267917831e87ed687e010a28bc64b09e",
  "result": {
    "engine": "knitr",
    "markdown": "# Prior Neural Pain Signature Responses {#sec-neural-pain-signatures}\n\n## Before Proposing Project\n\n### Confirm Sample Size\n\nNot all participants in a release have imaging, and depending on the application not all MRIs may be of sufficient quality. Before proposing a project, please confirm that a release will have a large enough sample size. Release 1.1 has 440 participants with the primary task fMRI biomarker: NPS [@wager_fmri-based_2013] and SIIPS-1 [@woo_quantifying_2017].\n\nNote also that these participants have been collected at several different scanners, and there is [variability in the measures across scanners](https://a2cps.atlassian.net/wiki/spaces/DIRC/pages/edit-v2/274137090#Variability-Across-Scanners). In Release 1.1, some scanners were used to collect only a few participants (for example, only five participants were collected on the Wayne State scanner). \n\n## Starting Project\n\n### Locate data\n\nOn TACC, the neuroimaging data are stored underneath the releases. For example, data release v1.#.# is underneath\n\n\n\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n/corral-secure/projects/A2CPS/products/consortium-data/pre-surgery/mris\n```\n:::\n\n\n\n\n\nThe signature response are underneath `derivatives/signatures`\n\n```bash\n$ ls derivatives/signatures/\nsignature-bold     signature-by-part.json  signature-by-run.json  signature-by-tr.json  signature-confounds       signature-labels       signature-rawdata\nsignature-by-part  signature-by-run        signature-by-tr        signature-cleaned     signature-confounds.json  signature-labels.json  signature-rawdata.json\n```\n\nSignature responses are stored either \"by-run\" (that is, one response per scan), \"by-part\" (three responses per run corresponding to the three parts for which participants provided pain ratings), or \"by-tr\" (one response for every volume). The biomarker corresponds to the values that are \"by-run\".\n\nEach signature response folder contains a table of values, and `*.json` sidecars are [data dictionaries that conform to BIDS ](https://bids-specification.readthedocs.io/en/v1.9.0/common-principles.html#tabular-files). The data dictionary for responses \"by-run\" is copied below.\n\n```json\n{\n    \"signature\": {\n        \"LongName\": \"Signature\",\n        \"Description\": \"Index for of Signature. See signature_labels.json\"\n    },\n    \"correlation\": {\n        \"LongName\": \"Correlation\",\n        \"Description\": \"Signature as Estimated by Correlation\"\n    },\n    \"dot\": {\n        \"LongName\": \"Dot Product\",\n        \"Description\": \"Signature as Estimated by Dot Product\"\n    },\n    \"cosine\": {\n        \"LongName\": \"Cosine Similarity\",\n        \"Description\": \"Signature as Estimated by Cosine Similarity\"\n    },\n    \"sub\": {\n        \"LongName\": \"Subject\",\n        \"Description\": \"Study Participant, BIDS Subject ID\",\n        \"TermURL\": \"https://bids-specification.readthedocs.io/en/v1.9.0/appendices/entities.html#sub\"\n    },\n    \"ses\": {\n        \"LongName\": \"Session\",\n        \"Description\": \"Visit, BIDS Session ID\",\n        \"Levels\": {\n            \"V1\": \"Baseline Visit\",\n            \"V3\": \"3 Month Followup Visit\"\n        },\n        \"TermURL\": \"https://bids-specification.readthedocs.io/en/v1.9.0/appendices/entities.html#ses\"\n    },\n    \"task\": {\n        \"LongName\": \"Task\",\n        \"Description\": \"Functional MRI Task, BIDS Task ID\",\n        \"Levels\": {\n            \"cuff\": \"cuff pressure scan\",\n            \"rest\": \"resting state scan\"\n        },\n        \"TermURL\": \"https://bids-specification.readthedocs.io/en/v1.9.0/appendices/entities.html#task\"\n    },\n    \"run\": {\n        \"LongName\": \"Run\",\n        \"Description\": \"Task Run Number, BIDS Run ID\",\n        \"TermURL\": \"https://bids-specification.readthedocs.io/en/v1.9.0/appendices/entities.html#run\"\n    }\n}\n```\n\nNote: the table mentions \"session\", but in this release only V1 (baseline) results are available.\n\n### Extract data\n\nThe tabular data comprise parquet files that have been partitioned in a hive style. That is, subfolders names contain column information – in this case subject ID (REDCap Record ID), task, and run.\n\n```bash\n$ tree signature-by-run\nsignature-by-run\n├── sub=10003\n│  └── ses=V1\n│     ├── task=cuff\n│     │  └── run=1\n│     │     └── part-0.parquet\n│     └── task=rest\n│        ├── run=1\n│        │  └── part-0.parquet\n│        └── run=2\n│           └── part-0.parquet\n├── sub=10008\n│  └── ses=V1\n│     ├── task=cuff\n│     │  └── run=1\n│     │     └── part-0.parquet\n│     └── task=rest\n│        ├── run=1\n│        │  └── part-0.parquet\n│        └── run=2\n```\n\nThe biomarker is based on the CUFF1 (task=cuff/run=1) scan. The other scans are available for secondary analyses, but please note that not all participants have all tasks and runs available.\n\nTo load the whole dataset, the parquet files may be read individually or using a tool that is aware of the hive-partitioning structure. In `R`, a good choice is the [`arrow`](https://arrow.apache.org/docs/r/index.html) library.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\n\nopen_dataset(\"data/signature-by-run\") |> \n  filter(signature %in% c(\"grouppred_cvpcr\", \"137subjmap_weighted_mean\")) |>\n  filter(task==\"cuff\", run==1) |>\n  select(signature, value=correlation, sub, ses) |>\n  collect() |>\n  pivot_wider(names_from = signature) |>\n  rename(\n    SIIPS1=`137subjmap_weighted_mean`,\n    NPS=`grouppred_cvpcr`)\n```\n:::\n\n\n\n\n\n```bash\n# A tibble: 440 × 4\n     sub ses    SIIPS1       NPS\n   <int> <chr>   <dbl>     <dbl>\n 1 10008 V1    -0.0797 -0.000435\n 2 10003 V1    -0.0260  0.0142  \n 3 10011 V1    -0.0381 -0.00112 \n 4 10010 V1    -0.0630  0.00221 \n 5 10013 V1    -0.0422  0.00809 \n 6 10014 V1    -0.0377  0.00990 \n 7 10017 V1    -0.0390  0.0237  \n 8 10015 V1    -0.0701  0.00553 \n 9 10020 V1    -0.0509 -0.000624\n10 10023 V1    -0.0160  0.00820 \n# ℹ 430 more rows\n# ℹ Use `print(n = ...)` to see more rows\n```\n\nIn python, a good choice is the [`polars`](https://docs.pola.rs/) library\n\n\n\n\n\n::: {.cell}\n\n```{.python .cell-code}\nimport polars as pl\n\npl.read_parquet(\"data/signature-by-run\").filter(\n    pl.col(\"signature\").is_in([\"grouppred_cvpcr\", \"137subjmap_weighted_mean\"])\n).filter(pl.col(\"task\") == \"cuff\", pl.col(\"run\") == 1).rename(\n    {\"correlation\": \"value\"}\n).select(\n    \"signature\",\n    \"value\",\n    \"sub\",\n    \"ses\",\n).pivot(\n    on=\"signature\", index=[\"sub\", \"ses\"]\n).rename(\n    {\"grouppred_cvpcr\": \"NPS\", \"137subjmap_weighted_mean\": \"SIIPS1\"}\n)\n```\n:::\n\n\n\n\n\n```bash\nshape: (440, 4)\n┌───────┬─────┬───────────┬───────────┐\n│ sub   ┆ ses ┆ SIIPS1    ┆ NPS       │\n│ ---   ┆ --- ┆ ---       ┆ ---       │\n│ i64   ┆ str ┆ f64       ┆ f64       │\n╞═══════╪═════╪═══════════╪═══════════╡\n│ 10003 ┆ V1  ┆ -0.025985 ┆ 0.014206  │\n│ 10008 ┆ V1  ┆ -0.079689 ┆ -0.000435 │\n│ 10010 ┆ V1  ┆ -0.062953 ┆ 0.002212  │\n│ 10011 ┆ V1  ┆ -0.038073 ┆ -0.001121 │\n│ 10013 ┆ V1  ┆ -0.042161 ┆ 0.008091  │\n│ …     ┆ …   ┆ …         ┆ …         │\n│ 25081 ┆ V1  ┆ -0.070675 ┆ -0.022013 │\n│ 25090 ┆ V1  ┆ -0.034116 ┆ -0.005581 │\n│ 25091 ┆ V1  ┆ -0.062637 ┆ -0.00005  │\n│ 25094 ┆ V1  ┆ -0.053041 ┆ -0.007981 │\n│ 25095 ┆ V1  ┆ -0.0281   ┆ -0.004837 │\n└───────┴─────┴───────────┴───────────┘\n```\n\n### Data Quality\n\nAll imaging scans are subjected to quality control: [A2CPS Imaging Quality Assurance](https://a2cps.atlassian.net/wiki/spaces/DOC/pages/5406780), which results in a quality rating of \"green\", \"yellow\", or \"red\". Images rated \"red\" are not expected to be usable for most analyses. These quality ratings are available in tables matching \n```bash\n/corral-secure/projects/A2CPS/products/consortium-data/pre-surgery/mris/bids/sub-[subject_id]/ses-[session_id]/sub-[subject_id]_ses-[session_id]_scans.tsv\n```\n\nFor example\n\n```bash\n$ grep task bids/sub-10050/ses-V1/sub-10050_ses-V1_scans.tsv \nfunc/sub-10050_ses-V1_task-cuff_run-01_bold.nii.gz\tgreen\nfunc/sub-10050_ses-V1_task-cuff_run-02_bold.nii.gz\tgreen\nfunc/sub-10050_ses-V1_task-rest_run-01_bold.nii.gz\tgreen\nfunc/sub-10050_ses-V1_task-rest_run-02_bold.nii.gz\tgreen\n```\n\n### Associate data with A2CPS Record IDs and NDA Globally-Unique ID\n\nLinks between the participant record IDs and the biospecimen IDs are not yet available. If these are needed, please contact [Patrick Sadil](https://a2cps.atlassian.net/wiki/people/712020:9b1f0b7e-3a1b-4955-856b-f0b1a07e458e?ref=confluence).\n\n## Considerations While Working on the Project\n\n### Variability Across Scanners\n\nMany MRI biomarkers exhibit variability across the scanners, which may confound some analyses. The imaging DIRC is quantifying and mitigating this variability. For an ongoing review of the issue, please see [Imaging Harmonization](https://a2cps.atlassian.net/wiki/spaces/DOC/pages/176619539).\n\n### Signature Response Measure\n\nThe signature responses were extracted using best-practices, but the imaging DIRC is currently exploring alternative ways of calculating signature responses in the CUFF tasks. For details and progress, please see [Imaging Analysis Ideas | NPS+SIIPS1 on ToPS or SpaceTop Data](https://a2cps.atlassian.net/wiki/spaces/DOC/pages/5406923/Imaging+Analysis+Ideas#NPS%2BSIIPS1-on-ToPS-or-SpaceTop-Data).\n\n### Intermediate Outputs\n\nThe other folders contain intermediate outputs that may be useful for digging into a participant's results\n\n- signature-rawdata\n  - Parquet dataset of minimally preprocessed (post-fMRIPrep) functional MRI (cuff and rest).\n- signature-confounds\n  - The nuisance timeseries that were used during denoising\n- signature-cleaned\n  - The NifTI files of functional MRI after denoising (e.g., temporal filter, nuisance regression)\n- signature-bold\n  - Parquet dataset of denoised fMRI\n- signature-labels\n  - Anatomical labels associated with the individual voxels (brain, FreeSurfer Segmentations, FAST Parcellations)\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}