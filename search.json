[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "A2CPS Starter Kits",
    "section": "",
    "text": "Preface\nStarter kits are brief tutorials that are designed to help guide internal A2CPS projects. The kits target researchers accustomed to working with some specialized data format, but not necessarily the modality in question (e.g., someone familiar with genetics working with neuroimaging data).\nEach kit has two sections, information about how to access the relevant data, and an overview of related work by the DIRC. Kits provide examples of how to explore the data and run simple analyses. These examples rely on various kinds of code, including shell commands, R, and python. These examples should be seen as only one of many ways to interact with the data. For example, the data reviewed in 4  FreeSurfer Measures is stored in tsv (tab-separated value) files, and that kit demonstrates working with those tables in R. But the tsv can be read with many programs besides R, including programs like Excel. The kits rely on code because the dataset is large enough that code- and scripting-based analyses provide substantial benefits.",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "genetic_variants.html",
    "href": "genetic_variants.html",
    "title": "1  Genetic Variant Data",
    "section": "",
    "text": "1.1 Starting Project\nThis page provides considerations for A2CPS projects that involve the Genetic Variant data.\nGenetic variant data captures individual variation in the human genome with single-nucleotide resolution. Our released SNP array data includes 690,126 genetic loci across all 22 autosomes, the X / Y (sex) chromosomes, and mitochondrial DNA for 1375 participants. At each locus, there is a more common “reference” (REF) allele and a less common “alternate” (ALT) allele, also referred to as the major and minor alleles, respectively. Because humans are diploid, we carry two copies of each chromosome, and thus two alleles at each locus, which may be both REF, both ALT, or one of each (heterozygous). This data enables researchers to examine allele-level variation across the genome at precisely selected sites for each participant. Below, we expand with more granularity how to work with these data, and the quality control measures that were used to create them. Notably, we also used the quality controlled data to impute whole genome sequences using TOPMed’s Imputation Server, information that is included in the “Imputed Genomics” starter kit.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Genetic Variant Data</span>"
    ]
  },
  {
    "objectID": "genetic_variants.html#starting-project",
    "href": "genetic_variants.html#starting-project",
    "title": "1  Genetic Variant Data",
    "section": "",
    "text": "1.1.1 Locate Data\nOn TACC, the data are stored underneath the releases. For example, data release v2.1.0 is underneath\n/corral-secure/projects/A2CPS/products/consortium-data/pre-surgery-release-2-1-0/omics/gene_variants\nThe genetic variant data are underneath the omics/gene_variants folder\n$ ls /corral-secure/projects/A2CPS/products/consortium-data/pre-surgery-release-2-1-0/omics/gene_variants\n2025-06-02_UCSD_GV_Genotypes_Runlists_1-5_QC_freeze2.bed\n2025-06-02_UCSD_GV_Genotypes_Runlists_1-5_QC_freeze2.bim\n2025-06-02_UCSD_GV_Genotypes_Runlists_1-5_QC_freeze2.fam\n2025-06-02_UCSD_GV_Genotypes_Runlists_1-5_QC_freeze2_Imputed_Genomics.bed\n2025-06-02_UCSD_GV_Genotypes_Runlists_1-5_QC_freeze2_Imputed_Genomics.bim\n2025-06-02_UCSD_GV_Genotypes_Runlists_1-5_QC_freeze2_Imputed_Genomics.fam\n2025-06-02_UCSD_GV_Genotypes_Runlists_1-5_QC_freeze2_Imputed_Genomics.log\n2025-06-02_UCSD_GV_Genotypes_Runlists_1-5_QC_freeze2.log\n2025-06-02_UCSD_GV_Genotypes_Runlists_1-5_QC_freeze2.nosex\n2025-06-02_UCSD_GV_Genotypes_Runlists_1-5_QC_freeze2_PCA_Ind_Info.csv\nThese files are in the PLINK format.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Genetic Variant Data</span>"
    ]
  },
  {
    "objectID": "genetic_variants.html#plink-binary-file-set",
    "href": "genetic_variants.html#plink-binary-file-set",
    "title": "1  Genetic Variant Data",
    "section": "1.2 Plink Binary File Set",
    "text": "1.2 Plink Binary File Set\n\n1.2.0.1 .bim\nEach row in this file specifics a genetic variant and provides extended information on its location and alleles.\n$ cd /corral-secure/projects/A2CPS/products/consortium-data/pre-surgery-release-2-1-0/omics/gene_variants\n$ head -5 2025-06-02_UCSD_GV_Genotypes_Runlists_1-5_QC_freeze2.bim\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCHR\nVAR ID\nPOS (cM)\nPOS (bp)\nALLELE 1 (ALT)\nALLELE 2 (REF)\n\n\n\n\n1\nrs9651229\n0\n632287\nT\nC\n\n\n1\nrs9701872\n0\n632828\nC\nT\n\n\n1\nrs11497407\n0\n633147\nA\nG\n\n\n1\nGSA-rs116587930\n0\n792461\nA\nG\n\n\n1\nrs3131972\n0\n817341\nA\nG\n\n\n\n\n\n\n\nCHR = chromosome #\nVar ID\n\nrsID = Reference SNP (single nucleotide polymorphism) ID\nGSA = Global Screening Array\n22:24377823_CNV_GSTT1\n\nFor Variants labeled as such, this ID means CHR:POS:CopyNumberVariant:Gene\n\n\ncM (centimorgan) = measure of the frequency genetic recombination. 1 cM is a 1% chance that two markers on a chr will separate due to recombination during meiosis. Often not included.\nbp (base-pair) = The genomic position on a given chromosome.\nAllele 1 = reference, major allele\nAllele 2 = alternate, minor allele\n\n\n\n1.2.0.2 .fam\nEach row in this file specifics a participant and provides extended information on its identifiers, family, and gender.\n$ head -5 2025-06-02_UCSD_GV_Genotypes_Runlists_1-5_QC_freeze2.fam\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFamily ID\nIndividual ID\nFather ID\nMother ID\nSex\nPhenotype\n\n\n\n\n1\nP3VO69LyyV2AZ_L27BDmybNy8zN\n0\n0\n1\n-9\n\n\n2\n74n6ZMnXd3WmA_L27BDmybNy8zN\n0\n0\n1\n-9\n\n\n3\nPx3x6X3gWBNA1_L27BDmybNy8zN\n0\n0\n2\n-9\n\n\n4\neyPoDR1qoJegX_L27BDmybNy8zN\n0\n0\n1\n-9\n\n\n5\n74m9r0BKoMxk3_L27BDmybNy8zN\n0\n0\n1\n-9\n\n\n\n\n\n\n\nFamily ID (FID) = identifier for the participant’s family\nIndividual ID (IID) = identifier for the participant, in the form biospecimenID_runlistID\nFather ID (FaID) = identifier for the participant’s father. A2CPS not ascertained based on family structure.\nMother ID (MoID) = identifier for the participant’s mother. A2CPS not ascertained based on family structure.\nSex = 1 : M, 2 : F\nPhenotype = 1 = Control, 2 = Case, 0/-9 if not present. Often not included.\n\n\n\n1.2.0.3 .bed\nA binary file, unviewable through command line commands such as “cat”. This contains each participant’s genotype data. Stored as bytes:\n00 Homozygous for first allele in .bim file\n01 Missing genotype\n10 Heterozygous\n11 Homozygous for second allele in .bim file\nTo see all files types in plink, go here: File format reference - PLINK 1.9.\n\n\n\n1.2.1 Extract Data\nTo access the variant data, plink2 (or plink 1.9) must be installed. Please see: PLINK 2.0 or PLINK 1.9.\nHere, we are storing a set of genetic variants from our primary biomarker list in a text file called ‘snps.txt’. Since we specifically probed these sites, they have longer, study-specific identifiers. By contrast, a typical SNP is assigned a reference SNP ID (rsID), which usually takes the form rs followed by a number, such as rs1, rs105, or rs123456789.\n$ cat snps.txt \nilmnseq_rs1799971_ilmndup1,ilmnseq_rs1799971_ilmndup2,rs1799971\nilmnseq_rs6265_ilmndup1,ilmnseq_rs6265_ilmndup2,rs6265\nilmnseq_rs1491850_ilmndup1,ilmnseq_rs1491850_ilmndup2,rs1491850\nThe plink command can then use that file to create a table of the minor allele frequencies for a given set of genetic loci. –bfile is a very common flag in plink, as it is the input binary files (.bim, .bed, .fam) for a given filtering step.\n$ ./plink \\\n  --bfile 2025-06-02_UCSD_GV_Genotypes_Runlists_1-5_QC_freeze2 \\\n  --extract snps.txt \\\n  --freq \\\n  --out snp_frequencies \nHere is the resulting table:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCHR\nSNP\nA1\nA2\nMAF\nNCHROBS\n\n\n\n\n6\nilmnseq_rs1799971_ilmndup1,ilmnseq_rs1799971_ilmndup2,rs1799971\nG\nA\n0.1182\n2750\n\n\n11\nilmnseq_rs6265_ilmndup1,ilmnseq_rs6265_ilmndup2,rs6265\nT\nC\n0.1535\n2750\n\n\n11\nilmnseq_rs1491850_ilmndup1,ilmnseq_rs1491850_ilmndup2,rs1491850\nC\nT\n0.3760\n2750\n\n\n\n\n\n\n\nCHR = chromosome number\nSNP = SNP identifier\nA1 = minor (alternate) allele\nA2 = major (reference) allele\nMAF = minor allele frequency (calculated # minor allele observations / # total allele observations)\nNCHROBS = total number of allele observations (2 * number of participants)",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Genetic Variant Data</span>"
    ]
  },
  {
    "objectID": "genetic_variants.html#quality-control",
    "href": "genetic_variants.html#quality-control",
    "title": "1  Genetic Variant Data",
    "section": "1.3 Quality Control",
    "text": "1.3 Quality Control\nThe below procedures were performed with these data:\nRL1-5.bim\nRL1-5.fam\nRL1-5.bed\n\n1.3.1 Overall Filters\n\nParticipants with &gt; 2% missing genotype calls were removed. In cases of duplicated samples or sibling pairs, one individual from each pair was excluded to avoid overrepresentation of shared genotypes. The individual with lower data quality was preferentially dropped.\nVariants with missing genotype calls in more than 20% of participants were excluded.\nFor the X and Y chromosomes, biologically impossible calls were removed — including heterozygous calls in males (who are hemizygous for these chromosomes) and non-missing Y chromosome calls in females.\n\n\n\n1.3.2 Considerations while working with these data\n\nWe used a relatively liberal –geno 0.2 filter to retain as many variants as possible. Many studies adopt stricter thresholds (e.g., –geno 0.1 or lower), but we prioritized inclusivity of data in this stage of QC.\nWe intentionally did not apply a Hardy-Weinberg equilibrium (–hwe) filter. Principal component analysis (PCA) revealed population structure, and applying HWE filtering across pooled subpopulations can lead to inflated Type I error rates due to the Wahlund effect. This occurs when heterozygosity is overestimated across stratified populations (since there are actually more homozygotes in each subpopulation), causing variants to falsely appear as deviating from equilibrium. If desired, users may stratify the data by major ancestry groups and apply HWE filtering within those subsets.\nWe also chose not to filter on minor allele frequency (–maf) to leave this decision to the end user, depending on whether they are interested in rare or common variants. Common –maf thresholds include 0.05 or 0.01. Note that population structure can influence allele frequency distributions — a variant rare in the total sample may be common within a subpopulation.\nThe pseudo-autosomal region (PAR) of the X chromosome is often excluded in X chromosome-specific analyses, as it behaves more like an autosome. We leave this decision to researchers conducting such analyses. To perform this separation, a typical command is:\n\n./plink --bfile path/to/x-chr --split-x hg38 --make-bed --out path/to/split-off-PAR-x-chr\n\nMany study designs, such as polygenic risk score calculations, must be cognizant of population structure.\n\n\n\n1.3.3 Quality Control Code\n\n\nClick to show Quality Control Bash Script, which utilizes Plink 1.9\n\n\nmkdir plots\nmkdir helpers\nmkdir qc_derivatives\n\n# Step 1: Split files into individual chromosomes\nmkdir qc_derivatives/1_by_chr\nfor chr in {1..26}; do\n./plink --bfile RL1-5 --chr $chr --make-bed --out qc_derivatives/1_by_chr/RL1-5_chr${chr}\ndone\n\n# Step 2: Obtain Variant and Individual Level Summary Statistics on Each Chromosome's Data\nmkdir qc_derivatives/2_summary_stats\nfor chr in {1..22}; do \n./plink --bfile qc_derivatives/1_by_chr/RL1-5_chr${chr} --keep-allele-order --missing --freq --hardy --out qc_derivatives/2_summary_stats/RL1-5_ss_chr${chr}; \ndone\n\n# 2.1: RScript to assess which participants &gt; 2% missingness \nRscript ./scripts/missingness.samples.r \"$USER_WD\"\n\n# Step 3: Drop individuals with high missingness\nmkdir qc_derivatives/3_ind_missingness_dropped\nfor chr in {1..22}; do \n./plink --bfile qc_derivatives/1_by_chr/RL1-5_chr${chr}  --remove helpers/A2CPS_Ind_Missingness_Drop.txt --keep-allele-order --make-bed --out qc_derivatives/3_ind_missingness_dropped/RL1-5_chr${chr}_ind_missingness_dropped; \ndone\n\n# Step 4: Variant Quality Control based on Missingness (maf filtering avoided, users choice. hwe filtering avoided, wahlund effect)\nmkdir qc_derivatives/4_variant_filtered\nfor chr in {1..22}; do \n./plink --bfile qc_derivatives/3_ind_missingness_dropped/RL1-5_chr${chr}_ind_missingness_dropped --keep-allele-order --geno 0.2 --write-snplist --make-bed --out qc_derivatives/4_variant_filtered/RL1-5_chr${chr}_variant_filtered; \ndone\n\n# Step 5 / 6: LD Pruning\nmkdir qc_derivatives/5_LD_Pruning\nfor chr in {1..22}; do \n    ./plink --bfile qc_derivatives/4_variant_filtered/RL1-5_chr${chr}_variant_filtered --indep-pairwise 100 5 0.2 --out qc_derivatives/5_LD_Pruning/RL1-5_chr${chr}_LD_Pruning; \ndone\nmkdir qc_derivatives/6_LD_Pruned\nfor chr in {1..22}; do \n    ./plink --bfile qc_derivatives/4_variant_filtered/RL1-5_chr${chr}_variant_filtered --extract qc_derivatives/5_LD_Pruning/RL1-5_chr${chr}_LD_Pruning.prune.in --make-bed --out qc_derivatives/6_LD_Pruned/RL1-5_chr${chr}_LD_Pruned; \ndone\n\n# Step 7: Merge\nmkdir qc_derivatives/7_Merged\nfor i in {1..22}; do echo qc_derivatives/6_LD_Pruned/RL1-5_chr${i}_LD_Pruned; done &gt; helpers/RL1-5_chr_LD_Pruned_list.txt\n./plink --bfile qc_derivatives/6_LD_Pruned/RL1-5_chr1_LD_Pruned --merge-list helpers/RL1-5_chr_LD_Pruned_list.txt --make-bed --out qc_derivatives/7_Merged/RL1-5_Merged\n\n# Step 8: Heterozygosity Checks\n./plink --bfile qc_derivatives/7_Merged/RL1-5_Merged --het --out qc_derivatives/7_Merged/RL1-5_Merged_Het\n\n# Step 9: Identity by Descent Checks - if related or duplicates exist, one of the family-members (the one with worse quality) must be dropped.\n./plink --bfile qc_derivatives/7_Merged/RL1-5_Merged --genome --threads 1 --out qc_derivatives/7_Merged/RL1-5_Merged_IBD\n\n# 9.1: RScripts to identify participants to drop based on heterozygosity and poorer-quality related sample\n\nRscript ./scripts/het.genome.r \"$USER_WD\"\nRscript ./scripts/missingness.related.comparison.r \"$USER_WD\"\n\n### Step 10: Sex Typing ###\n    mkdir qc_derivatives/sex_typing\n\n    # create list of individuals to be dropped prior to sex typing, those with high missingness and poorer-quality related individuals\n    cat helpers/A2CPS_Ind_Missingness_Drop.txt helpers/A2CPS_related_drop.txt  &gt; helpers/A2CPS_Pre_Sex_Typing_Sample_Drops.txt\n\n    # Step a: Drop Samples that did not pass QC\n    mkdir qc_derivatives/sex_typing/samples_dropped\n    ./plink --bfile qc_derivatives/1_by_chr/RL1-5_chr23 --remove helpers/A2CPS_Pre_Sex_Typing_Sample_Drops.txt --keep-allele-order --make-bed --out qc_derivatives/sex_typing/samples_dropped/RL1-5_chr23_samples_dropped; \n\n    # Step b: Split off X Chr pseudo-autosomal region (whose inheritance patterns mirror those of the autosomes) [chr25]\n    mkdir qc_derivatives/sex_typing/PAR_Removed\n    ./plink --bfile qc_derivatives/sex_typing/samples_dropped/RL1-5_chr23_samples_dropped --split-x hg38 --make-bed --out qc_derivatives/sex_typing/PAR_Removed/RL1-5_chr23_PAR_Removed\n\n    # Step c: LD Pruning \n    mkdir qc_derivatives/sex_typing/LD_Pruning\n    ./plink --bfile qc_derivatives/sex_typing/PAR_Removed/RL1-5_chr23_PAR_Removed --indep-pairphase 100 5 0.2 --out qc_derivatives/sex_typing/LD_Pruning/RL1-5_chr23_LD_Pruning\n    mkdir qc_derivatives/sex_typing/LD_Pruned\n    ./plink --bfile qc_derivatives/sex_typing/PAR_Removed/RL1-5_chr23_PAR_Removed --extract qc_derivatives/sex_typing/LD_Pruning/RL1-5_chr23_LD_Pruning.prune.in --make-bed --out qc_derivatives/sex_typing/LD_Pruned/RL1-5_chr23_LD_Pruned\n\n    # Step d: MAF Estimates\n    mkdir qc_derivatives/sex_typing/MAF\n    ./plink --bfile qc_derivatives/sex_typing/LD_Pruned/RL1-5_chr23_LD_Pruned --freq --out qc_derivatives/sex_typing/MAF/RL1-5_chr23_LD_Pruned_MAF\n\n    # Step e: Sex Check\n    ./plink --bfile qc_derivatives/sex_typing/LD_Pruned/RL1-5_chr23_LD_Pruned  --read-freq qc_derivatives/sex_typing/MAF/RL1-5_chr23_LD_Pruned_MAF.frq --check-sex 0.3 0.75 --out qc_derivatives/sex_typing/sex_check\n\n    # Step f: Create Plots and create list of participants to drop, where we were unable to resolve the sex discrepancies with REDCap or EHR data.\n    Rscript ./scripts/sex.typing.r \"$USER_WD\"\n\n# Step 11: Return to pre-LD-Pruned files and merge. \nmkdir qc_derivatives/8_Merged_Pre_LD\nfor i in {1..22}; do echo qc_derivatives/4_variant_filtered/RL1-5_chr${i}_variant_filtered; done &gt; helpers/RL1-5_chr_Pre_LD_list.txt\n./plink --bfile qc_derivatives/4_variant_filtered/RL1-5_chr1_variant_filtered --merge-list helpers/RL1-5_chr_Pre_LD_list.txt --make-bed --out qc_derivatives/8_Merged_Pre_LD/RL1-5_Merged_Pre_LD\n\n# 11.1: Create comprehensive file with all participant drops so far\ncat helpers/A2CPS_Ind_Missingness_Drop.txt helpers/A2CPS_related_and_sex_discrepancy_drop.txt  &gt; helpers/A2CPS_Pre_Chr_XYMT_QC_Sample_Drops.txt\n\n### X, Y, and MT QC ###\n\n### X Chromosome QC ###\nmkdir X_Chr\n    # Step a: drop samples with high missingness, higher-missingness related samples, and unrecoverable sex typing discrepancies, fix the sex discrepancies\n    mkdir X_Chr/Samples_Dropped\n    ./plink --bfile qc_derivatives/1_by_chr/RL1-5_chr23 --remove helpers/A2CPS_Pre_Chr_XYMT_QC_Sample_Drops.txt --keep-allele-order --make-bed --out X_Chr/Samples_Dropped/RL1-5_chr23_samples_dropped\n    \n    # step b: update sex\n    mkdir X_Chr/Sex_Updated\n    ./plink --bfile  X_Chr/Samples_Dropped/RL1-5_chr23_samples_dropped --update-sex helpers/A2CPS_update_sex.txt --keep-allele-order --make-bed --out X_Chr/Sex_Updated/RL1-5_chr23_Sex_Updated\n    \n    # Step c: Take summary statistics in case necessary to further remove samples\n    mkdir X_Chr/Summary_Stats\n    ./plink --bfile X_Chr/Sex_Updated/RL1-5_chr23_Sex_Updated --missing --freq --out X_Chr/Summary_Stats/RL1-5_chr23_Summary_Stats\n\n    # Step d: Filter out poor-quality variants\n    mkdir X_Chr/Variant_Filtered\n    ./plink --bfile X_Chr/Sex_Updated/RL1-5_chr23_Sex_Updated --geno 0.2 --write-snplist --keep-allele-order --make-bed --out X_Chr/Variant_Filtered/RL1-5_chr23_variant_filtered\n    awk '{print $3}' X_Chr/Variant_Filtered/RL1-5_chr23_variant_filtered.hh | sort -u &gt; X_Chr/Variant_Filtered/hh_snps_x_to_exclude.txt\n\n    # step e: Filter out those included in the .hh file\n    grep -vFf X_Chr/Variant_Filtered/hh_snps_x_to_exclude.txt X_Chr/Variant_Filtered/RL1-5_chr23_variant_filtered.snplist &gt; X_Chr/Variant_Filtered/RL1-5_chr23_variant_filtered.no_hh.snplist\n\n### Y Chromosome QC ###\nmkdir Y_Chr\n    # Step a: drop samples with high missingness, higher-missingness related samples, and unrecoverable sex typing discrepancies \n    mkdir Y_Chr/Samples_Dropped\n    ./plink --bfile qc_derivatives/1_by_chr/RL1-5_chr24 --remove helpers/A2CPS_Pre_Chr_XYMT_QC_Sample_Drops.txt --keep-allele-order --make-bed --out Y_Chr/Samples_Dropped/RL1-5_chr24_samples_dropped\n    \n    # step b: update sex\n    mkdir Y_Chr/Sex_Updated\n    ./plink --bfile  Y_Chr/Samples_Dropped/RL1-5_chr24_samples_dropped --update-sex helpers/A2CPS_update_sex.txt --keep-allele-order --make-bed --out Y_Chr/Sex_Updated/RL1-5_chr24_Sex_Updated\n    \n    # Step c: Take summary statistics in case necessary to further remove samples\n    mkdir Y_Chr/Summary_Stats\n    ./plink --bfile Y_Chr/Sex_Updated/RL1-5_chr24_Sex_Updated --missing --freq --out Y_Chr/Summary_Stats/RL1-5_chr24_Summary_Stats\n\n    # Step d: Filter out poor-quality variants\n    mkdir Y_Chr/Variant_Filtered\n    ./plink --bfile Y_Chr/Sex_Updated/RL1-5_chr24_Sex_Updated --geno 0.2 --keep-allele-order --write-snplist --make-bed --out Y_Chr/Variant_Filtered/RL1-5_chr24_variant_filtered\n    awk '{print $3}' Y_Chr/Variant_Filtered/RL1-5_chr24_variant_filtered.hh | sort -u &gt; Y_Chr/Variant_Filtered/hh_snps_y_to_exclude.txt\n\n    # step e: Filter out those included in the .hh file\n    grep -vFf Y_Chr/Variant_Filtered/hh_snps_y_to_exclude.txt Y_Chr/Variant_Filtered/RL1-5_chr24_variant_filtered.snplist &gt; Y_Chr/Variant_Filtered/RL1-5_chr24_variant_filtered.no_hh.snplist\n\n### Mitochondrial DNA ###\nmkdir MT_Chr\n    # Step a: drop samples with high missingness, higher-missingness related samples, and unrecoverable sex typing discrepancies \n    mkdir MT_Chr/Samples_Dropped\n    ./plink --bfile qc_derivatives/1_by_chr/RL1-5_chr26 --remove helpers/A2CPS_Pre_Chr_XYMT_QC_Sample_Drops.txt --keep-allele-order --make-bed --out MT_Chr/Samples_Dropped/RL1-5_chr26_samples_dropped\n\n    # step b: update sex\n    mkdir MT_Chr/Sex_Updated\n    ./plink --bfile  MT_Chr/Samples_Dropped/RL1-5_chr26_samples_dropped --update-sex helpers/A2CPS_update_sex.txt --keep-allele-order --make-bed --out MT_Chr/Sex_Updated/RL1-5_chr26_Sex_Updated\n    \n    # Step c: Take summary statistics in case necessary to further remove samples\n    mkdir MT_Chr/Summary_Stats\n    ./plink --bfile MT_Chr/Sex_Updated/RL1-5_chr26_Sex_Updated --missing --freq --out MT_Chr/Summary_Stats/RL1-5_chr26_Summary_Stats\n\n    # Step d: Filter out poor-quality variants\n    mkdir MT_Chr/Variant_Filtered\n    ./plink --bfile MT_Chr/Sex_Updated/RL1-5_chr26_Sex_Updated --geno 0.2 --keep-allele-order --write-snplist --make-bed --out MT_Chr/Variant_Filtered/RL1-5_chr26_variant_filtered\n\n## LIST OF INDIVIDUALS TO DROP ##\ncat helpers/A2CPS_Ind_Missingness_Drop.txt helpers/A2CPS_related_and_sex_discrepancy_drop.txt &gt; A2CPS_RL1-5_Preparation_Files/A2CPS_RL1-5_Final_Sample_Drop_List.txt\n\n## LIST OF SNPs TO KEEP ##\ncat qc_derivatives/4_variant_filtered/RL1-5_chr{1..22}_variant_filtered.snplist X_Chr/Variant_Filtered/RL1-5_chr23_variant_filtered.no_hh.snplist Y_Chr/Variant_Filtered/RL1-5_chr24_variant_filtered.no_hh.snplist  MT_Chr/Variant_Filtered/RL1-5_chr26_variant_filtered.snplist &gt; A2CPS_RL1-5_Preparation_Files/RL1-5_all_chr_variant_filtered.snplist\n\n## LIST OF SEXES TO UPDATE ##\ncp helpers/A2CPS_update_sex.txt A2CPS_RL1-5_Preparation_Files/A2CPS_RL1-5_Update_Sex_List.txt \n\n# USE THIS LINE TO OBTAIN FINAL FILES QC FIles, still with participants outside of Freeze 2 ##\nmkdir ./A2CPS_RL1-5_QCed\n./plink --bfile RL1-5 --remove A2CPS_RL1-5_Preparation_Files/A2CPS_RL1-5_Final_Sample_Drop_List.txt --extract A2CPS_RL1-5_Preparation_Files/RL1-5_all_chr_variant_filtered.snplist --update-sex A2CPS_RL1-5_Preparation_Files/A2CPS_RL1-5_Update_Sex_List.txt --keep-allele-order --make-bed --out A2CPS_RL1-5_QCed/A2CPS_RL1-5_QCed\n\n########################\n## FINAL FOR RELEASE: ##\n########################\n\n# Subset only Freeze 2 #\nRscript ./A2CPS_RL1-5_QCed/Freeze2.R \"$USER_WD\"\nmkdir Freeze_2\n./plink --bfile RL1-5 --remove A2CPS_RL1-5_Preparation_Files/A2CPS_RL1-5_Final_Sample_Drop_List_Only_Freeze_2.txt --extract A2CPS_RL1-5_Preparation_Files/RL1-5_all_chr_variant_filtered.snplist --update-sex A2CPS_RL1-5_Preparation_Files/A2CPS_RL1-5_Update_Sex_List.txt --keep-allele-order --make-bed --out Freeze_2/A2CPS_Freeze_2\n\n\n1.3.3.1 Supplementary QC Files: RScripts\n\n\nClick to show Supplementary RScript #1: Determining High Missingness Individuals (missingness.samples.r)\n\nlibrary(data.table)\ncombined_data &lt;- data.frame()\n\nargs &lt;- commandArgs(trailingOnly = TRUE)\nuser_wd &lt;- args[1]\nsetwd(user_wd)\n\n# read in and combine .imiss file (individual-level missingness)\nfor (i in 1:22) {\n  file_name &lt;- sprintf(\"./qc_derivatives/2_summary_stats/RL1-5_ss_chr%d.imiss\", i)\n  current_data &lt;- read.table(file_name, header = TRUE)\n  combined_data &lt;- rbind(combined_data, current_data)\n}\n\n# DAT HAS EACH MISSING CALL RATE (22 per participant)\ndat &lt;- combined_data$\"F_MISS\" \nnumber.geno &lt;- combined_data$N_GENO # total genotyped SNPs across autosomes\nnumber.missed &lt;- combined_data$N_MISS # total missed SNPs across autosomes across participants\nmatrix.geno &lt;- matrix(number.geno,ncol=22)\nsummed.geno &lt;- sum(matrix.geno[1,]) # total autosomal SNPs\nmatrix.missed &lt;- matrix(number.missed,ncol=22)\n\nindividual.missed.percent &lt;- rowSums(matrix.missed) / summed.geno\n\nmissingness.table &lt;-  data.table(\n  FAMID = current_data$FID,\n  ID = current_data$IID,\n  Missingness = individual.missed.percent\n)\n\nfwrite(missingness.table, \"./helpers/A2CPS_RL1-5_Missingness.csv\")\n\n# subset those with over %2 missingness\nover.two &lt;- which(individual.missed.percent &gt; 0.02)\nover.two.values &lt;- individual.missed.percent[over.two]\nover.two.missing.SNPs &lt;- rowSums(matrix.missed)[over.two]\nsubject_ID &lt;- combined_data$IID[over.two]\n\nhigh.ind.missingness &lt;- data.table(\n  ID = over.two,\n  SUBJECT_ID = subject_ID,\n  MISSINGNESS = over.two.values,\n  SNPs_MISSED = over.two.missing.SNPs\n)\n\n# table with high missingness individuals for PLINK Dropping\nfor_drop &lt;- high.ind.missingness[, .(ID, SUBJECT_ID)]\nfwrite(for_drop, \"./helpers/A2CPS_Ind_Missingness_Drop.txt\", sep = \" \", col.names = FALSE)\n\n# spaghetti plots across chromosomes\nr &lt;- range(dat)\npdf(\"./plots/missingness.samples.perchr.spaghetti.A2CPS.pdf\",width=9,height=7)\n  par(las=1)\n  tmp &lt;- matrix(dat,ncol=22)\n  plot(c(1,22),r,type=\"n\",xlab=\"chromosome\",ylab=\"% missing\",xaxt=\"n\")\n  axis(1,1:22)\n  for(j in 1:nrow(tmp)) lines(1:22,tmp[j,],col=\"orange\")\ndev.off()\n\n# boxplot sample average\ntmp &lt;- matrix(dat,ncol=22) #temp is a matrix with rows as participants and columns as chr## and cells as FMISS \nz.pm &lt;- apply(tmp,1,mean) # z.pm is a vector with the mean values of FMISS for each participant ie. what is their average FMISS rate across participants\npdf(\"./plots/missingness.samples.averages.A2CPS.pdf\",width=9,height=6)\n  par(mfrow=c(1,2),las=1)\n  boxplot(z.pm)\n  boxplot(z.pm,log=\"y\")\ndev.off()\n\n# percentile missingness plot\nn &lt;- length(z.pm)\npdf(\"./plots/missingness.samples.percentile.A2CPS.pdf\",width=8,height=7)\n  par(mfrow=c(1,1),las=1)\n  plot(c(0.9,1),c(0,0.4),type=\"n\",xlab=\"percentile missingness\",ylab=\"% missing\")\n  abline(h=seq(0,0.1,0.01),lty=\"dotted\",col=\"lightgrey\")\n  lines((1:n)/n,sort(z.pm),type=\"b\",cex=0.5,pch=20)\ndev.off()\n\n\n\nClick to show Supplementary RScript #2: Heterozygosity and Relatedness Checks (het.genome.r)\n\nlibrary(data.table)\nlibrary(ggplot2)\n\nargs &lt;- commandArgs(trailingOnly = TRUE)\nuser_wd &lt;- args[1]\nsetwd(user_wd)\n\n# ---------- TESTING HETEROZYGOSITY ------------\na2cps.h &lt;- fread(\"./qc_derivatives/7_Merged/RL1-5_Merged_Het.het\", stringsAsFactors = F)\ncolnames(a2cps.h) &lt;- c(\"FID\",\"IID\",\"O_HOM\", \"E_HOM\", \"N_NM\",  \"F\")\na2cps.h[,'Het_Rate' := (N_NM - O_HOM)/N_NM]\na2cps.h[, 'Pop' := \"A2CPS\"]\n\ndat2 &lt;- rbind(a2cps.h)\n\np.ht &lt;- ggplot(data=dat2, aes(x=factor(Pop, levels = c(\"A2CPS\")), y=Het_Rate, group=Pop, color=Pop)) + geom_boxplot(outlier.colour = \"red\", show.legend = F) + scale_x_discrete(name = \"Populations\") + scale_y_continuous(name = \"Het Rate\", limits = c(0.0,0.32)) + ggtitle(\"Heterozygosity Rates\") + theme_bw() + theme(axis.text.x=element_text(size=16, color=\"black\",hjust=1), axis.text.y=element_text(size=16, color = \"black\"), axis.title.x = element_text(size=18, face = \"bold\"), axis.title.y = element_text(size=18, face = \"bold\"), panel.background=element_blank(), panel.grid.minor=element_blank(), panel.grid.major=element_blank(), plot.title = element_text(hjust = 0.5, size=20, face = \"bold\"))\nggsave(\"./plots/A2CPS_RL1-5_Het.png\", p.ht, width = 8, height = 6)\n\n# ---------- TESTING PARENTAL RELATEDNESS ------------\nphilippines &lt;- fread(\"./qc_derivatives/7_Merged/RL1-5_Merged_IBD.genome\", stringsAsFactors = F)\nphilippines &lt;- philippines[which(philippines$Z0 != 1)]\n\npng(\"./plots/A2CPS_RL1-5_Relatedness.png\", width=3000, height=2000, res=300)\n  par(pch=16)\n  with(philippines, plot(Z0, Z1, xlim=c(0,1), ylim=c(0,1), type=\"n\", main=\"A2CPS Z1 &gt; 0 Relatedness\"))\n  with(subset(philippines, RT == \"UN\"), points(Z0, Z1, col=1, cex=0.4))\ndev.off()\n\nrelated &lt;- philippines[which(philippines$Z0 &lt; 0.5), ]\nfwrite(related, \"./helpers/A2CPS_RL1-5_related.csv\")\n\n\n\nClick to show Supplementary RScript #3: Determining which Related Participants to Drop (missingness.related.comparison.r)\n\nlibrary(data.table)\n\nargs &lt;- commandArgs(trailingOnly = TRUE)\nuser_wd &lt;- args[1]\nsetwd(user_wd)\n\nmissingness.table &lt;- fread(\"./helpers/A2CPS_RL1-5_Missingness.csv\")\nrelated &lt;- fread(\"./helpers/A2CPS_RL1-5_related.csv\")\n\nrelated_IDs_row1 &lt;- related$FID1\nrelated_IDs_row2 &lt;- related$FID2\nrelated_missingness_row1 &lt;- missingness.table[which(missingness.table$FAMID %in% related_IDs_row1), ]\nrelated_missingness_row2 &lt;- missingness.table[which(missingness.table$FAMID %in% related_IDs_row2), ]\n\n# Reorder to match related_IDs_row1 and related_IDs_row2\ncomp1 &lt;- related_missingness_row1[match(related_IDs_row1, related_missingness_row1$FAMID)]\ncomp2 &lt;- related_missingness_row2[match(related_IDs_row2, related_missingness_row2$FAMID)]\ncomplist &lt;- list()\n  \nfor (ind in seq_len(nrow(comp1))) {\n  related_pair &lt;- c(comp1$FAMID[ind], comp2$FAMID[ind])\n  complist[[ind]] &lt;- related_pair\n}\n\ndrop.list &lt;- vector()\n\nfor (pair in complist) {\n  missingness.1 &lt;- missingness.table$Missingness[pair[1]]\n  missingness.2 &lt;- missingness.table$Missingness[pair[2]]\n  if (missingness.1 &gt; missingness.2) {\n    drop.list &lt;- c(drop.list, pair[1])\n  }\n  else {\n    drop.list &lt;- c(drop.list, pair[2])\n  }\n}\n\nIID &lt;- missingness.table[match(drop.list, missingness.table$FAMID), ]$ID\n\ndrop.table &lt;- data.table(\n  FAMID &lt;- drop.list,\n  IID &lt;- IID\n)\n\n# Drop the higher-missingness related / duplicate individual\nfwrite(drop.table, sep = \" \", col.names =  F,\"./helpers/A2CPS_related_drop.txt\")\n\n\n\nClick to show Supplementary RScript #4: Sex Typing Discrepancy Analysis and Handling of Discrepancies (sex.typing.r)\n\nlibrary(data.table)\nlibrary(ggplot2)\n\nargs &lt;- commandArgs(trailingOnly = TRUE)\nuser_wd &lt;- args[1]\nsetwd(user_wd)\n\nst_Info &lt;- fread(\"qc_derivatives/sex_typing/sex_check.sexcheck\")\nst_Info_df &lt;- as.data.frame(st_Info)\n\nok_df &lt;- st_Info_df[st_Info_df$STATUS == \"OK\", ]\nproblem_df &lt;- st_Info_df[st_Info_df$STATUS == \"PROBLEM\", ]\n\ninfo1_4 &lt;- fread(\"./demographic_data/2025-01-13_UCSD_GV_Genotypes_Runlists_1-4_QC.csv\")[, c(\"subject_guid\",\"individual_file_tag\")]\ninfo5 &lt;- fread(\"./demographic_data/2025-02-11_UCSD_GV_Genotypes_Runlist_5_QC.csv\")[, c(\"subject_guid\",\"individual_file_tag\")]\ninfo_all &lt;- rbind(info1_4, info5)\n\nproblem_IIDs &lt;- problem_df$IID ## The subject IDs of the problematic samples\ninfo_problem_IIDs &lt;- info_all[which(info_all$individual_file_tag %in% problem_IIDs), ]\n  \nmerged_dt &lt;- merge(\n  problem_df, \n  info_problem_IIDs, \n  by.x = \"IID\", \n  by.y = \"individual_file_tag\", \n  all.x = TRUE  \n)\nsetDT(merged_dt)\nmerged_dt[, subject_guid := toupper(as.character(subject_guid))]\n\nredcap &lt;- fread(\"./demographic_data/REDCap/demographics-2025-01-10 (1).csv\")\nredcap.genident &lt;- redcap$genident\nredcap.sex &lt;- redcap$sex\n\nsetDT(redcap)\nmerged_dt &lt;- redcap[, .(guid, genident)][merged_dt, on = .(guid = subject_guid)]\nmerged_dt &lt;- redcap[, .(guid, sex)][merged_dt, on = .(guid = guid)]\n\nehr1 &lt;- fread(\"./demographic_data/EHR/reformatted_ns_clinicals_and_case_characteristics.csv\")[, c(\"guid\", \"sex_ehr\")]\nehr2 &lt;- fread(\"./demographic_data/EHR/reformatted_ru_clinicals_and_case_characteristics.csv\")[, c(\"guid\", \"sex_ehr\")]\nehr3 &lt;- fread(\"./demographic_data/EHR/reformatted_um_clinicals_and_case_characteristics.csv\")[, c(\"guid\", \"sex_ehr\")]\nehr &lt;- rbind(ehr1, ehr2, ehr3)\nmerged_dt &lt;- ehr[, .(guid, sex_ehr)][merged_dt, on = .(guid = guid)]\nsetnames(merged_dt,\n         old = c(\"sex\", \"genident\", \"sex_ehr\"),\n         new = c(\"REDCap: sex\", \"REDCap: genident\", \"EHR: sex_ehr\"))\nmerged_dt[, rescue := ifelse(\n  (SNPSEX != `REDCap: genident` & !is.na(`REDCap: genident`) & is.na(`REDCap: sex`)) |\n    (SNPSEX != `REDCap: sex` & !is.na(`REDCap: sex`) & is.na(`REDCap: genident`)) |\n    (SNPSEX != `REDCap: genident` & SNPSEX != `REDCap: sex` & !is.na(`REDCap: genident`) & !is.na(`REDCap: sex`)),\n  \"NO\",\n  \"YES\"\n)]\n\nmerged_dt_no &lt;- merged_dt[which(merged_dt$rescue == \"NO\"), ]\nmerged_dt_yes &lt;- merged_dt[which(merged_dt$rescue == \"YES\"), ]\n\ndrop_sex_discrepancy &lt;- data.table(\n  ID = merged_dt_no$FID,\n  IID = merged_dt_no$IID\n)\n\nrelated_drop &lt;- fread(\"./helpers/A2CPS_related_drop.txt\")\nsetnames(related_drop, c(\"ID\", \"IID\"))\ndrop_sex_discrepancy_and_related &lt;- rbind(drop_sex_discrepancy, related_drop)\n\nfwrite(drop_sex_discrepancy_and_related, col.names = F, sep = \" \", \"helpers/A2CPS_related_and_sex_discrepancy_drop.txt\")\nupdate_sex &lt;- data.table(\n  ID = merged_dt_yes$FID,\n  IID = merged_dt_yes$IID,\n  Sex = merged_dt_yes$SNPSEX\n)\nfwrite(update_sex, col.names = F, sep = \" \", \"./helpers/A2CPS_update_sex.txt\")\n\n## Graphing\nok_df$LegendStatus &lt;- \"OK\"\nproblem_df$LegendStatus &lt;- \"PROBLEM\"\ncombined_df &lt;- rbind(ok_df, problem_df)\npng(\"./plots/A2CPS_RL1-5_Sex_Typing.png\", width = 3000, height = 2000, res = 300)\n  p &lt;- ggplot() +\n    geom_point(data = ok_df, aes(x = F, y = 0, color = factor(PEDSEX), shape = \"OK\", size = \"OK\", alpha = \"OK\"),\n               position = position_jitter(width = 0, height = 0.1)) +\n    geom_point(data = problem_df, aes(x = F, y = 0, color = factor(PEDSEX), shape = \"PROBLEM\", size = \"PROBLEM\", alpha = \"PROBLEM\"),\n               position = position_jitter(width = 0, height = 0.1)) +\n    scale_color_manual(values = c(\"0\" = \"black\", \"1\" = \"blue\", \"2\" = \"magenta\")) +\n    scale_shape_manual(name = \"Status\", values = c(\"OK\" = 1, \"PROBLEM\" = 19)) +\n    scale_size_manual(name = \"Status\", values = c(\"OK\" = 1, \"PROBLEM\" = 3)) +\n    scale_alpha_manual(name = \"Status\", values = c(\"OK\" = 0.4, \"PROBLEM\" = 0.9)) +\n    labs(title = \"A2CPS Sex Discrepancies\",\n         x = \"F Statistic\",\n         y = \"\",\n         color = \"PEDSEX\") +\n    theme_minimal() +\n    theme(legend.position = \"top\",\n          axis.ticks.y = element_blank(),\n          axis.text.y = element_blank())\n  print(p)\ndev.off()\n\n\n\nClick to show Supplementary RScript #5: Subsetting just Freeze 2 Participants (Freeze2.R)\n\nlibrary(data.table)\n\nargs &lt;- commandArgs(trailingOnly = TRUE)\nuser_wd &lt;- args[1]\nsetwd(user_wd)\nsetwd(\"./A2CPS_RL1-5_QCed/\")\n\ncurrent_biospecimen_id &lt;- sub(\"_.*\", \"\", fread(\"A2CPS_RL1-5_QCed.fam\")$V2)\nfreeze2 &lt;- fread(\"freeze2_ids_ucsd_gv.csv\")$biospecimen_id\n\ndrop_not_in_freeze2_list &lt;- current_biospecimen_id[which(current_biospecimen_id %notin% freeze2)]\n\nfam.file &lt;- fread(\"A2CPS_RL1-5_QCed.fam\")\n\nfam.file[, prefix := sub(\"_.*\", \"\", V2)]\n\nmatched_rows &lt;- fam.file[prefix %in% drop_not_in_freeze2_list, .(V1, V2)]\n\nfwrite(matched_rows, col.names = F, sep = \" \", \"notFreeze2.txt\")\n\nprevious_drops &lt;- fread(\"/Users/sethberke/a2cps.gv.qc.auto/A2CPS_RL1-5_Preparation_Files/A2CPS_RL1-5_Final_Sample_Drop_List.txt\")\n\ntotal_drops &lt;- rbind(matched_rows, previous_drops)\n\nfwrite(total_drops, col.names = F, sep = \" \", \"/Users/sethberke/a2cps.gv.qc.auto/A2CPS_RL1-5_Preparation_Files/A2CPS_RL1-5_Final_Sample_Drop_List_Only_Freeze_2.txt\")\n\n\n\n\n\n1.3.4 Principal Component Analysis\nSystematic differences in ancestry between groups – population stratification – can lead to spurious associations with allele frequencies, and so multiethnic analyses often include genetic principal components to account for the variation imposed by population structure. Here we plotted the PCA values across two axes, and can see distinct populations, which must be accounted for in many study designs, such as polygenic risk score (PRS) calculations.\n\n\nClick to show Principal Components Bash Script, which utilizes Plink 1.9\n\n### Principal Components Analysis ###\n    mkdir principle_components_analysis\n\n    # Step a: LD Pruning window of 50kb, step size 10bp, and r^w threshold of 0.1\n    mkdir principle_components_analysis/LD_Pruning\n    ./plink --bfile ./A2CPS_Freeze_2 --double-id --allow-extra-chr --indep-pairwise 50 10 0.1 --out ./principle_components_analysis/LD_Pruning/a2cps_rl12345_LDPruned\n\n    # Step b: Extract SNPs in equilibrium\n    mkdir principle_components_analysis/LD_Pruned\n    ./plink --bfile ./A2CPS_Freeze_2 --double-id --allow-extra-chr --extract ./principle_components_analysis/LD_Pruning/a2cps_rl12345_LDPruned.prune.in --make-bed --out ./principle_components_analysis/LD_Pruned/a2cps_rl12345_LDPrunedFinal\n\n    # Step c: Derive PCA Eigenvalues and Eigenvectors\n    mkdir principle_components_analysis/PCA\n    ./plink --bfile principle_components_analysis/LD_Pruned/a2cps_rl12345_LDPrunedFinal --double-id --allow-extra-chr  --pca --out principle_components_analysis/PCA/pca_info\n\n    # Step d: Graph Scree and PCA Plots\n    Rscript ./scripts/pca.r \"$USER_WD\"\n\n\n\nClick to show Supplementary RScript #6: Principal Components Analysis (pca.r)\n\n## load required packages\nlibrary(tidyverse)\nlibrary(httr)\nlibrary(writexl)\nlibrary(data.table)\n\nargs &lt;- commandArgs(trailingOnly = TRUE)\nuser_wd &lt;- args[1]\nsetwd(user_wd)\n\nbase_url=\"https://vbr-api.a2cps.cloud\"\nusername &lt;- VBR_Username\npassword &lt;- VBR_Password\nresp = POST(paste(base_url, \"/auth/token\", sep=\"\"), body = list(username=username, password=password), encode = \"form\")\naccess_token = content(resp, as=\"parsed\")$access_token\nresp = GET(paste(base_url, \"/biospecimens/private?offset=0&limit=0\", sep=\"\"), add_headers(authorization=paste(\"Bearer\", access_token)))\nbio &lt;- jsonlite::fromJSON(content(resp, as = \"text\"))\nbioDF &lt;- as.data.table(bio)\nfam &lt;- read.table(\"./Freeze_2/A2CPS_Freeze_2.fam\", header = FALSE)\nbioID_PLINK &lt;- sub(\"_.*\", \"\", fam$V2)\nbioDF_Mapping_Plink &lt;- bioDF[which(bioDF$biospecimen_id %in% bioID_PLINK), ]\n\n# BioID and Race\nbioDF_Mapping_Cols &lt;- bioDF_Mapping_Plink[, c(\"biospecimen_id\",\"race\")]\nfam &lt;- read.table(\"./Freeze_2/A2CPS_Freeze_2.fam\", header = FALSE)\nfam$V2 &lt;- sub(\"_.*\", \"\", fam$V2)\ncolnames(fam) &lt;- c(\"Famid\", \"biospecimen_id\", \"Fatid\", \"Motid\", \"Gender\", \"Phenotype\")\nfam_with_race &lt;- merge(fam, bioDF_Mapping_Cols, by = \"biospecimen_id\", all.x = TRUE)\n\n# PCA\nlibrary(tidyverse)\nsetwd(\"./Freeze_2/principle_components_analysis/PCA\")\npca &lt;- read_table2(\"./pca_info.eigenvec\", col_names = FALSE)\neigenval &lt;- scan(\"./pca_info.eigenval\")\npca$X2 &lt;- sub(\"_.*\", \"\", pca$X2)\npca &lt;- pca[,-1]\nnames(pca)[1] &lt;- \"biospecimen_id\"\nnames(pca)[2:ncol(pca)] &lt;- paste0(\"PC\",1:(ncol(pca)-1))\npca &lt;- merge(pca, bioDF_Mapping_Cols, by = \"biospecimen_id\", all.x = TRUE)\npca &lt;- pca[!duplicated(pca$biospecimen_id), ]\n\n# Subsetting for Graph\nrace &lt;- rep(NA, length(pca$biospecimen_id))\nrace[grep(\"White\", pca$race)] &lt;- \"White\"\nrace[grep(\"African-American\", pca$race)] &lt;- \"Black or African-American\"\nrace[grep(\"Asian\", pca$race)] &lt;- \"Asian\"\nrace[grep(\"American Indian or Alaska Native\", pca$race)] &lt;- \"American Indian or Alaska Native\"\nrace[grep(\"Unknown\", pca$race)] &lt;- \"Unknown\"\nrace[grep(\"Not Reported\", pca$race)] &lt;- \"Not Reported\"\n\npca &lt;- as.tibble(data.frame(pca, race))\npve &lt;- data.frame(PC = 1:20, pve = eigenval/sum(eigenval)*100)\npercent_variance_explained &lt;- pve$pve\n\nsetwd(user_wd)\n\n# Graphing\npng(\"./Freeze_2/principle_components_analysis/PCA/A2CPS_RL1-5_PCA_Scree_Plot.png\", width = 3000, height = 2000, res = 300)\n  a &lt;- ggplot(pve, aes(PC, pve)) + geom_bar(stat = \"identity\")\n  a + ylab(\"Percentage Variance Explained\") + theme_light()\n  print(a)\ndev.off()\n\npng(\"./Freeze_2/principle_components_analysis/PCA/A2CPS_RL1-5_PCA_Plot.png\", width = 3000, height = 2000, res = 300)\nb &lt;- ggplot(pca, aes(PC1, PC2, col = race)) +\n  geom_point(size = 0.075) +\n  coord_fixed() +\n  theme_light() +\n  ggtitle(\"PCA Genetic Ancestry\") +\n  xlab(paste0(\"PC1 (\", signif(pve$pve[1], 3), \"%)\")) + \n  ylab(paste0(\"PC2 (\", signif(pve$pve[2], 3), \"%)\")) +\n  theme(\n    aspect.ratio = 1,\n    plot.margin = margin(0, 0, 0, 0, \"cm\"),\n    axis.title.x = element_text(size = 6, family = \"Arial\"),\n    axis.title.y = element_text(size = 6, family = \"Arial\"),\n    axis.text.x = element_text(size = 4, family = \"Arial\"),\n    axis.text.y = element_text(size = 6, family = \"Arial\"),\n    plot.title = element_text(size = 10, face = \"bold\", hjust = 0.5),\n    legend.text = element_text(size = 6),\n    legend.key.size = unit(0.5, \"cm\")\n  ) +\n  scale_colour_manual(name = \"Ancestry Group\", values = c(\"red\", \"orange\", \"yellow\", \"black\", \"black\", \"purple\"))\nprint(b)\ndev.off()\n\n# PC Values for each participant\npca &lt;- pca[, c(1,2,3,22)]\nfwrite(pca, \"./Freeze_2/principle_components_analysis/PCA/A2CPS_RL1-5_PCA_Ind_Info.csv\")\n\n\n\n\n\n\n\nFigure 1.1: A2CPS PCA Scree Plot\n\n\n\n\n\n\n\n\n\nFigure 1.2: A2CPS PCA Plot\n\n\n\n\n\n\n1.3.5 Sex Typing\nThis procedure confirms the gender of each participant as documented in the study by testing X Chromosome homozygosity levels. Male participants are haploid for the X chromosome whereas females are diploid, thus we expect a high deviation from the genotypes predicted by Hardy-Weinberg equilibrium (HWE) (0/0, 0/1, 1/1) with male participants, as their alleles should exclusively be either 0 or 1 (hemizygous). This deviation is captured by the F Statistic. As a general rule, an F Stat of 0.3 is the maximum seen for females and 0.75 is the minimum for males (as reflected by the chart below). This chart demonstrates the deviation from HWE as we expect ≈ 1 almost always for males, who will consistently deviate from HWE due to X chromosome hemizygosity, and we expect females to have a normal distribution close to around 0 (as they are heterozygous for the x chromosome). We used this chart to visualize sex discrepancies, and checked these against REDCap and EHR data to settle and recover as many sex discrepancies as possible. Refer to supplementary RScript “sex.typing.r” for the code used to generate this graph. In the graph, the blue dots are males, pink are females, and black are cases where sex was undefined in the .fam file.\n\n\n\n\n\n\nFigure 1.3: A2CPS Sex Typing Plot\n\n\n\n\n\n\n1.3.6 Relatedness\nAllele-sharing percentages, determined during identity-by descent analyses, can reveal relatedness between participants, including the presence of duplicate samples. For example, full siblings are expected to share approximately 50% of their SNPs at a single allele (represented by the Z1 value: e.g., both individuals having “A” in genotypes AA and AB) and about 25% of their SNPs at both alleles (Z2 value: e.g., both having AA at a locus). In contrast, duplicate samples should share nearly 100% of their alleles, resulting in a Z2 value close to 1. To avoid bias in genome-wide association studies due to overrepresentation of related or duplicate individuals, we removed one individual from each identified pair, prioritizing the retention of the sample with higher genotype call quality. In the relatedness plot, sibling pairs appear around Z1 ≈ 0.5, while duplicates cluster in the bottom-left corner (Z0 ≈ 0, Z1 ≈ 0, Z2 ≈ 1). See the supplementary R script het.genome.r for the code used to generate this plot.\n\n\n\n\n\n\nFigure 1.4: A2CPS Relatedness Plot\n\n\n\n\n\n\n1.3.7 Imputation\nImputation is the process of statistically inferring whole genome sequences from SNP Array data using haplotype reference panels. For our imputation we used the TOPMed Imputation Server that implements the TOPMed R3 reference panel. View Chapter 2 for imputation details.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Genetic Variant Data</span>"
    ]
  },
  {
    "objectID": "genomic_imputation.html",
    "href": "genomic_imputation.html",
    "title": "2  Imputed Genomics",
    "section": "",
    "text": "2.1 Starting Project\nThis page provides considerations for A2CPS projects that involve the Imputed Genomics Data.\nThe imputed genomic dataset expands single-nucleotide resolution variant data across the human genome, offering deeper and more comprehensive coverage. Genotype imputation aligns SNP array data with ancestry-specific reference haplotypes to infer untyped variants with high confidence. This process can be compared to filling in missing letters in a sentence based on contextual knowledge — for example:\n“T_e l_zy d_g j___ed _ver the _at.”\nFollowing imputation, the dataset increased from 690,126 to 11,016,319 genetic loci, spanning all 22 autosomes and the X chromosome for 1,375 participants. Prior to imputation, data were preprocessed and formatted for compatibility with the Imputation Server. Post-imputation, we applied rigorous quality control, excluding low-confidence variants and those with a minor allele frequency (MAF) below 1%.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Imputed Genomics</span>"
    ]
  },
  {
    "objectID": "genomic_imputation.html#starting-project",
    "href": "genomic_imputation.html#starting-project",
    "title": "2  Imputed Genomics",
    "section": "",
    "text": "2.1.1 Locate Data\nOn TACC, the data are stored underneath the releases. For example, data release v2.1.0 is underneath\n/corral-secure/projects/A2CPS/products/consortium-data/pre-surgery-release-2-1-0/omics/gene_variants\nThe single-nucleotide polymorphisms are underneath the omics/gene_variants folder\n$ ls /corral-secure/projects/A2CPS/products/consortium-data/pre-surgery-release-2-1-0/omics/gene_variants\n2025-06-02_UCSD_GV_Genotypes_Runlists_1-5_QC_freeze2.bed\n2025-06-02_UCSD_GV_Genotypes_Runlists_1-5_QC_freeze2.bim\n2025-06-02_UCSD_GV_Genotypes_Runlists_1-5_QC_freeze2.fam\n2025-06-02_UCSD_GV_Genotypes_Runlists_1-5_QC_freeze2_Imputed_Genomics.bed\n2025-06-02_UCSD_GV_Genotypes_Runlists_1-5_QC_freeze2_Imputed_Genomics.bim\n2025-06-02_UCSD_GV_Genotypes_Runlists_1-5_QC_freeze2_Imputed_Genomics.fam\n2025-06-02_UCSD_GV_Genotypes_Runlists_1-5_QC_freeze2_Imputed_Genomics.log\n2025-06-02_UCSD_GV_Genotypes_Runlists_1-5_QC_freeze2.log\n2025-06-02_UCSD_GV_Genotypes_Runlists_1-5_QC_freeze2.nosex\n2025-06-02_UCSD_GV_Genotypes_Runlists_1-5_QC_freeze2_PCA_Ind_Info.csv\nThese files are in the PLINK format.\nFor more detail on Plink Binary File information and data extraction for genetic variant data, refer to the Genetic Variant starter kit.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Imputed Genomics</span>"
    ]
  },
  {
    "objectID": "genomic_imputation.html#imputation-process",
    "href": "genomic_imputation.html#imputation-process",
    "title": "2  Imputed Genomics",
    "section": "2.2 Imputation Process",
    "text": "2.2 Imputation Process\nThe below procedures were performed with these data:\n2025-06-02_UCSD_GV_Genotypes_Runlists_1-5_QC_freeze2.bed\n2025-06-02_UCSD_GV_Genotypes_Runlists_1-5_QC_freeze2.bim\n2025-06-02_UCSD_GV_Genotypes_Runlists_1-5_QC_freeze2.fam\n(these files originally had base name A2CPS_Freeze_2, as reflected in the code below)\n\n2.2.1 Pre-Imputation Data Preparation\nFollowing the Data Preparation Process as outlined here:\nTOPMed Imputation Server Data Preparation\n\n\nClick to show the Pre-Imputation Data Processing Bash Script, which utilizes Plink 1.9\n\n\nmkdir A2CPS_RL1-5_For_Imputation_F2\n\n  # 1. Subset out Y Chromosome and MT DNA\n    mkdir A2CPS_RL1-5_For_Imputation_F2/Plink_Merged\n    ./plink --bfile Freeze_2/A2CPS_Freeze_2 --chr 1-23 --keep-allele-order --make-bed --out A2CPS_RL1-5_For_Imputation_F2/Plink_Merged/A2CPS_RL1-5_For_Imputation_F2\n    \n  # 2. Run TOPMed Panel Check\n    ./plink --freq --bfile A2CPS_RL1-5_For_Imputation_F2/Plink_Merged/A2CPS_RL1-5_For_Imputation_F2 --out A2CPS_RL1-5_For_Imputation_F2/Plink_Merged/A2CPS_RL1-5_For_Imputation_F2\n    \n    perl HRC-1000G-check-bim-v4.3.0/HRC-1000G-check-bim.pl -b A2CPS_RL1-5_For_Imputation_F2/Plink_Merged/A2CPS_RL1-5_For_Imputation_F2.bim -f A2CPS_RL1-5_For_Imputation_F2/Plink_Merged/A2CPS_RL1-5_For_Imputation_F2.frq -r CreateTOPMed/PASS.Variants.TOPMed_freeze5_hg38_dbSNP.tab -h\n\n    sh ./A2CPS_RL1-5_For_Imputation_F2/Plink_Merged/Run-plink.sh\n\n  # 3. Sort GZ.VCF Files by Genomic Position\n    mkdir A2CPS_RL1-5_For_Imputation_F2/GZ_VCF_By_Chr_Sorted\n    for chr in {1..23}; do\n        bcftools sort ./A2CPS_RL1-5_For_Imputation_F2/Plink_Merged/A2CPS_RL1-5_For_Imputation_F2-updated-chr${chr}.vcf.gz -Oz -o ./A2CPS_RL1-5_For_Imputation_F2/GZ_VCF_By_Chr_Sorted/A2CPS_RL1-5_chr${chr}_sorted.vcf.gz\n    done\n\n  # 4. Add chr in front of chromosome number: \"If your input data is GRCh38/hg38, please ensure chromosomes are encoded with prefix 'chr' (e.g. chr20).\"\n    mkdir A2CPS_RL1-5_For_Imputation_F2/GZ_VCF_By_Chr_Sorted_With_Chr\n    for chr in {1..23}; do\n        zcat ./A2CPS_RL1-5_For_Imputation_F2/GZ_VCF_By_Chr_Sorted/A2CPS_RL1-5_chr${chr}_sorted.vcf.gz | awk 'BEGIN {OFS=\"\\t\"} {if($0 !~ /^#/) $1=\"chr\"$1; print}' | bgzip -c &gt; ./A2CPS_RL1-5_For_Imputation_F2/GZ_VCF_By_Chr_Sorted_With_Chr/A2CPS_RL1-5_chr${chr}_sorted_with_chr.vcf.gz\n    done\n\n\n\n2.2.2 Imputation\nAfter preparing the files, they were run through:\nTOPMed Imputation Pipeline\n\n\n2.2.3 Post-Imputation Quality Control\n\nImputed variants with an imputation quality score (R²) less than 0.3 were excluded.\nImputed variants with minor allele frequencies (MAF) below 0.01 were excluded to remove extremely rare variants.\nImputed variants lacking rsIDs (denoted as ‘.’) or sharing duplicated genomic positions were excluded, as these caused issues during PLINK merging.\n\n\n\n2.2.4 Considerations while working with these data\n\nPopulation Structure still exists\nResearchers can choose to filter out variants based on other, standard QC measures that suit their studies.\n\n\n\nClick to show the Post-Imputation Quality Control Bash Script, which utilizes Plink 1.9\n\n\n# 1. Run post_imputation_qc.R \n\n# This creates update_ids.txt, update_sexes.txt, and chr_${chr}/keep_ranges.txt,\n\n# 2. MAKE Binary Files\nfor chr in {1..22}; do\n  ./plink2 --vcf chr_${chr}/chr${chr}.dose.vcf.gz dosage=DS --make-bed --out chr_${chr}/chr${chr}_dose\ndone\n\n# 3. UPDATE IDs\nfor chr in {1..22}; do\n   ./plink2 --bfile chr_${chr}/chr${chr}_dose --update-ids update_ids.txt --make-bed --out chr_${chr}/chr${chr}_dose_updated_IDs\ndone\n\n# 4. UPDATE SEXES\nfor chr in {1..22}; do\n   ./plink2 --bfile chr_${chr}/chr${chr}_dose_updated_IDs --update-sex update_sexes.txt --make-bed --out chr_${chr}/chr${chr}_dose_updated_sexes\ndone\n\n# 5. Keep variants with (MAF &gt; 0.01 and R2 &gt; 0.3)\nfor chr in {1..22}; do\n  ./plink2 --bfile chr_${chr}/chr${chr}_dose_updated_sexes --extract range chr_${chr}/keep_ranges.txt --make-bed --out chr_${chr}/chr${chr}_dose_qced\ndone\n\n# X CHR #\n# 6. MAKE Binary Files\n./plink2 --vcf chr_X/chrX.dose.vcf.gz dosage=DS --make-bed --update-sex update_sexes_X.txt --out chr_X/chrX_dose\n\n# 7. Update IDs\n./plink2 --bfile chr_X/chrX_dose --make-bed --update-ids update_ids.txt --out chr_X/chrX_updated_IDs\n\n# 8. Keep only variants that passed QC\n./plink2 --bfile chr_X/chrX_updated_IDs --extract range chr_X/keep_ranges.txt --make-bed --out chr_X/chrX_dose_qced\n\n# 9. Rename each file\nmkdir ./Imputation_QCed\nfor chr in {1..22} X; do\n   mv chr_${chr}/chr${chr}_dose_qced.bed Imputation_QCed/chr${chr}_imputed_qced.bed\n   mv chr_${chr}/chr${chr}_dose_qced.bim Imputation_QCed/chr${chr}_imputed_qced.bim\n   mv chr_${chr}/chr${chr}_dose_qced.fam Imputation_QCed/chr${chr}_imputed_qced.fam\n   mv chr_${chr}/chr${chr}_dose_qced.log Imputation_QCed/chr${chr}_imputed_qced.log\ndone\n\n# 10. Identify SNPs that were duplicated during Imputation or have \".\" as their rsID\nduplicate.R\n\n# 11. Drop Duplicate and \".\" SNPs. Merging files for a combined imputed dataset does not function with duplicates for genomic position or identifiers\nmkdir ./Imputation_QCed/No_Duplicates\nfor chr in {1..22} X; do\n   ./plink --bfile Imputation_QCed/chr${chr}_imputed_qced --exclude Imputation_QCed/duplicate_snp_list.txt --make-bed --out Imputation_QCed/No_Duplicates/chr${chr}_No_Duplicates\ndone\n\n# 12. Drop Variants that are impossibly called for X Chromosome\nawk '{print $3}' Imputation_QCed/No_Duplicates/chrX_No_Duplicates.hh | sort -u &gt; Imputation_QCed/hh_snps_x_to_exclude.txt\n./plink --bfile Imputation_QCed/No_Duplicates/chrX_No_Duplicates --exclude Imputation_QCed/hh_snps_x_to_exclude.txt --make-bed --out Imputation_QCed/No_Duplicates/chrX_imputed_qced_no_hh\n\n# 13. Merge Chromosomes 1 - 22, X\nmkdir ./Imputation_QCed/Final\n./plink --bfile Imputation_QCed/No_Duplicates/chr1_No_Duplicates --merge-list Imputation_QCed/a2cps_imputed_qc_merge_list.txt --make-bed --out Imputation_QCed/Final/A2CPS_Imputed_Genomics\n\n\n2.2.4.1 Supplementary QC Files: RScripts\n\n\nClick to show Supplementary RScript #1: Variant-Level QC Based on Quality Metrics(post_imputation_qc.R\n\nlibrary(data.table)\n\nsetwd(\"./Imputation_Results/\")\n\nchromosomes &lt;- c(1:22, \"X\")\nfor (chr in chromosomes) {\n  folder &lt;- paste0(\"chr_\", chr)\n  file_path &lt;- file.path(folder, paste0(\"chr\", chr, \".info.gz\"))\n  \n  dose &lt;- fread(file_path)\n  \n  dose[, c(\"AF\", \"MAF\", \"AVG_CS\", \"R2\") := {\n    af      &lt;- sub(\".*AF=([^;]*).*\", \"\\\\1\", INFO)\n    maf     &lt;- sub(\".*MAF=([^;]*).*\", \"\\\\1\", INFO)\n    avg.cs  &lt;- sub(\".*AVG_CS=([^;]*).*\", \"\\\\1\", INFO)\n    r2      &lt;- sub(\".*R2=([^;]*).*\", \"\\\\1\", INFO)\n    list(as.numeric(af), as.numeric(maf), as.numeric(avg.cs), as.numeric(r2))\n  }]\n  \n  maf.001 &lt;- dose[MAF &gt; 0.01]\n  r2.03 &lt;- maf.001[R2 &gt; 0.3]\n  setnames(r2.03, \"#CHROM\", \"CHROM\", skip_absent=TRUE)\n  r2.03[, chr := sub(\"^chr\", \"\", CHROM)]\n  r2.03[, start := POS]\n  r2.03[, end := POS]\n  \n  keep_ranges &lt;- r2.03[, .(chr, start, end)]\n  \n  fwrite(keep_ranges, file.path(folder, \"keep_ranges.txt\"), sep = \"\\t\", col.names = FALSE, quote = FALSE)\n}\n\n# Update IDs \nfam &lt;- fread(\"./chr_1/chr1_dose.fam\")\n\nOldFID &lt;- fam$V1\nOldIID &lt;- fam$V2\n\nNewFID &lt;- sub(\"^(.*?)_.*\", \"\\\\1\", OldIID)\nNewIID &lt;- sub(\".*?_(.*)\", \"\\\\1\", OldIID)\n\nupdate_ids &lt;- data.table(OldFID, OldIID, NewFID, NewIID)\nfwrite(update_ids, \"update_ids.txt\", sep = \"\\t\", col.names = FALSE, quote = FALSE)\n\n# Update Sexes\nfam.og &lt;- fread(\"./A2CPS_RL1-5_For_Imputation_F2.fam\")\nupdate_sexes &lt;- data.table(fam.og$V1, fam.og$V2, fam.og$V5)\nfwrite(update_sexes, \"update_sexes.txt\", sep = \"\\t\", col.names = FALSE, quote = FALSE)\n\nfam.og &lt;- fread(\"./A2CPS_RL1-5_For_Imputation_F2.fam\")\nfam.now &lt;- fread(\"./chr1_dose.fam\")\nupdate_sexes &lt;- data.table(fam.now$V1, fam.now$V2, fam.og$V5)\nfwrite(update_sexes, \"update_sexes_X.txt\", sep = \"\\t\", col.names = FALSE, quote = FALSE)\n\n\n\nClick to show Supplementary RScript #2: Merge Preparation (duplicate.r)\n\nlibrary(data.table)\nsetwd(\"./Imputation_Results/Imputation_QCed/\")\n\ncombined_data &lt;- data.table(V1=character(), V2=character(), V4=integer())\n\nfor (chr in c(1:22, \"X\")) {\n  file_name &lt;- paste0(\"chr\", chr, \"_imputed_qced.bim\")\n  dt &lt;- fread(file_name, select = c(1,2,4), header = FALSE)\n  combined_data &lt;- rbindlist(list(combined_data, dt), use.names = TRUE, fill = TRUE)\n}\n\ndup_pos &lt;- combined_data[, .N, by=.(V1, V4)][N &gt; 1]\nsnps_dup_pos &lt;- combined_data[dup_pos, on=.(V1, V4), nomatch=0, V2]\ndup_snps &lt;- combined_data[, .N, by=V2][N &gt; 1, V2]\n\nsnps_to_exclude &lt;- unique(c(snps_dup_pos, dup_snps))\n\nfwrite(as.data.table(snps_to_exclude), \"duplicate_snp_list.txt\", col.names = FALSE)",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Imputed Genomics</span>"
    ]
  },
  {
    "objectID": "raw-mri.html",
    "href": "raw-mri.html",
    "title": "3  Raw MRI Data Starter Kit",
    "section": "",
    "text": "3.1 On Starting Project\nThis page describes how to work with the raw MRI data from A2CPS. For background on collection and availability, see the “Imaging Data” section of a2cps.org. The data are provided in a format called the Brain Imaging Data Structure (BIDS)1. The raw data are most useful when you need to run custom preprocessing pipelines. If you do not need custom pipelines, please review the preface for a list of imaging products that have already been calculated.\nOnce downloaded, the data will be stored deep inside the image03 folder.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Raw MRI Data Starter Kit</span>"
    ]
  },
  {
    "objectID": "raw-mri.html#on-starting-project",
    "href": "raw-mri.html#on-starting-project",
    "title": "3  Raw MRI Data Starter Kit",
    "section": "",
    "text": "$ ls image03/corral-secure/projects/A2CPS/products/consortium-data/pre-surgery/mris/bids/ | head\ndataset_description.json\nparticipants.json\nparticipants.tsv\nREADME\nscans.json\nsessions.json\nsub-10003\nsub-10005\nsub-10008\nsub-10010\n\n3.1.1 Extract Data\nThe raw MRI data are organized according to v1.9.0 of the BIDS standard.\nIn BIDS data for individual subjects are stored in folders named “sub-[record_id]”. For an example A2CPS session this format results in the following2:\n2 The tree command is just used here to display the folder structure, and is not required for you to have.$ tree sub-10003\nsub-10003\n├── ses-V1\n│   ├── anat\n│   │   ├── sub-10003_ses-V1_T1w.json\n│   │   └── sub-10003_ses-V1_T1w.nii.gz\n│   ├── dwi\n│   │   ├── sub-10003_ses-V1_dwi.bval\n│   │   ├── sub-10003_ses-V1_dwi.bvec\n│   │   ├── sub-10003_ses-V1_dwi.json\n│   │   └── sub-10003_ses-V1_dwi.nii.gz\n│   ├── fmap\n│   │   ├── sub-10003_ses-V1_acq-dwib0_dir-AP_epi.json\n│   │   ├── sub-10003_ses-V1_acq-dwib0_dir-AP_epi.nii.gz\n│   │   ├── sub-10003_ses-V1_acq-dwib0_dir-PA_epi.json\n│   │   ├── sub-10003_ses-V1_acq-dwib0_dir-PA_epi.nii.gz\n│   │   ├── sub-10003_ses-V1_acq-dwib0_epi.bval\n│   │   ├── sub-10003_ses-V1_acq-dwib0_epi.bvec\n│   │   ├── sub-10003_ses-V1_acq-fmrib0_dir-AP_epi.json\n│   │   ├── sub-10003_ses-V1_acq-fmrib0_dir-AP_epi.nii.gz\n│   │   ├── sub-10003_ses-V1_acq-fmrib0_dir-PA_epi.json\n│   │   └── sub-10003_ses-V1_acq-fmrib0_dir-PA_epi.nii.gz\n│   ├── func\n│   │   ├── sub-10003_ses-V1_task-cuff_run-01_bold.json\n│   │   ├── sub-10003_ses-V1_task-cuff_run-01_bold.nii.gz\n│   │   ├── sub-10003_ses-V1_task-cuff_run-01_events.tsv\n│   │   ├── sub-10003_ses-V1_task-rest_run-01_bold.json\n│   │   ├── sub-10003_ses-V1_task-rest_run-01_bold.nii.gz\n│   │   ├── sub-10003_ses-V1_task-rest_run-02_bold.json\n│   │   └── sub-10003_ses-V1_task-rest_run-02_bold.nii.gz\n│   └── sub-10003_ses-V1_scans.tsv\n└── sub-10003_sessions.tsv\n5 directories, 25 files\nThe raw imaging data are in the (gzip compressed) NIfTI files, and each image is associated with a .json sidecar containing metadata about the scan and acquisition parameters (metadata that subsumes the NIfTI header).\nThe “session” refers to the visit. Currently only the baseline (pre-surgery) data is included, so all sessions have the label “V1”. Information about each participant’s visit is stored in the sub-[record_id]/sub-[record_id]_sessions.tsv file.\nThe pressures that were applied during the CUFF scans are recorded in the sub-[record_id]_ses-[ses_id]_task-cuff_run-[run_id]_events.tsv tables.\nBIDS requires that the diffusion gradient information is stored according to the FSL format, in *bval and *bvec files in the /dwi directory. For details see: Magnetic Resonance Imaging - Brain Imaging Data Structure.\nFiles at the top level of the bids folder contain information that applies to multiple participants. This includes\n\n\n\n\n\n\nFile\nDocumentation\n\n\n\n\nREADME (A2CPS file)\nmodality agnostic files\n\n\nparticipants.tsv (dictionary)\nparticipants file\n\n\nsub-[record_id]_ses-[ses_id]_scans.tsv tables (dictionary)\nscans file\n\n\nsub-[record_id]_sessions.tsv tables (dictionary)\nsessions file\n\n\nsub-[record_id]_ses-[ses_id]_task-cuff_run-[run_id]_events.tsv tables (dictionary)\ntask events\n\n\ndataset_description.json (A2CPS file)\ndataset descriptions\n\n\n\n\n\n\n\n\n3.1.2 Data Quality\nAll raw data have undergone quality review. For details on the review process see A2CPS Imaging Quality Assurance.\nThe resulting overall quality ratings (red/yellow/green) are included in the *scans.tsv files. For example\n$ cat sub-10003/ses-V1/sub-10003_ses-V1_scans.tsv \nfilename    rating\nfunc/sub-10003_ses-V1_task-cuff_run-01_bold.nii.gz  green\ndwi/sub-10003_ses-V1_dwi.nii.gz green\nfunc/sub-10003_ses-V1_task-rest_run-01_bold.nii.gz  green\nfunc/sub-10003_ses-V1_task-rest_run-02_bold.nii.gz  green\nanat/sub-10003_ses-V1_T1w.nii.gz    green\nfmap/sub-10003_ses-V1_acq-fmrib0_dir-AP_epi.nii.gz  n/a\nfmap/sub-10003_ses-V1_acq-fmrib0_dir-PA_epi.nii.gz  n/a\nfmap/sub-10003_ses-V1_acq-dwib0_dir-AP_epi.nii.gz   n/a\nfmap/sub-10003_ses-V1_acq-dwib0_dir-PA_epi.nii.gz   n/a\nFor a description of the reviews, see the scans.json data dictionary. Re-evaluation of quality and inclusion/exclusion criteria in the context of a specific analysis is always reasonable, but we would advise against including scans labeled “red” in most analyses.\nNote that some “cuff” scans were collected without cuff inflation. These scans can be identified by the “applied_pressure” column of the *events.tsv file. For example\n$ grep -b1 -HP \"0\\t450\\t0\" sub-*/ses-V1/func/*events.tsv | head -n 9\nsub-10077/ses-V1/func/sub-10077_ses-V1_task-cuff_run-01_events.tsv-0-onset  duration    applied_pressure\nsub-10077/ses-V1/func/sub-10077_ses-V1_task-cuff_run-01_events.tsv:32:0 450 0\n--\nsub-10077/ses-V1/func/sub-10077_ses-V1_task-cuff_run-02_events.tsv-0-onset  duration    applied_pressure\nsub-10077/ses-V1/func/sub-10077_ses-V1_task-cuff_run-02_events.tsv:32:0 450 0\n--\nsub-10103/ses-V1/func/sub-10103_ses-V1_task-cuff_run-01_events.tsv-0-onset  duration    applied_pressure\nsub-10103/ses-V1/func/sub-10103_ses-V1_task-cuff_run-01_events.tsv:32:0 450 0",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Raw MRI Data Starter Kit</span>"
    ]
  },
  {
    "objectID": "raw-mri.html#considerations-while-working-on-project",
    "href": "raw-mri.html#considerations-while-working-on-project",
    "title": "3  Raw MRI Data Starter Kit",
    "section": "3.2 Considerations While Working on Project",
    "text": "3.2 Considerations While Working on Project\n\n3.2.1 Data Generation\nEach scanner’s manufacturer-specific algorithms and software are used for the reconstruction of image data from k-space (k-space data were not saved). The reconstructed images are exported in the Digital Imaging and Communications in Medicine (DICOM) format and sent electronically from participating sites to the Texas Advanced Computing Center (TACC). Following the Organization for Human Brain Mapping Committee on Best Practices in Data Analysis and Sharing report (Nichols et al., 2017), the DICOM files are converted into the Neuroimaging Informatics Technology Initiative (NIfTI) 1 format (Cox et al., 2004) and organized according to the BIDS specification (Gorgolewski et al., 2016). For this conversion, the pipeline uses HeuDiConv (Halchenko et al., 2024), which in turn uses dcm2niix (Li et al., 2016). Conversion relies on the ReproIn heuristic file (Visconti di Oleggio Castello et al., 2023), modified to encode the sequence and file naming conventions developed for the A2CPS project. The original DICOMs are stored for posterity but are not included in data releases. For additional details, see Sadil et al. (2024).\n\nNichols, T. E., Das, S., Eickhoff, S. B., Evans, A. C., Glatard, T., Hanke, M., Kriegeskorte, N., Milham, M. P., Poldrack, R. A., Poline, J.-B., et al. (2017). Best practices in data analysis and sharing in neuroimaging using MRI. Nature Neuroscience, 20(3), 299–303. https://doi.org/10.1038/nn.4500\n\nCox, R. W., Ashburner, J., Breman, H., Fissell, K., Haselgrove, C., Holmes, C. J., Lancaster, J. L., Rex, D. E., Smith, S. M., Woodward, J. B., et al. (2004). A (sort of) new image data format standard: NiFTI-1. 10th Annual Meeting of the Organization for Human Brain Mapping, 22, 01. https://nifti.nimh.nih.gov/pub/dist/doc/hbm_nifti_2004.pdf\n\nGorgolewski, K. J., Auer, T., Calhoun, V. D., Craddock, R. C., Das, S., Duff, E. P., Flandin, G., Ghosh, S. S., Glatard, T., Halchenko, Y. O., et al. (2016). The brain imaging data structure, a format for organizing and describing outputs of neuroimaging experiments. Scientific Data, 3(1), 1–9. https://doi.org/10.1038/sdata.2016.44\n\nHalchenko, Y. O., Goncalves, M., Ghosh, S., Velasco, P., Oleggio Castello, M. V. di, Salo, T., Wodder, J. T., Hanke, M., Sadil, P., Gorgolewski, K. J., et al. (2024). HeuDiConv—flexible DICOM conversion into structured directory layouts. Journal of Open Source Software, 9(99), 5839. https://doi.org/10.21105/joss.05839\n\nLi, X., Morgan, P. S., Ashburner, J., Smith, J., & Rorden, C. (2016). The first step for neuroimaging data analysis: DICOM to NIfTI conversion. Journal of Neuroscience Methods, 264, 47–56. https://doi.org/10.1016/j.jneumeth.2016.03.001\n\nVisconti di Oleggio Castello, M., Dobson, J. E., Sackett, T., Kodiweera, C., Haxby, J. V., Goncalves, M., Ghosh, S., & Halchenko, Y. O. (2023). ReproNim/reproin: 0.11.6.2. Zenodo. https://doi.org/10.5281/ZENODO.7975330\nAll MRI pipeline code is available through github: https://github.com/a2cps/mri_imaging_pipeline. Note that the code used to generate the BIDS derivatives has been updated several times (e.g., the same version of dcm2niix was not used to convert all participants). The specific version of the conversion code is stored in the GeneratedBy field of the dataset_description.json, with entries like\n{\n  \"CodeUrl\": \"https://github.com/a2cps/mri_imaging_pipeline\",\n  \"Container\": {\n    \"Tag\": \"221121\",\n    \"Type\": \"Docker\",\n    \"URI\": \"docker://psadil/heudiconv:221121\"\n  },\n  \"Description\": \"WS20207V1\",\n  \"Name\": \"heudiconv_app\",\n  \"Version\": \"urrutia-heudiconv-0.11.6\"\n} \nThis indicates that the presurgery scan session for participant 20207 (who happens to have been collected at Wayne State) was converted with the heudiconv_app version 0.11.6. That version is recorded here. This version of the app used the docker image psadil/heudiconv:221121.\n\n\n3.2.2 Skull-Stripping for Privacy\nPrior to release, all T1w images are skull-stripped using brain masks from the fMRIPrep pipeline. All DIRC processing is carried out using unmodified raw images, which is recommended for many measures like cortical thickness.\n\n\n3.2.3 Acquisition Protocol Variation\nOver the course of the project, individual scanners have occasionally needed upgrading. For a timeline of acquisition changes, see: Timeline of Imaging Acquisition Changes.\nOccasionally, scans were collected with acquisition parameters that differed from the standards listed in the A2CPS Tech Manual. For a review of the kinds of deviations that have been observed, see Imaging Log - Problem Cases. In general, preprocessing pipelines should not assume that there is consistency in the acquisition parameters across participants (even in participants from the same site), and in all cases, the metadata within the json sidecars should be referenced as the best source of information on these parameters.\n\n\n3.2.4 Software Packages for Working with BIDS\nSeveral packages in multiple languages have been developed to simplify interacting with BIDS. For a complete list, see: Benefits, a subset of which is copied below\n\nbids-matlab: MATLAB/Octave tools to interact with datasets conforming to the BIDS format\nbidser: Working with Brain Imaging Data Structure in R\nPyBIDS: Python package to quickly parse / search the components of a BIDS dataset. It also contains functionality for running analyses on your data\n\n\n\n3.2.5 Joining with Other Modalities\nA2CPS relies on several different schemes for labeling and describing metadata entities. For example, across modalities, participants are identified by Record ID, Subject GUID, Individual ID, and NDA GUID. For more details on how these identifiers relate, see Appendix B.\n\n\n3.2.6 Citations\nIf you use the imaging data in your research, please cite the imaging pipeline preprint: Sadil et al. (2024).\n\n\n\nSadil, P., Arfanakis, K., Bhuiyan, E. H., Caffo, B., Calhoun, V. D., Clauw, D. J., DeLano, M. C., Ford, J. C., Gattu, R., Guo, X., Harris, R. E., Ichesco, E., Johnson, M. A., Jung, H., Kahn, A. B., Kaplan, C. M., Leloudas, N., Lindquist, M. A., Luo, Q., … Chronic Pain Signatures Consortium, T. A. to. (2024). Image processing in the acute to chronic pain signatures (A2CPS) project. bioRxiv. https://doi.org/10.1101/2024.12.19.627509",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Raw MRI Data Starter Kit</span>"
    ]
  },
  {
    "objectID": "freesurfer.html",
    "href": "freesurfer.html",
    "title": "4  FreeSurfer Measures",
    "section": "",
    "text": "4.1 Starting Project\nThis kit will use both shell and R\nlibrary(readr)\nlibrary(dplyr)\nlibrary(tidyr)",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>FreeSurfer Measures</span>"
    ]
  },
  {
    "objectID": "freesurfer.html#starting-project",
    "href": "freesurfer.html#starting-project",
    "title": "4  FreeSurfer Measures",
    "section": "",
    "text": "4.1.1 Locate data\nIn the release folder, data are stored underneath the mris/derivatives folder:\n\n/corral-secure/projects/A2CPS/products/consortium-data/pre-surgery/mris/derivatives/freesurfer\n\nThis folder contains all of the FreeSurfer outputs for every participant (e.g., this is the directory that could correspond to the FreeSurfer environment variable $SUBJECTS_DIR), which subject folders of the form sub-[recordid]_ses-[protocolid].\nMost users will not need the raw FreeSurfer outputs and can instead rely on tables in which the morphological measures have been aggregated. There are three relevant tables\n\naparc.tsv has the outputs of aparcstats2table (this is measurements derived from parcellations of the cortical surface, like cortical thickness)\naseg.tsv has the outputs of asegstats2table (that is, measurements derived from segmentations of the 3d structural image, like regional gray matter volumes)\nheaders.tsv has some other information about the brain as a whole (e.g., estimated Total Intracranial Volume)\n\nFor each of these, there are data dictionaries that details the contents (e.g., aparc.json explains the columns of aparc.tsv).\n\n$ ls /corral-secure/projects/A2CPS/products/consortium-data/pre-surgery/mris/derivatives/freesurfer/*{json,tsv}\n/corral-secure/projects/A2CPS/products/consortium-data/pre-surgery/mris/derivatives/freesurfer/aparc.json  /corral-secure/projects/A2CPS/products/consortium-data/pre-surgery/mris/derivatives/freesurfer/gm_morph.tsv\n/corral-secure/projects/A2CPS/products/consortium-data/pre-surgery/mris/derivatives/freesurfer/aparc.tsv   /corral-secure/projects/A2CPS/products/consortium-data/pre-surgery/mris/derivatives/freesurfer/headers.json\n/corral-secure/projects/A2CPS/products/consortium-data/pre-surgery/mris/derivatives/freesurfer/aseg.json   /corral-secure/projects/A2CPS/products/consortium-data/pre-surgery/mris/derivatives/freesurfer/headers.tsv\n/corral-secure/projects/A2CPS/products/consortium-data/pre-surgery/mris/derivatives/freesurfer/aseg.tsv\n\n\n\n4.1.2 Extract data\nIn this kit, we will consider the cortical surface measurements, stored within aparc.tsv. This table contains nine regional measurements for the various structures that compose each of six parcellations.\n\naparc &lt;- read_tsv(\"data/aparc.tsv\", show_col_types = FALSE)\nhead(aparc)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nStructName\nNumVert\nSurfArea\nGrayVol\nThickAvg\nThickStd\nMeanCurv\nGausCurv\nFoldInd\nCurvInd\nsub\nses\nhemisphere\nparc\n\n\n\n\nbankssts\n1360\n909\n2055\n2.516\n0.397\n0.112\n0.020\n10\n1.1\n10706\nV1\nlh\naparc\n\n\ncaudalanteriorcingulate\n852\n604\n1626\n2.253\n0.887\n0.131\n0.024\n13\n1.0\n10706\nV1\nlh\naparc\n\n\ncaudalmiddlefrontal\n2870\n1857\n4018\n2.164\n0.485\n0.104\n0.018\n22\n2.2\n10706\nV1\nlh\naparc\n\n\ncuneus\n1595\n1090\n2019\n1.738\n0.515\n0.141\n0.027\n19\n2.0\n10706\nV1\nlh\naparc\n\n\nentorhinal\n480\n306\n1366\n3.029\n0.816\n0.105\n0.018\n4\n0.3\n10706\nV1\nlh\naparc\n\n\nfusiform\n3434\n2414\n8326\n2.907\n0.603\n0.123\n0.023\n38\n3.4\n10706\nV1\nlh\naparc\n\n\n\n\n\n\nA typical analysis will only rely on one parcellation. For details of the different parcellations, see the FreeSurfer documentation. Two good starting choices are either the aparc or aparc.a2009s atlas.\n\na2009s &lt;- aparc |&gt;\n  filter(parc == \"aparc.a2009s\")\nhead(a2009s)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nStructName\nNumVert\nSurfArea\nGrayVol\nThickAvg\nThickStd\nMeanCurv\nGausCurv\nFoldInd\nCurvInd\nsub\nses\nhemisphere\nparc\n\n\n\n\nG_and_S_frontomargin\n828\n603\n1341\n2.098\n0.476\n0.131\n0.026\n10\n0.9\n10706\nV1\nlh\naparc.a2009s\n\n\nG_and_S_occipital_inf\n1116\n762\n2218\n2.474\n0.643\n0.127\n0.025\n11\n1.1\n10706\nV1\nlh\naparc.a2009s\n\n\nG_and_S_paracentral\n1548\n858\n1810\n1.886\n0.580\n0.097\n0.019\n10\n1.5\n10706\nV1\nlh\naparc.a2009s\n\n\nG_and_S_subcentral\n1151\n809\n2142\n2.443\n0.413\n0.129\n0.021\n13\n1.0\n10706\nV1\nlh\naparc.a2009s\n\n\nG_and_S_transv_frontopol\n531\n480\n1424\n2.378\n0.585\n0.203\n0.052\n11\n1.3\n10706\nV1\nlh\naparc.a2009s\n\n\nG_and_S_cingul-Ant\n2005\n1481\n3804\n2.463\n0.531\n0.140\n0.028\n31\n2.5\n10706\nV1\nlh\naparc.a2009s\n\n\n\n\n\n\nSome analyses may benefit from having the data in a “wider” format, which can be achieved with tools from the Tidyverse. For example, here is how we could pivot the table such that one column represents the participant and the others give the average cortical thickness for each region.\n\na2009s_wider &lt;- a2009s |&gt;\n  select(StructName, ThickAvg, sub, hemisphere) |&gt;\n  pivot_wider(names_from = c(StructName, hemisphere), values_from = ThickAvg)\nhead(a2009s_wider)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nsub\nG_and_S_frontomargin_lh\nG_and_S_occipital_inf_lh\nG_and_S_paracentral_lh\nG_and_S_subcentral_lh\nG_and_S_transv_frontopol_lh\nG_and_S_cingul-Ant_lh\nG_and_S_cingul-Mid-Ant_lh\nG_and_S_cingul-Mid-Post_lh\nG_cingul-Post-dorsal_lh\nG_cingul-Post-ventral_lh\nG_cuneus_lh\nG_front_inf-Opercular_lh\nG_front_inf-Orbital_lh\nG_front_inf-Triangul_lh\nG_front_middle_lh\nG_front_sup_lh\nG_Ins_lg_and_S_cent_ins_lh\nG_insular_short_lh\nG_occipital_middle_lh\nG_occipital_sup_lh\nG_oc-temp_lat-fusifor_lh\nG_oc-temp_med-Lingual_lh\nG_oc-temp_med-Parahip_lh\nG_orbital_lh\nG_pariet_inf-Angular_lh\nG_pariet_inf-Supramar_lh\nG_parietal_sup_lh\nG_postcentral_lh\nG_precentral_lh\nG_precuneus_lh\nG_rectus_lh\nG_subcallosal_lh\nG_temp_sup-G_T_transv_lh\nG_temp_sup-Lateral_lh\nG_temp_sup-Plan_polar_lh\nG_temp_sup-Plan_tempo_lh\nG_temporal_inf_lh\nG_temporal_middle_lh\nLat_Fis-ant-Horizont_lh\nLat_Fis-ant-Vertical_lh\nLat_Fis-post_lh\nPole_occipital_lh\nPole_temporal_lh\nS_calcarine_lh\nS_central_lh\nS_cingul-Marginalis_lh\nS_circular_insula_ant_lh\nS_circular_insula_inf_lh\nS_circular_insula_sup_lh\nS_collat_transv_ant_lh\nS_collat_transv_post_lh\nS_front_inf_lh\nS_front_middle_lh\nS_front_sup_lh\nS_interm_prim-Jensen_lh\nS_intrapariet_and_P_trans_lh\nS_oc_middle_and_Lunatus_lh\nS_oc_sup_and_transversal_lh\nS_occipital_ant_lh\nS_oc-temp_lat_lh\nS_oc-temp_med_and_Lingual_lh\nS_orbital_lateral_lh\nS_orbital_med-olfact_lh\nS_orbital-H_Shaped_lh\nS_parieto_occipital_lh\nS_pericallosal_lh\nS_postcentral_lh\nS_precentral-inf-part_lh\nS_precentral-sup-part_lh\nS_suborbital_lh\nS_subparietal_lh\nS_temporal_inf_lh\nS_temporal_sup_lh\nS_temporal_transverse_lh\nG_and_S_frontomargin_rh\nG_and_S_occipital_inf_rh\nG_and_S_paracentral_rh\nG_and_S_subcentral_rh\nG_and_S_transv_frontopol_rh\nG_and_S_cingul-Ant_rh\nG_and_S_cingul-Mid-Ant_rh\nG_and_S_cingul-Mid-Post_rh\nG_cingul-Post-dorsal_rh\nG_cingul-Post-ventral_rh\nG_cuneus_rh\nG_front_inf-Opercular_rh\nG_front_inf-Orbital_rh\nG_front_inf-Triangul_rh\nG_front_middle_rh\nG_front_sup_rh\nG_Ins_lg_and_S_cent_ins_rh\nG_insular_short_rh\nG_occipital_middle_rh\nG_occipital_sup_rh\nG_oc-temp_lat-fusifor_rh\nG_oc-temp_med-Lingual_rh\nG_oc-temp_med-Parahip_rh\nG_orbital_rh\nG_pariet_inf-Angular_rh\nG_pariet_inf-Supramar_rh\nG_parietal_sup_rh\nG_postcentral_rh\nG_precentral_rh\nG_precuneus_rh\nG_rectus_rh\nG_subcallosal_rh\nG_temp_sup-G_T_transv_rh\nG_temp_sup-Lateral_rh\nG_temp_sup-Plan_polar_rh\nG_temp_sup-Plan_tempo_rh\nG_temporal_inf_rh\nG_temporal_middle_rh\nLat_Fis-ant-Horizont_rh\nLat_Fis-ant-Vertical_rh\nLat_Fis-post_rh\nPole_occipital_rh\nPole_temporal_rh\nS_calcarine_rh\nS_central_rh\nS_cingul-Marginalis_rh\nS_circular_insula_ant_rh\nS_circular_insula_inf_rh\nS_circular_insula_sup_rh\nS_collat_transv_ant_rh\nS_collat_transv_post_rh\nS_front_inf_rh\nS_front_middle_rh\nS_front_sup_rh\nS_interm_prim-Jensen_rh\nS_intrapariet_and_P_trans_rh\nS_oc_middle_and_Lunatus_rh\nS_oc_sup_and_transversal_rh\nS_occipital_ant_rh\nS_oc-temp_lat_rh\nS_oc-temp_med_and_Lingual_rh\nS_orbital_lateral_rh\nS_orbital_med-olfact_rh\nS_orbital-H_Shaped_rh\nS_parieto_occipital_rh\nS_pericallosal_rh\nS_postcentral_rh\nS_precentral-inf-part_rh\nS_precentral-sup-part_rh\nS_suborbital_rh\nS_subparietal_rh\nS_temporal_inf_rh\nS_temporal_sup_rh\nS_temporal_transverse_rh\n\n\n\n\n10706\n2.098\n2.474\n1.886\n2.443\n2.378\n2.463\n2.445\n2.534\n2.532\n2.524\n1.669\n2.481\n2.420\n2.099\n2.239\n2.400\n2.852\n3.408\n2.156\n2.121\n2.971\n1.903\n2.697\n2.380\n2.142\n2.550\n1.817\n1.848\n2.371\n2.196\n2.159\n2.267\n2.179\n2.897\n3.292\n2.471\n2.957\n2.683\n1.688\n1.982\n2.160\n1.851\n3.500\n1.601\n1.646\n1.756\n2.585\n2.545\n2.344\n2.892\n1.939\n2.058\n1.990\n2.073\n1.959\n1.878\n1.843\n1.698\n2.021\n2.702\n2.294\n1.998\n2.186\n2.444\n1.947\n1.429\n2.086\n2.166\n2.099\n2.098\n2.134\n2.398\n2.359\n2.337\n2.316\n2.112\n1.715\n2.466\n2.542\n2.462\n2.429\n2.348\n2.722\n2.145\n1.736\n2.361\n2.381\n2.222\n2.153\n2.392\n3.494\n3.292\n2.324\n1.759\n2.829\n1.966\n2.858\n2.613\n2.285\n2.430\n1.827\n1.740\n2.227\n2.035\n2.136\n2.505\n2.048\n2.859\n3.178\n2.231\n2.638\n2.809\n1.878\n1.938\n2.346\n1.942\n3.461\n1.479\n1.630\n1.940\n2.644\n2.709\n2.369\n3.315\n2.103\n1.880\n2.097\n1.956\n2.364\n1.841\n1.870\n1.840\n2.208\n2.126\n2.256\n1.793\n2.458\n2.636\n1.884\n1.368\n1.765\n2.217\n2.097\n2.145\n2.283\n2.536\n2.348\n2.297\n\n\n10734\n2.463\n2.110\n1.959\n2.483\n2.443\n2.410\n2.357\n2.361\n2.668\n2.103\n1.682\n2.520\n2.550\n2.414\n2.465\n2.584\n2.835\n3.001\n2.161\n1.906\n2.592\n1.842\n2.948\n2.572\n2.414\n2.490\n2.136\n1.759\n2.500\n2.349\n2.404\n2.320\n2.206\n3.044\n2.830\n2.496\n2.826\n2.822\n1.729\n2.251\n1.919\n1.465\n3.147\n1.613\n1.852\n1.763\n2.738\n2.267\n2.180\n2.375\n1.613\n2.051\n2.241\n2.340\n2.009\n2.000\n1.728\n1.929\n2.082\n2.343\n2.115\n2.010\n2.056\n2.486\n1.776\n1.347\n1.924\n2.212\n2.279\n1.969\n2.202\n2.313\n2.303\n2.139\n2.454\n2.216\n1.800\n2.267\n2.364\n2.467\n2.474\n2.410\n2.478\n2.323\n1.529\n2.683\n2.504\n2.533\n2.519\n2.564\n3.210\n2.871\n2.352\n1.914\n2.609\n1.929\n2.998\n2.643\n2.418\n2.433\n2.043\n1.747\n2.488\n2.344\n2.473\n2.573\n2.227\n2.935\n3.035\n2.297\n2.780\n2.682\n1.869\n2.250\n2.056\n1.671\n3.071\n1.598\n1.712\n1.949\n2.421\n2.002\n2.365\n2.199\n1.703\n2.178\n2.260\n2.338\n2.129\n1.847\n1.721\n1.839\n1.903\n2.125\n2.029\n2.123\n2.222\n2.488\n1.924\n1.454\n1.783\n2.243\n2.223\n1.669\n2.321\n2.283\n2.206\n1.777\n\n\n20371\n2.498\n2.080\n2.218\n2.804\n2.722\n2.690\n2.394\n2.328\n2.520\n2.367\n1.757\n2.570\n2.602\n2.463\n2.496\n2.611\n3.370\n3.746\n2.028\n1.820\n2.795\n1.917\n2.864\n2.680\n2.608\n2.666\n2.199\n1.985\n2.593\n2.470\n2.379\n2.572\n2.651\n3.030\n3.124\n2.709\n2.750\n3.101\n1.714\n2.197\n2.380\n1.694\n3.276\n1.723\n1.885\n2.165\n2.564\n2.951\n2.371\n2.657\n2.008\n2.022\n2.088\n2.183\n2.705\n2.094\n1.664\n1.848\n2.032\n2.591\n2.380\n2.208\n2.165\n2.689\n2.165\n1.553\n2.117\n2.262\n2.161\n2.611\n2.225\n2.652\n2.461\n2.404\n2.405\n2.615\n2.079\n2.522\n2.431\n2.537\n2.252\n2.325\n2.645\n2.415\n1.583\n2.650\n2.496\n2.285\n2.403\n2.605\n3.346\n3.601\n2.128\n1.915\n2.648\n1.912\n2.948\n2.548\n2.671\n2.509\n2.293\n1.955\n2.397\n2.416\n2.668\n2.713\n2.523\n2.940\n3.145\n2.521\n2.736\n2.956\n2.127\n2.363\n2.290\n1.621\n3.067\n1.695\n1.788\n2.314\n2.900\n2.658\n2.485\n2.501\n1.979\n2.128\n2.161\n2.139\n2.051\n2.150\n1.652\n2.002\n2.242\n2.441\n2.276\n2.087\n2.212\n2.540\n2.155\n1.335\n2.132\n2.353\n2.179\n2.147\n2.135\n2.507\n2.489\n2.502\n\n\n20108\n2.037\n2.204\n2.025\n2.509\n2.350\n2.638\n2.351\n2.386\n2.592\n2.042\n1.607\n2.625\n2.721\n2.549\n2.454\n2.704\n3.342\n3.520\n1.904\n1.731\n2.637\n1.804\n2.815\n2.535\n2.381\n2.566\n1.986\n1.738\n2.509\n2.374\n2.408\n2.677\n2.555\n2.787\n2.887\n2.453\n2.550\n2.433\n1.999\n2.000\n2.549\n1.767\n3.484\n1.893\n1.873\n2.146\n2.863\n2.445\n2.332\n2.570\n2.145\n2.216\n2.242\n2.414\n1.928\n2.063\n1.641\n2.268\n2.104\n2.524\n2.089\n2.003\n1.947\n2.569\n1.977\n1.539\n2.015\n2.376\n2.340\n2.829\n2.352\n2.260\n2.291\n1.988\n2.100\n1.873\n2.009\n2.578\n2.419\n2.631\n2.449\n2.452\n2.666\n2.108\n1.584\n2.702\n2.392\n2.554\n2.449\n2.644\n3.491\n3.654\n1.678\n1.540\n2.863\n1.947\n3.140\n2.701\n1.812\n2.475\n1.737\n1.845\n2.602\n2.420\n2.782\n2.690\n2.868\n3.179\n3.027\n2.526\n2.646\n2.685\n2.182\n2.197\n2.270\n1.517\n3.187\n1.835\n1.958\n2.314\n2.580\n2.332\n2.350\n2.952\n2.236\n2.142\n2.097\n2.243\n2.177\n1.915\n2.010\n2.018\n2.018\n2.454\n2.156\n1.851\n2.276\n2.679\n2.045\n1.294\n2.016\n2.156\n2.104\n2.174\n2.294\n2.295\n2.384\n2.609\n\n\n10689\n2.345\n2.583\n2.608\n2.687\n2.610\n2.623\n2.684\n2.545\n2.691\n2.234\n1.962\n2.591\n2.724\n2.583\n2.717\n2.899\n3.240\n3.609\n2.442\n1.845\n2.933\n1.905\n3.182\n2.940\n2.673\n2.870\n2.453\n2.343\n2.955\n2.615\n2.394\n2.531\n2.287\n3.181\n3.027\n2.703\n3.118\n3.226\n2.061\n2.427\n2.344\n1.840\n3.380\n1.668\n2.004\n2.186\n2.830\n2.620\n2.625\n2.468\n2.123\n2.352\n2.258\n2.474\n2.269\n2.283\n1.823\n2.255\n2.312\n2.395\n2.624\n2.292\n2.224\n2.531\n2.327\n1.340\n2.321\n2.452\n2.378\n2.271\n2.500\n2.506\n2.473\n2.629\n2.515\n2.916\n2.410\n2.480\n2.688\n2.589\n2.584\n2.578\n2.885\n2.423\n1.789\n2.744\n2.604\n2.590\n2.674\n2.959\n3.512\n3.546\n2.732\n2.115\n2.735\n2.166\n3.210\n2.994\n2.656\n2.857\n2.509\n2.286\n2.874\n2.617\n2.564\n2.791\n2.548\n3.309\n3.292\n2.520\n2.986\n3.309\n2.311\n2.370\n2.452\n1.833\n3.422\n1.892\n2.015\n2.269\n2.597\n2.487\n2.745\n2.415\n2.194\n2.247\n2.414\n2.610\n2.199\n2.221\n2.089\n2.210\n2.323\n2.408\n2.473\n2.211\n2.229\n2.627\n2.333\n1.701\n2.173\n2.507\n2.394\n2.447\n2.542\n2.513\n2.538\n2.878\n\n\n20020\n2.174\n1.939\n2.221\n2.647\n2.285\n2.480\n2.376\n2.230\n2.691\n2.316\n1.839\n2.571\n2.639\n2.492\n2.392\n2.645\n3.024\n3.446\n2.271\n1.817\n2.633\n1.922\n3.039\n2.719\n2.542\n2.691\n2.331\n2.113\n2.698\n2.556\n2.578\n2.367\n2.335\n2.973\n3.308\n2.368\n2.857\n3.071\n2.407\n2.082\n2.283\n1.696\n3.297\n1.697\n1.898\n1.951\n2.458\n2.292\n2.405\n2.883\n1.624\n2.066\n1.927\n2.245\n2.308\n2.022\n1.779\n1.844\n2.055\n2.198\n2.288\n1.773\n2.102\n2.493\n1.997\n1.399\n2.134\n2.143\n2.195\n2.036\n2.128\n2.405\n2.392\n1.951\n2.379\n2.182\n2.360\n2.670\n2.211\n2.445\n2.185\n2.361\n2.840\n2.615\n1.834\n2.545\n2.475\n2.005\n2.511\n2.608\n3.096\n3.468\n2.531\n2.030\n2.639\n1.907\n2.977\n2.760\n2.483\n2.579\n2.241\n2.107\n2.909\n2.398\n2.629\n2.576\n2.572\n3.021\n3.178\n2.420\n2.895\n2.973\n2.195\n2.464\n2.276\n1.748\n3.388\n1.782\n1.826\n2.057\n2.591\n2.321\n2.555\n2.626\n1.659\n2.128\n1.991\n2.214\n2.098\n1.940\n1.970\n1.942\n2.161\n2.534\n2.189\n1.899\n2.434\n2.581\n1.897\n1.570\n1.994\n2.275\n2.271\n1.827\n2.143\n2.310\n2.375\n2.440",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>FreeSurfer Measures</span>"
    ]
  },
  {
    "objectID": "freesurfer.html#considerations-while-working-on-the-project",
    "href": "freesurfer.html#considerations-while-working-on-the-project",
    "title": "4  FreeSurfer Measures",
    "section": "4.2 Considerations While Working on the Project",
    "text": "4.2 Considerations While Working on the Project\n\n4.2.1 Variability Across Scanners\nMany MRI biomarkers exhibit variability across the scanners, which may confound some analyses. For an up-to-date assessment of the issue and overview of current thinking, please see Confluence.\n\n\n4.2.2 Data Quality\nAs with any MRI derivative, all pipeline derivatives have been included. This means that products were included regardless of their quality, and so some products may have been generated from images that are known to have poor quality—rated “red”, or incomparable. For details on the ratings and how to exclude them, see Appendix A. Additionally, extensive QC has not yet been performed on the derivatives themselves, and so there may be cases where pipelines produced atypical outputs. For an overview of planned checks, see Confluence.\nCurrently, no QC has been performed on the underlying segmentations and parcellations. With adequate sample sizes, results based on whole-atlas FreeSurfer measurements are generally robust, although there are individual regions that may warrant close inspection (e.g., McCarthy et al. 2015, Vahermaa et al. 2023). Moreover, it remains unclear the extent to which FreeSurfer’s accuracy persists over the wide range of demographics found in the A2CPS dataset. The Imaging DIRC is actively exploring these aspects of quality.\n\n\n4.2.3 Methods\nFreeSurfer outputs were generated by the fMRIPrep pipeline. The fMRIPrep pipeline is similar to a typical call to FreeSurfer’s recon-all, with a majority of changes aiming to parallelize more parts of recon-all. However, there are differences, such as in how the brain is masked. The A2CPS use of fMRIPrep is even more different because it entails replacing the fMRIPrep masking procedure with SynthStrip. In general, these changes are expected to only improve the quality of the FreeSurfer outputs. However, they may hinder some comparisons between results derived from A2CPS and those in other studies.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>FreeSurfer Measures</span>"
    ]
  },
  {
    "objectID": "brainager.html",
    "href": "brainager.html",
    "title": "5  Brain Age",
    "section": "",
    "text": "5.1 Starting Project\nThis starter kit walk through the “Brain Age” outputs that have been derived from the anatomical scans. The examples in the kit rely on bash and R.\nFundamentally brainager calculations are about producing an estimated age based on measurable characteristics of a brain image, such as regional variations in gray matter density. The difference between estimated and chronological age is often referred to in the literature as the “brain age gap” (BAG) or “predicted age difference” (PAD), and is usually expressed as estimated minus chronological age. This value is often interpreted as an indicator of brain health.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Brain Age</span>"
    ]
  },
  {
    "objectID": "brainager.html#starting-project",
    "href": "brainager.html#starting-project",
    "title": "5  Brain Age",
    "section": "",
    "text": "5.1.1 Locate data\nIn the release folder, data are stored underneath the mris/derivatives folder:\n/corral-secure/projects/A2CPS/products/consortium-data/pre-surgery/mris/derivatives/brainager\n\n\n5.1.2 Extract data\nData for each participant are stored in a sub-directory.\n$ ls | head\nsub-10003\nsub-10005\nsub-10008\nsub-10010\nsub-10011\nsub-10013\nsub-10014\nsub-10015\nsub-10017\nsub-10020\nFor example1:\n1 The tree command is just used here to display the folder structure, and is not required for you to have.$ tree sub-10319\nsub-10319\n└── ses-V1\n├── slicesdir_sub-10319_ses-V1_T1w.nii\n│   ├── index.html\n│   ├── _tmp_tmph17ksnl8_c1sub-10319_ses-V1_T1w.png\n│   ├── _tmp_tmph17ksnl8_c2sub-10319_ses-V1_T1w.png\n│   ├── _tmp_tmph17ksnl8_c3sub-10319_ses-V1_T1w.png\n│   ├── _tmp_tmph17ksnl8_smwc1sub-10319_ses-V1_T1w.png\n│   ├── _tmp_tmph17ksnl8_smwc2sub-10319_ses-V1_T1w.png\n│   └── _tmp_tmph17ksnl8_smwc3sub-10319_ses-V1_T1w.png\n├── sub-10319_ses-V1_T1w.m\n├── sub-10319_ses-V1_T1w_tissue_volumes.tsv\n└── sub-10319_ses-V1_T1w.tsv\n\n2 directories, 10 files\nMost users will be interested in the predicted ages, which can be found in sub-[recordid]/ses-[protocolid]/sub-[recordid]_ses-[protocolid]_T1w.tsv. For example\n$ cat sub-10003/ses-V1/sub-10003_ses-V1_T1w.tsv \nFile    brain.predicted_age lower.CI    upper.CI\nsub-10003_ses-V1_T1w    73.6037 72.9683 74.2392\nHere is an example of how these files could be loaded using R.\n\n# list all files\nfiles &lt;- fs::dir_ls(\"data/brainager\", glob = \"*T1w.tsv\", recurse = TRUE)\n\n# read in all tsvs\nages &lt;- readr::read_tsv(files)\nages\n\n# A tibble: 1,017 × 4\n   File                 brain.predicted_age lower.CI upper.CI\n   &lt;chr&gt;                              &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n 1 sub-10003_ses-V1_T1w                73.6     73.0     74.2\n 2 sub-10005_ses-V1_T1w                65.7     64.6     66.9\n 3 sub-10008_ses-V1_T1w                75.5     74.7     76.3\n 4 sub-10010_ses-V1_T1w                44.6     42.6     46.5\n 5 sub-10011_ses-V1_T1w                40.5     38.5     42.4\n 6 sub-10013_ses-V1_T1w                72.1     71.5     72.8\n 7 sub-10014_ses-V1_T1w                42.3     41.7     42.9\n 8 sub-10015_ses-V1_T1w                55.0     53.2     56.8\n 9 sub-10017_ses-V1_T1w                57.9     57.2     58.7\n10 sub-10020_ses-V1_T1w                59.2     58.6     59.7\n# ℹ 1,007 more rows\n\n\nThe column File identifies the anatomical image that was used for to make the prediction. When working with other A2CPS data, it may be helpful to extract the subject ID.\n\nages_with_sub &lt;- ages |&gt;\n  dplyr::mutate(\n    sub = stringr::str_extract(File, \"[[:digit:]]{5}\") |&gt; as.integer(),\n  )\nages_with_sub\n\n# A tibble: 1,017 × 5\n   File                 brain.predicted_age lower.CI upper.CI   sub\n   &lt;chr&gt;                              &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt; &lt;int&gt;\n 1 sub-10003_ses-V1_T1w                73.6     73.0     74.2 10003\n 2 sub-10005_ses-V1_T1w                65.7     64.6     66.9 10005\n 3 sub-10008_ses-V1_T1w                75.5     74.7     76.3 10008\n 4 sub-10010_ses-V1_T1w                44.6     42.6     46.5 10010\n 5 sub-10011_ses-V1_T1w                40.5     38.5     42.4 10011\n 6 sub-10013_ses-V1_T1w                72.1     71.5     72.8 10013\n 7 sub-10014_ses-V1_T1w                42.3     41.7     42.9 10014\n 8 sub-10015_ses-V1_T1w                55.0     53.2     56.8 10015\n 9 sub-10017_ses-V1_T1w                57.9     57.2     58.7 10017\n10 sub-10020_ses-V1_T1w                59.2     58.6     59.7 10020\n# ℹ 1,007 more rows",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Brain Age</span>"
    ]
  },
  {
    "objectID": "brainager.html#considerations-while-working-on-the-project",
    "href": "brainager.html#considerations-while-working-on-the-project",
    "title": "5  Brain Age",
    "section": "5.2 Considerations While Working on the Project",
    "text": "5.2 Considerations While Working on the Project\nIt is in principle possible to replicate the processing that was used in a release by running the brainageR container2 on the raw data. However, A2CPS Releases 1.0.0, 1.1.0, and 2.0.0 have not included raw T1w files for privacy reasons, and thus the end result may differ from the released version, which was generated on the raw images.\n2 The container used by A2CPS is available here.\n5.2.1 Variability Across Scanners\nMany MRI biomarkers exhibit variability across the scanners, which may confound some analyses. For an up-to-date assessment of the issue and overview of current thinking, please see Confluence.\n\n\n5.2.2 Data Quality\nAs with any MRI derivative, all pipeline derivatives have been included. This means that products were included regardless of their quality, and so some products may have been generated from images that are known to have poor quality—rated “red”, or incomparable. For details on the ratings and how to exclude them, see Appendix A. Additionally, extensive QC has not yet been performed on the derivatives themselves, and so there may be cases where pipelines produced atypical outputs. For an overview of planned checks, see Confluence.\n\n\n5.2.3 Calculating the Brain Age Gap\nPredicted ages are neat, but these values are most useful when compared against a participant’s chronological age. These can be found in the demographics portion of the release.\n\nbaseline_ages &lt;- read_csv(\n  \"data/demographics/demographics-2025-01-10.csv\",\n  col_select = c(\"record_id\", \"age\")\n)\n\nbrainage &lt;- ages_with_sub |&gt;\n  left_join(baseline_ages, by = join_by(sub == record_id)) |&gt;\n  mutate(\n    brain_age_gap = brain.predicted_age - age\n  ) |&gt;\n  filter(!is.na(age)) # age not available for all participants\nbrainage\n\n# A tibble: 996 × 7\n   File          brain.predicted_age lower.CI upper.CI   sub   age brain_age_gap\n   &lt;chr&gt;                       &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;         &lt;dbl&gt;\n 1 sub-10003_se…                73.6     73.0     74.2 10003    73         0.604\n 2 sub-10005_se…                65.7     64.6     66.9 10005    58         7.73 \n 3 sub-10008_se…                75.5     74.7     76.3 10008    73         2.49 \n 4 sub-10010_se…                44.6     42.6     46.5 10010    64       -19.4  \n 5 sub-10011_se…                40.5     38.5     42.4 10011    54       -13.5  \n 6 sub-10013_se…                72.1     71.5     72.8 10013    71         1.14 \n 7 sub-10014_se…                42.3     41.7     42.9 10014    45        -2.70 \n 8 sub-10015_se…                55.0     53.2     56.8 10015    65        -9.98 \n 9 sub-10017_se…                57.9     57.2     58.7 10017    56         1.95 \n10 sub-10020_se…                59.2     58.6     59.7 10020    53         6.17 \n# ℹ 986 more rows\n\n\nBy plotting the predicted ages against the true ages, we can review the accuracy of the predictions.\n\nlm_eqn &lt;- function(fit) {\n  eq &lt;- substitute(\n    italic(y) == a + b %.% italic(age) * \",\" ~ ~ italic(r)^2 ~ \"=\" ~ r2,\n    list(\n      a = format(unname(coef(fit)[1]), digits = 2),\n      b = format(unname(coef(fit)[2]), digits = 2),\n      r2 = format(summary(fit)$r.squared, digits = 3)\n    )\n  )\n  as.character(as.expression(eq))\n}\n\nfit &lt;- lm(brain.predicted_age ~ age, data = brainage)\n\nbrainage |&gt;\n  ggplot(aes(x = age, y = brain.predicted_age)) +\n  geom_abline() +\n  geom_point(alpha = 0.5) +\n  geom_smooth(method = \"lm\", formula = y ~ x) +\n  coord_fixed() +\n  geom_text(x = 40, y = 80, label = lm_eqn(fit), parse = TRUE)\n\n\n\n\n\n\n\n\nThe “brain age gap” is the difference between predicted and true age. Positive gaps indicate “older” brains, and younger gaps indicate “younger” brains.\n\nbrainage |&gt;\n  ggplot(aes(x = brain_age_gap)) +\n  geom_histogram() +\n  xlab(\"(&lt;-- Younger) Brain Age Gap (Older --&gt;)\")\n\n\n\n\n\n\n\n\n\n\n5.2.4 Correction\nNote that using the raw Brain Age Gap can be problematic, and, for final analyses, it is typical to calculate a derivative that has been “corrected”. The issue is that the predictions tend to be worse for the youngest and oldest people – and so the gap is related to age (e.g., a relationship with larger raw gaps partly reflects a relationship with true age).\n\nbrainage |&gt;\n  ggplot(aes(x = age, y = brain_age_gap)) +\n  geom_point(alpha = 0.5) +\n  geom_smooth(method = \"lm\", formula = y ~ x) +\n  coord_fixed()\n\n\n\n\n\n\n\n\nCorrections aim to make them independent, by, for example, residualizing. See Smith et al. (2019).\n\nSmith, S. M., Vidaurre, D., Alfaro-Almagro, F., Nichols, T. E., & Miller, K. L. (2019). Estimation of brain age delta from brain imaging. Neuroimage, 200, 528–539. https://doi.org/10.1016/j.neuroimage.2019.06.017\n\nbag_age_fit &lt;- lm(brain_age_gap ~ age, data = brainage)\n\nbrainage |&gt;\n  mutate(\n    brain_age_gap_corrected = residuals(bag_age_fit),\n    brain_age_gap = scale(brain_age_gap, scale = FALSE)\n  ) |&gt;\n  select(sub, brain_age_gap, brain_age_gap_corrected) |&gt;\n  ggplot(aes(x = brain_age_gap, y = brain_age_gap_corrected)) +\n  geom_point(alpha = 0.5) +\n  geom_abline() +\n  geom_smooth(method = \"lm\", formula = y ~ x)\n\n\n\n\n\n\n\n\n\n\n5.2.5 Other Models\nThere are many models for calculating Brain Age. The values that have been pre-calculated for A2CPS are derived from a model that has been around for a while and used successfully in a variety of studies (Biondo et al., 2022; Clausen et al., 2022; Hobday et al., 2022). For some analyses, it may be worthwhile to assess whether results persist across different models. For pain studies, one successful model has been DeepBrainNet (Bashyam et al., 2020; Montesino-Goicolea et al., 2023; Valdes-Hernandez et al., 2023), which can be used with derivatives from fMRIPrep.\n\nBiondo, F., Jewell, A., Pritchard, M., Aarsland, D., Steves, C. J., Mueller, C., & Cole, J. H. (2022). Brain-age is associated with progression to dementia in memory clinic patients. NeuroImage: Clinical, 36, 103175. https://doi.org/10.1016/j.nicl.2022.103175\n\nClausen, A. N., Fercho, K. A., Monsour, M., Disner, S., Salminen, L., Haswell, C. C., Rubright, E. C., Watts, A. A., Buckley, M. N., Maron-Katz, A., et al. (2022). Assessment of brain age in posttraumatic stress disorder: Findings from the ENIGMA PTSD and brain age working groups. Brain and Behavior, 12(1), e2413. https://doi.org/10.1002/brb3.2413\n\nHobday, H., Cole, J. H., Stanyard, R. A., Daws, R. E., Giampietro, V., O’Daly, O., Leech, R., & Váša, F. (2022). Tissue volume estimation and age prediction using rapid structural brain scans. Scientific Reports, 12(1), 12005.\n\nBashyam, V. M., Erus, G., Doshi, J., Habes, M., Nasrallah, I. M., Truelove-Hill, M., Srinivasan, D., Mamourian, L., Pomponio, R., Fan, Y., et al. (2020). MRI signatures of brain age and disease over the lifespan based on a deep brain network and 14 468 individuals worldwide. Brain, 143(7), 2312–2324. https://doi.org/10.1093/brain/awaa160\n\nMontesino-Goicolea, S., Valdes-Hernandez, P., Nodarse, C. L., Johnson, A. J., Cole, J. H., Antoine, L. H., Goodin, B. R., Fillingim, R. B., & Cruz-Almeida, Y. (2023). Brain-predicted age difference mediates the association between PROMIS sleep impairment, and self-reported pain measure in persons with knee pain. Aging Brain, 4, 100088. https://doi.org/10.1016/j.nbas.2023.100088\n\nValdes-Hernandez, P. A., Nodarse, C. L., Johnson, A. J., Montesino-Goicolea, S., Bashyam, V., Davatzikos, C., Peraza, J. A., Cole, J. H., Huo, Z., Fillingim, R. B., et al. (2023). Brain-predicted age difference estimated using DeepBrainNet is significantly associated with pain and function—a multi-institutional and multiscanner study. Pain, 164(12), 2822–2838. https://doi.org/10.1097/j.pain.0000000000002984\n\n\n5.2.6 Methods, Citations\nFor additional documentation on the files and a detailed description of the methods, please see the official brainageR repo.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Brain Age</span>"
    ]
  },
  {
    "objectID": "cat12.html",
    "href": "cat12.html",
    "title": "6  Voxel-Based Morphometry",
    "section": "",
    "text": "6.1 Starting Project\nThis starter kit walk through the voxel-based morphometry outputs generated by the Computational Anatomy Toolbox (CAT12).",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Voxel-Based Morphometry</span>"
    ]
  },
  {
    "objectID": "cat12.html#starting-project",
    "href": "cat12.html#starting-project",
    "title": "6  Voxel-Based Morphometry",
    "section": "",
    "text": "6.1.1 Locate data\nOn TACC, the neuroimaging data are stored underneath the releases. For example, data release v2.#.# is underneath\npre-surgery/mris\nThe morphometry measures are underneath derivatives/cat12.\n\n\n6.1.2 Extract data\nData for each participant is stored in a sub-directory\n$ ls -d derivatives/cat12/sub* | head\nderivatives/cat12/sub-10003\nderivatives/cat12/sub-10005\nderivatives/cat12/sub-10008\nderivatives/cat12/sub-10009\nderivatives/cat12/sub-10010\nderivatives/cat12/sub-10011\nderivatives/cat12/sub-10013\nderivatives/cat12/sub-10014\nderivatives/cat12/sub-10015\nderivatives/cat12/sub-10017\nFor example:\n$ tree derivatives/cat12/sub-10003\nderivatives/cat12/sub-10003\n└── ses-V1\n    ├── label\n    │   ├── catROI_sub-10003_ses-V1_T1w.mat\n    │   └── catROI_sub-10003_ses-V1_T1w.xml\n    ├── mri\n    │   ├── misub-10003_ses-V1_T1w.nii\n    │   ├── msub-10003_ses-V1_T1w.nii\n    │   ├── mwp1sub-10003_ses-V1_T1w.nii\n    │   ├── mwp2sub-10003_ses-V1_T1w.nii\n    │   ├── mwp3sub-10003_ses-V1_T1w.nii\n    │   ├── p0sub-10003_ses-V1_T1w.nii\n    │   ├── p1sub-10003_ses-V1_T1w.nii\n    │   ├── p2sub-10003_ses-V1_T1w.nii\n    │   ├── p3sub-10003_ses-V1_T1w.nii\n    │   ├── wmisub-10003_ses-V1_T1w.nii\n    │   ├── wmsub-10003_ses-V1_T1w.nii\n    │   ├── wp0sub-10003_ses-V1_T1w.nii\n    │   ├── wp1sub-10003_ses-V1_T1w.nii\n    │   ├── wp2sub-10003_ses-V1_T1w.nii\n    │   ├── wp3sub-10003_ses-V1_T1w.nii\n    │   └── y_sub-10003_ses-V1_T1w.nii\n    ├── report\n    │   ├── catlog_sub-10003_ses-V1_T1w.txt\n    │   ├── cat_sub-10003_ses-V1_T1w.mat\n    │   └── cat_sub-10003_ses-V1_T1w.xml\n    └── surf\n        ├── lh.central.sub-10003_ses-V1_T1w.gii\n        ├── lh.pbt.sub-10003_ses-V1_T1w\n        ├── lh.pial.sub-10003_ses-V1_T1w.gii\n        ├── lh.sphere.reg.sub-10003_ses-V1_T1w.gii\n        ├── lh.sphere.sub-10003_ses-V1_T1w.gii\n        ├── lh.thickness.sub-10003_ses-V1_T1w\n        ├── lh.white.sub-10003_ses-V1_T1w.gii\n        ├── rh.central.sub-10003_ses-V1_T1w.gii\n        ├── rh.pbt.sub-10003_ses-V1_T1w\n        ├── rh.pial.sub-10003_ses-V1_T1w.gii\n        ├── rh.sphere.reg.sub-10003_ses-V1_T1w.gii\n        ├── rh.sphere.sub-10003_ses-V1_T1w.gii\n        ├── rh.thickness.sub-10003_ses-V1_T1w\n        └── rh.white.sub-10003_ses-V1_T1w.gii\n\n5 directories, 35 files\nAdditionally, there is a table of “cluster volumes”, which contains information relevant to A2CPS primary and secondary biomarkers.\n$ ls derivatives/cat12/cluster*\nderivatives/cat12/cluster_volumes.json  derivatives/cat12/cluster_volumes.tsv\n\n$ head derivatives/cat12/cluster_volumes.tsv \nsub ses mri atlas   cluster volume\n10703   V1  wp1sub-10703_ses-V1_T1w tpl-MNI152NLin2009cAsym_atlas-smallwood_dseg    0   1998.106000518892\n10703   V1  wp1sub-10703_ses-V1_T1w tpl-MNI152NLin2009cAsym_atlas-smallwood_dseg    1   2294.6824886463583\n10703   V1  mwp1sub-10703_ses-V1_T1w    tpl-MNI152NLin2009cAsym_atlas-smallwood_dseg    0   1219.69091796875\n10703   V1  mwp1sub-10703_ses-V1_T1w    tpl-MNI152NLin2009cAsym_atlas-smallwood_dseg    1   1443.6837158203125\n10753   V1  mwp1sub-10753_ses-V1_T1w    tpl-MNI152NLin2009cAsym_atlas-smallwood_dseg    0   1673.0926513671875\n10753   V1  mwp1sub-10753_ses-V1_T1w    tpl-MNI152NLin2009cAsym_atlas-smallwood_dseg    1   1950.593505859375\n10753   V1  wp1sub-10753_ses-V1_T1w tpl-MNI152NLin2009cAsym_atlas-smallwood_dseg    0   2353.910433325509\n10753   V1  wp1sub-10753_ses-V1_T1w tpl-MNI152NLin2009cAsym_atlas-smallwood_dseg    1   2952.608998143696\n10040   V1  mwp1sub-10040_ses-V1_T1w    tpl-MNI152NLin2009cAsym_atlas-smallwood_dseg    0   1499.8414306640625\nThe json file contains a data dictionary, with links to confluence pages providing detailed information about each of the atlases.\n{\n    \"sub\": {\n        \"LongName\": \"Subject\",\n        \"Description\": \"Study Participant, BIDS Subject ID\",\n        \"TermURL\": \"https://bids-specification.readthedocs.io/en/v1.9.0/appendices/entities.html#sub\"\n    },\n    \"ses\": {\n        \"LongName\": \"Session\",\n        \"Description\": \"Visit, Protocol, BIDS Session ID\",\n        \"Levels\": {\n            \"V1\": \"baseline_visit\",\n            \"V3\": \"3mo_postop\"\n        },\n        \"TermURL\": \"https://bids-specification.readthedocs.io/en/v1.9.0/appendices/entities.html#ses\"\n    },\n    \"mri\": {\n        \"LongName\": \"MRI Filename\",\n        \"Description\": \"Product of CAT12 in which volumes were calculated\",\n        \"TermURL\": \"https://neuro-jena.github.io/cat12-help/#naming\"\n    },\n    \"atlas\": {\n        \"LongName\": \"Atlas of Clusters\",\n        \"Description\": \"Source file in which clusters are defined\",\n        \"Levels\": {\n            \"tpl-MNI152NLin2009cAsym_atlas-smallwood_dseg\": \"https://a2cps.atlassian.net/wiki/external/NjFmMGViNjA1OGI4NGIxNWJlMjk0ZmM5ODcyNDhhODc\",\n            \"tpl-MNI152NLin2009cAsym_atlas-henn_desc-controlspatientgmtfce05_dseg\": \"https://doi.org/10.1097/j.pain.0000000000002681, Table 4\"\n        }\n    },\n    \"cluster\": {\n        \"LongName\": \"Cluster Number\",\n        \"Description\": \"ID of cluster as reported by FSL. May not match ID in source paper.\"\n    },\n    \"volume\": {\n        \"LongName\": \"Cluster Volume\",\n        \"Description\": \"Volume of cluster_id from atlas_id in mri_id calculated as number of voxels times voxel volume.\"\n    }\n}",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Voxel-Based Morphometry</span>"
    ]
  },
  {
    "objectID": "cat12.html#considerations-while-working-on-the-project",
    "href": "cat12.html#considerations-while-working-on-the-project",
    "title": "6  Voxel-Based Morphometry",
    "section": "6.2 Considerations While Working on the Project",
    "text": "6.2 Considerations While Working on the Project\n\n6.2.1 Variability Across Scanners\nMany MRI biomarkers exhibit variability across the scanners, which may confound some analyses. For an up-to-date assessment of the issue and overview of current thinking, please see Confluence.\n\n\n6.2.2 Data Quality\nAs with any MRI derivative, all pipeline derivatives have been included. This means that products were included regardless of their quality, and so some products may have been generated from images that are known to have poor quality—rated “red”, or incomparable. For details on the ratings and how to exclude them, see Appendix A. Additionally, extensive QC has not yet been performed on the derivatives themselves, and so there may be cases where pipelines produced atypical outputs. For an overview of planned checks, see Confluence.\n\n\n6.2.3 CAT12 Configuration\nFor details on CAT12’s methods see their documentation. CAT12 (12.9, r2582) was run with nearly the default configurations, changing only parameters that cause a few additional outputs to be saved. For the full batch script, see GitHub.\n\n\n6.2.4 CAT12 Image Quality Ratings\nPart of the Raw MRI data quality ratings are derived from an “Image Quality Rating” that is provided by CAT12. The ratings were pulled from the xml document in the reports subfolder. For example\n$ grep -P \"&lt;IQR&gt;|\\(IQR\\)\" sub-10003/ses-V1/report/cat_sub-10003_ses-V1_T1w.xml\n      &lt;IQR&gt;1.85445149536238&lt;/IQR&gt;\n      &lt;item&gt;Image Quality Rating (IQR): 86.46% (B)&lt;/item&gt;\nThe version of the IQR reported as a percentage is equal to \\(105 - 10*IQR\\).\nNote that CAT12 typically generates a PDF with an overview of processing and image quality. There is an ongoing issue with CAT12 that prevented the PDFs from being generated for Release 2.0.0. For details, see the associated issue on the CAT12 GitHub Repo.",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Voxel-Based Morphometry</span>"
    ]
  },
  {
    "objectID": "fcn.html",
    "href": "fcn.html",
    "title": "7  Functional Connectivity",
    "section": "",
    "text": "7.1 Starting Project\nFunctional connectivity is a measurement of how activity in different regions of the brain are related. It is calculated by reducing the voxelwise timeseries into a set of parceled timecourses and then calculating a measure of connectivity between those timecourses.\nThis kit reviews the A2CPS functional connectivity derivatives that have been created by pre-defined parcellations. For functional connectivity derived from independent components, see the GIFT starter kit (forthcoming).",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Functional Connectivity</span>"
    ]
  },
  {
    "objectID": "fcn.html#starting-project",
    "href": "fcn.html#starting-project",
    "title": "7  Functional Connectivity",
    "section": "",
    "text": "7.1.1 Locate data\nOn TACC, the neuroimaging data are stored underneath the releases. For example, data release v2.#.# is underneath\npre-surgery/mris\nThe functional connectivity derivatives are underneath mris/derivatives/fcn\n$ ls mris/derivatives/fcn/\ncleaned  confounds  confounds.json  connectivity  connectivity.json  timeseries  timeseries.json\nThe functional connectivity data is in a tabular format in the folder connectivity. The A2CPS dataset includes functional connectivity from several atlases, estimated using multiple methods. For details on the atlases, see the data dictionary connectivity.json.\nTo enable flexibility, the timeseries parcellations are also provided in the folder timeseries, with data dictionary timeseries.json. These enable analyses such as dynamic connectivity or calculation of alternative measures of connectivity (e.g., partial correlation).\nThe tabular data comprise parquet files that have been partitioned in a hive style. That is, subfolder names contain column information (e.g., participant label).\n$ tree connectivity | head -n 20\nconnectivity\n├── sub=10003\n│   └── ses=V1\n│       ├── task=cuff\n│       │   └── run=1\n│       │       ├── atlas=difumo_dimension-1024_resolution-2mm\n│       │       │   ├── estimator=empirical\n│       │       │   │   └── part-0.parquet\n│       │       │   └── estimator=leodit_wolf\n│       │       │       └── part-0.parquet\n│       │       ├── atlas=difumo_dimension-64_resolution-2mm\n│       │       │   ├── estimator=empirical\n│       │       │   │   └── part-0.parquet\n│       │       │   └── estimator=leodit_wolf\n│       │       │       └── part-0.parquet\n│       │       ├── atlas=dmn\n│       │       │   ├── estimator=empirical\n│       │       │   │   └── part-0.parquet\n│       │       │   └── estimator=leodit_wolf\n│       │       │       └── part-0.parquet\nThe timeseries were extracted from the NIfTI files in cleaned, which are the outputs of fMRIPrep after band-pass filtering (0.01 - 0.1Hz), quadratic detrending, and nuisance regression (Sadil et al. (2024)). The nuisance regressors are stored in the folder confounds.\n\nSadil, P., Arfanakis, K., Bhuiyan, E. H., Caffo, B., Calhoun, V. D., Clauw, D. J., DeLano, M. C., Ford, J. C., Gattu, R., Guo, X., Harris, R. E., Ichesco, E., Johnson, M. A., Jung, H., Kahn, A. B., Kaplan, C. M., Leloudas, N., Lindquist, M. A., Luo, Q., … Chronic Pain Signatures Consortium, T. A. to. (2024). Image processing in the acute to chronic pain signatures (A2CPS) project. bioRxiv. https://doi.org/10.1101/2024.12.19.627509\n\n\n7.1.2 Extract data\nMost users will start with the functional connectivity data. For example, here we grab the connectivity associated with the Default Mode Network (DMN) atlas (the nodal coordinates were derived from Baliki et al. (2012)). In this case, we’ll restrict results to connectivities generated with the empirical estimator.\n\nBaliki, M. N., Petre, B., Torbey, S., Herrmann, K. M., Huang, L., Schnitzer, T. J., Fields, H. L., & Apkarian, A. V. (2012). Corticostriatal functional connectivity predicts transition to chronic back pain. Nature Neuroscience, 15(8), 1117–1119. https://doi.org/10.1038/nn.3153\n\ndmn &lt;- open_dataset(\"data/connectivity\") |&gt;\n  filter(atlas == \"dmn\") |&gt;\n  filter(estimator == \"empirical\") |&gt;\n  select(sub, source, target, connectivity) |&gt;\n  collect()\nhead(dmn)\n\n\n\n\n\nsub\nsource\ntarget\nconnectivity\n\n\n\n\n\n\n\n\nNotice that the source and target fields are simply integer indices for this atlas. As specified in connectivity.json, information about these regions is available in one of the A2CPS GitHub repos. That table can be read directly from a URL.\n\ndmn_labels &lt;- read_csv(\"https://raw.githubusercontent.com/a2cps/functional_connectivity/3aa91a6c10d14dcc7d1fe9890e7a6db95d2aad8b/src/functional_connectivity/data/baliki.csv\")\ndmn_labels\n\n\n\n\n\nregion\nlabel\nx\ny\nz\n\n\n\n\n1\nmPFC\n2\n52\n-2\n\n\n2\nrNAC\n10\n12\n-8\n\n\n3\nrInsula\n40\n-6\n-2\n\n\n4\nS1/M1\n-32\n-34\n66\n\n\n\n\n\n\nAfter reading in the labels, they can be merged with the functional connectivity results.\n\ndmn_labeled &lt;- dmn |&gt;\n  left_join(dmn_labels, by = join_by(source == region)) |&gt;\n  select(-source, -x, -y, -z) |&gt;\n  rename(source = label) |&gt;\n  left_join(dmn_labels, by = join_by(target == region)) |&gt;\n  select(-target, -x, -y, -z) |&gt;\n  rename(target = label)\n\nhead(dmn_labeled)\n\n\n\n\n\nsub\nconnectivity\nsource\ntarget",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Functional Connectivity</span>"
    ]
  },
  {
    "objectID": "fcn.html#considerations-while-working-on-the-project",
    "href": "fcn.html#considerations-while-working-on-the-project",
    "title": "7  Functional Connectivity",
    "section": "7.2 Considerations While Working on the Project",
    "text": "7.2 Considerations While Working on the Project\n\n7.2.1 Variability Across Scanners\nMany MRI biomarkers exhibit variability across the scanners, which may confound some analyses. For an up-to-date assessment of the issue and overview of current thinking, please see Confluence.\n\n\n7.2.2 Data Quality\nAs with any MRI derivative, all pipeline derivatives have been included. This means that products were included regardless of their quality, and so some products may have been generated from images that are known to have poor quality—rated “red”, or incomparable. For details on the ratings and how to exclude them, see Appendix A. Additionally, extensive QC has not yet been performed on the derivatives themselves, and so there may be cases where pipelines produced atypical outputs. For an overview of planned checks, see Confluence.\n\n\n7.2.3 Example Analysis: Discriminability\nIn this section, we show how the connectivity results could be used to calculate discriminability (Bridgeford et al., 2021), which is a multivariate measure of replicability like the intra-class correlation coefficient or fingerprinting. Discriminability ranges from 0 - 1, with 0.5 indicating something like an equal chance that the two scans from the same participants are as similar as the two scans from different participants, and 1 indicating that the two scans from the same participant are always more similar than two scans from differing participants.\n\nBridgeford, E. W., Wang, S., Wang, Z., Xu, T., Craddock, C., Dey, J., Kiar, G., Gray-Roncal, W., Colantuoni, C., Douville, C., et al. (2021). Eliminating accidental deviations to minimize generalization error and maximize replicability: Applications in connectomics and genomics. PLoS Computational Biology, 17(9), e1009279. https://doi.org/10.1371/journal.pcbi.1009279\nWe are going to assess whether a person’s connectivity matrix is consistent across runs, even across runs of different types (e.g., CUFF1 vs CUFF2, REST1 vs CUFF1).\nFirst, we need a list of participants that have all four scan types.\n\nsubs_with_all_runs &lt;- open_dataset(\"data/connectivity\") |&gt;\n  distinct(sub, task, run) |&gt;\n  count(sub) |&gt;\n  filter(n == 4) |&gt;\n  select(sub) |&gt;\n  collect()\n\nAs usual, we should also restrict analyses to only those runs that are not “red”.\n\nred_fmri &lt;- read_tsv(dir_ls(\"data/scans\", glob = \"*tsv\"), na = \"n/a\") |&gt;\n  filter(str_detect(filename, \"task\")) |&gt;\n  filter(rating == \"red\") |&gt;\n  mutate(\n    sub = str_extract(filename, \"(?&lt;=sub-)[[:digit:]]{5}\") |&gt;\n      as.integer()\n  ) |&gt;\n  distinct(sub)\nhead(red_fmri)\n\n\n\n\n\nsub\n\n\n\n\n10049\n\n\n10058\n\n\n10060\n\n\n10074\n\n\n10086\n\n\n10092\n\n\n\n\n\n\nOf the list of participants with all four functional scans, filter out the participants for which any of the scans were red.\n\nsubs_with_all_runs_ok &lt;- subs_with_all_runs |&gt;\n  anti_join(red_fmri)\n\nUse this to filter the connectivity results. We’ll select just one of the smaller DiFuMo atlases (Dadi et al., 2020). As before, we’ll stick with the empirical estimator.\n\nDadi, K., Varoquaux, G., Machlouzarides-Shalit, A., Gorgolewski, K. J., Wassermann, D., Thirion, B., & Mensch, A. (2020). Fine-grain atlases of functional modes for fMRI analysis. NeuroImage, 221, 117126. https://doi.org/10.1016/j.neuroimage.2020.117126\n\nfcn &lt;- open_dataset(\"data/connectivity\") |&gt;\n  filter(atlas == \"difumo_dimension-64_resolution-2mm\") |&gt;\n  filter(estimator == \"empirical\") |&gt;\n  semi_join(subs_with_all_runs_ok, by = join_by(sub)) |&gt;\n  mutate(scan = str_c(task, run)) |&gt;\n  select(-atlas, -ses, -task, -run, -estimator) |&gt;\n  collect()\nhead(fcn)\n\n\n\n\n\nsource\ntarget\nconnectivity\nsub\nscan\n\n\n\n\n1\n10\n0.0352251\n10010\nrest1\n\n\n1\n11\n0.3364920\n10010\nrest1\n\n\n1\n12\n0.3715636\n10010\nrest1\n\n\n1\n13\n-0.0007062\n10010\nrest1\n\n\n1\n14\n0.2097767\n10010\nrest1\n\n\n1\n15\n0.3638389\n10010\nrest1\n\n\n\n\n\n\nNext, define some helper functions to break up the different parts of the analysis pipeline.\n\nget_scan_combinations &lt;- function(\n    scans = c(\"rest1\", \"rest2\", \"cuff1\", \"cuff2\"),\n    .col1 = scan1,\n    .col2 = scan2) {\n  combn(scans, 2) |&gt;\n    t() |&gt;\n    as_tibble() |&gt;\n    rename({{ .col1 }} := V1, {{ .col2 }} := V2)\n}\n\njoin_fcn_to_combinations &lt;- function(.data, fcn) {\n  fcn_nested &lt;- group_nest(fcn, scan)\n  .data |&gt;\n    left_join(fcn_nested, by = join_by(scan1 == scan)) |&gt;\n    left_join(fcn_nested, by = join_by(scan2 == scan)) |&gt;\n    mutate(\n      data = map2(\n        data.x, data.y,\n        ~ left_join(.x, .y, by = join_by(source, target, sub))\n      )\n    ) |&gt;\n    select(-starts_with(\"data.\"))\n}\n\nget_discr &lt;- function(.data) {\n  d &lt;- .data |&gt;\n    mutate(feature = interaction(source, target)) |&gt;\n    select(-source, -target) |&gt;\n    pivot_longer(starts_with(\"connectivity\")) |&gt;\n    pivot_wider(names_from = \"feature\")\n\n  discr.stat(\n    as.matrix(select(d, -sub, -name)),\n    as.matrix(select(d, sub))\n  )$discr\n}\n\nApply these helper functions to the functional connectivity data, calculating discriminability.\n\ndiscriminability &lt;- get_scan_combinations() |&gt;\n  join_fcn_to_combinations(fcn) |&gt;\n  mutate(discr = map_dbl(data, get_discr)) |&gt;\n  select(-data)\n\nTo review the results, plot the data. When plotting, let’s color the points based on whether the two scans are of the same type.\n\ndiscriminability |&gt;\n  mutate(\n    same_type = (str_detect(scan1, \"rest\") & str_detect(scan2, \"rest\")) |\n      (str_detect(scan1, \"cuff\") & str_detect(scan2, \"cuff\")),\n    scans = interaction(scan1, scan2)\n  ) |&gt;\n  ggplot(aes(x = scans, y = discr, color = same_type)) +\n  geom_point() +\n  coord_flip() +\n  ylim(0, 1)\n\n\n\n\n\n\n\n\nOverall, discriminability is around 0.8, with at most minor differences between different pairings of runs.",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Functional Connectivity</span>"
    ]
  },
  {
    "objectID": "gift.html",
    "href": "gift.html",
    "title": "8  Group ICA of fMRI Toolbox (GIFT)",
    "section": "",
    "text": "8.0.1 Locate Data\nIndependent Component Analysis (ICA) is a method for identifying “components” that are spatial regions of the brain exhibiting distinctly correlated activity over time (Calhoun et al., 2001). These components can be thought of as functional brain networks. For functional connectivity research, the timeseries of these ICA-derived networks are often correlated with each other to assess inter-network correlations, enabling investigators to study how these independent brain systems interact and communicate with one another.\nIntrinsic functional connectivity networks within the resting-state fMRI data were estimated with NeuroMark (Du et al., 2020) using the Group ICA of fMRI Toolbox (GIFT). NeuroMark is an automated and adaptive independent component analysis pipeline that uses group ICA-based templates as spatial priors to guide the identification of subject-specific independent component networks and the extraction of network features (e.g., timecourses, functional connectivity within and between networks, graph theoretic measures). For full details on the output and methods of GIFT, please refer to the toolbox documentation.\nNote: if all you need are estimates of functional connectivity between ICA components, please see the MRI Image Derived Phenotype table, mris/idp/mri.{tsv,json}. Here, we outline how A2CPS structures the outputs and highlight a few key files that may be helpful for custom analyses (e.g., estimating dynamic connectivity).\nOn TACC, the neuroimaging data are stored underneath the releases. For example, data release v2.#.# is underneath\nThe GIFT derivatives are underneath mris/derivatives/gift. This structure follows the BIDS method of storing derived datasets. Inputs to GIFT are stored underneath the top-level “sub-[recordid]” directories.\nThese files are copies of the outputs of fmriprep. Specifically, they are are files matching *space-MNI152NLin2009cAsym_res-2_desc-preproc*.\nThe GIFT derivatives are underneath the subfolder “derivatives”.\nWe provide results from two different NeuroMark network templates (alternatively called “model”). Templates are the spatial priors that were used in the estimation of ICA components. The first is NeuroMark 2.0 (model order = 175) which includes 58 non-artifactual components produced from a single model order of 175 components (Iraji et al., 2023). The second is the multi-scale NeuroMark 2.1 which includes 105 non-artifactual components covering diverse spatial scales which are aggregated from diverse model orders (Iraji et al., 2023). A typical analysis will involve only one model. Without a specific reason to prefer one template, the 2.1, multi-order model is recommended. For additional details on the templates, please see this page of references.\nThe model directories are themselves organized according to BIDS.",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Group ICA of fMRI Toolbox (GIFT)</span>"
    ]
  },
  {
    "objectID": "gift.html#considerations-while-working-on-the-project",
    "href": "gift.html#considerations-while-working-on-the-project",
    "title": "8  Group ICA of fMRI Toolbox (GIFT)",
    "section": "8.1 Considerations While Working on the Project",
    "text": "8.1 Considerations While Working on the Project\n\n8.1.1 Variability Across Scanners\nMany MRI biomarkers exhibit variability across the scanners, which may confound some analyses. For an up-to-date assessment of the issue and overview of current thinking, please see Confluence.\n\n\n8.1.2 Data Quality\nAs with any MRI derivative, all pipeline derivatives have been included. This means that products were included regardless of their quality, and so some products may have been generated from images that are known to have poor quality—rated “red”, or incomparable. For details on the ratings and how to exclude them, see Appendix A. Additionally, extensive QC has not yet been performed on the derivatives themselves, and so there may be cases where pipelines produced atypical outputs. For an overview of planned checks, see Confluence.\n\n\n8.1.3 Data Generation\nThe GIFT outputs were generated by the gift_app component of the A2CPS Imaging pipeline. Prior to NeuroMark, the resting-state fMRI data were minimally preprocessed (Sadil et al. (2024)), and then resampled to 2.4mm isotropic voxel size to ensure identical dimensions across all subjects. After resampling, volumes were spatially smoothed using a Gaussian kernel with a full width at half maximum of 6mm. NeuroMark was then applied separately for each resting-state run from each subject and separately for each template. The NeuroMark pipeline included the following configuration options: brain masking using the default mask plus intracranial volume, coregistration of the functional data to a functional template in MNI space (separate from the registration performed during minimal preprocessing), removal of the first 15 volumes (i.e., dummy scans), bandpass filtering (0.01-0.15Hz), removal of the mean per timepoint, multivariate-objective optimization ICA with reference (Du & Fan, 2013), and z-score scaling of results. The NeuroMark outputs include, separately for each template applied to each resting-state run from each subject, the timecourses and spatial maps of each intrinsic component network, functional network connectivity estimates, summary reports, and visualizations of the networks.\n\nDu, Y., & Fan, Y. (2013). Group information guided ICA for fMRI data analysis. Neuroimage, 69, 157–197. https://doi.org/10.1016/j.neuroimage.2012.11.008\n\n\n8.1.4 Citations\nIf you use these products in your analyses, please cite the relevant papers written by members TReNDS.",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Group ICA of fMRI Toolbox (GIFT)</span>"
    ]
  },
  {
    "objectID": "postgift.html",
    "href": "postgift.html",
    "title": "9  ICA Connectivity",
    "section": "",
    "text": "9.1 Starting Project\nThe Chapter 8 products provide outputs in a raw format that will be familiar to users of that library. To facilitate analyses, A2CPS has repackaged those products into a tabular format. This kit covers the repackaged structure.",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>ICA Connectivity</span>"
    ]
  },
  {
    "objectID": "postgift.html#starting-project",
    "href": "postgift.html#starting-project",
    "title": "9  ICA Connectivity",
    "section": "",
    "text": "9.1.1 Locate Data\nOn TACC, the neuroimaging data are stored underneath the releases. For example, data release v2.#.# is underneath\npre-surgery/mris\nThe MRIQC metrics are underneath derivatives/postgift. Let’s take a look.\n\n$ ls postgift\namplitude  amplitude.json  biomarkers  biomarkers.json  connectivity  connectivity.json\n\n\n\n9.1.2 Extract Data\nThe tabular data comprise parquet files that have been partitioned in a hive style. Each table is a different summary of the components derived from GIFT.\n\namplitude: a measure of component amplitudes. In particular, they are the fractional Amplitude of Low Frequency Fluctuations (Zou et al., 2008).\nconnectivity: the (product-moment) correlations between component timecourses.\nbiomarkers: putative biomarkers of chronic pain calculated for A2CPS analyses.\n\n\nZou, Q.-H., Zhu, C.-Z., Yang, Y., Zuo, X.-N., Long, X.-Y., Cao, Q.-J., Wang, Y.-F., & Zang, Y.-F. (2008). An improved approach to detection of amplitude of low-frequency fluctuation (ALFF) for resting-state fMRI: Fractional ALFF. Journal of Neuroscience Methods, 172(1), 137–141. https://doi.org/10.1016/j.jneumeth.2008.04.012\nLet’s take a look at just the amplitudes.\n\namplitude &lt;- read_parquet_duckdb(\n  dir_ls(\n    \"data/postgift/amplitude\",\n    recurse = TRUE,\n    glob = \"*parquet\"\n  ),\n  prudence = \"lavish\"\n)\n\nhead(amplitude)\n\n\n\n\n\nfALFF\ncomponent\nsub\nses\ntask\nrun\nmodel\n\n\n\n\n2.061823\n0\n10003\nV1\nrest\n1\n2.0\n\n\n18.220871\n1\n10003\nV1\nrest\n1\n2.0\n\n\n2.286946\n2\n10003\nV1\nrest\n1\n2.0\n\n\n9.823509\n3\n10003\nV1\nrest\n1\n2.0\n\n\n1.624792\n4\n10003\nV1\nrest\n1\n2.0\n\n\n1.383541\n5\n10003\nV1\nrest\n1\n2.0\n\n\n\n\n\n\nTo get a feel for the data, let’s see whether there are differences between the amplitudes in the REST1 and CUFF1 scans.\nFirst, we filter the table, keeping only the amplitudes from a single model. We’ll also convert the components into a factor, for later use during modeling. At this point, the dataset is small enough that it’s easy to handle in memory, and so we’ll also collect it.\n\nrun1_amplitudes &lt;- amplitude |&gt;\n  filter(model == \"2.1\", run == 1) |&gt;\n  select(-model, -run, -ses) |&gt;\n  collect() |&gt;\n  mutate(component = factor(component))\n\nhead(run1_amplitudes)\n\n\n\n\n\nfALFF\ncomponent\nsub\ntask\n\n\n\n\n1.215915\n0\n10003\ncuff\n\n\n5.390841\n1\n10003\ncuff\n\n\n2.573948\n2\n10003\ncuff\n\n\n2.491914\n3\n10003\ncuff\n\n\n1.392216\n4\n10003\ncuff\n\n\n1.952687\n5\n10003\ncuff\n\n\n\n\n\n\nTo get a very high-level overview of the data, generate the MA plot. Let’s exclude the “red” scans to determine whether those are driving the difference.\n\nred_run1_scans &lt;- read_tsv(dir_ls(\"data/scans\", glob = \"*tsv\"), na = \"n/a\") |&gt;\n  filter(rating == \"red\", stringr::str_detect(filename, \"cuff_run-0[12]\")) |&gt;\n  mutate(\n    sub = stringr::str_extract(filename, \"[[:digit:]]{5}\") |&gt; as.integer()\n  ) |&gt;\n  select(sub)\n\n\n\n\n\ndo_ma_plot &lt;- function(.d) {\n  .d |&gt;\n    pivot_wider(names_from = task, values_from = fALFF) |&gt;\n    na.omit() |&gt; # not every participant has a REST1 and CUFF1\n    mutate(a = (log2(rest) + log2(cuff)) / 2, m = log2(cuff) - log2(rest)) |&gt;\n    ggplot(aes(x = a, y = m)) +\n    facet_wrap(~component, scales = \"free\", nrow = 15) +\n    geom_point(alpha = 0.2) +\n    geom_hline(yintercept = 0, color = \"blue\") +\n    geom_smooth(method = \"lm\", color = \"red\") +\n    xlab(\"Average Log Intensity\") +\n    ylab(\"CUFF1 - REST1 Log Intensities\") +\n    theme(strip.background = element_blank(), strip.text = element_blank())\n}\n\nrun1_amplitudes_without_red &lt;- run1_amplitudes |&gt;\n  anti_join(red_run1_scans, by = join_by(sub))\n\nrun1_amplitudes |&gt; do_ma_plot()\n\n\n\n\n\n\n\n\n\n\nFigure 9.1: Fractional Amplitude of Low Frequency Fluctuations. Each panel is a distinct component. The x-axis is a mean average, and the y-axis is a ratio of the two fALFFs. The\n\n\n\nFor the most part, there is not a substantially large difference in the log intensities. However, it may be interesting that there appears to be a trend such that amplitudes are somewhat lower in the CUFF as compared to REST conditions.\n\nlme4::lmer(\n  log(fALFF) ~ task + (1 | sub) + (1 | component),\n  run1_amplitudes_without_red\n) |&gt;\n  summary()\n\nLinear mixed model fit by REML ['lmerMod']\nFormula: log(fALFF) ~ task + (1 | sub) + (1 | component)\n   Data: run1_amplitudes_without_red\n\nREML criterion at convergence: 426430.9\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-5.4681 -0.6343  0.0154  0.6551  5.6997 \n\nRandom effects:\n Groups    Name        Variance Std.Dev.\n sub       (Intercept) 0.4852   0.6966  \n component (Intercept) 0.5847   0.7647  \n Residual              0.6963   0.8344  \nNumber of obs: 170100, groups:  sub, 943; component, 105\n\nFixed effects:\n            Estimate Std. Error t value\n(Intercept) 0.560178   0.078077   7.175\ntaskrest    0.114274   0.004422  25.843\n\nCorrelation of Fixed Effects:\n         (Intr)\ntaskrest -0.036\n\n\nSo, indeed, there is some evidence for higher amplitudes during REST1 as compared with CUFF1. Please note that a more careful analysis should include other factors like scanning site, participant age, or motion.",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>ICA Connectivity</span>"
    ]
  },
  {
    "objectID": "postgift.html#considerations-while-working-on-the-project",
    "href": "postgift.html#considerations-while-working-on-the-project",
    "title": "9  ICA Connectivity",
    "section": "9.2 Considerations While Working on the Project",
    "text": "9.2 Considerations While Working on the Project\n\n9.2.1 Variability Across Scanners\nMany MRI biomarkers exhibit variability across the scanners, which may confound some analyses. For an up-to-date assessment of the issue and overview of current thinking, please see Confluence.\n\n\n9.2.2 Data Quality\nAs with any MRI derivative, all pipeline derivatives have been included. This means that products were included regardless of their quality, and so some products may have been generated from images that are known to have poor quality—rated “red”, or incomparable. For details on the ratings and how to exclude them, see Appendix A. Additionally, extensive QC has not yet been performed on the derivatives themselves, and so there may be cases where pipelines produced atypical outputs. For an overview of planned checks, see Confluence.\n\n\n9.2.3 Citations\nIf you use these products in your analyses, please cite the relevant papers written by members TReNDS.",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>ICA Connectivity</span>"
    ]
  },
  {
    "objectID": "mriqc.html",
    "href": "mriqc.html",
    "title": "10  MRIQC",
    "section": "",
    "text": "10.1 Starting Project\nPart of the A2CPS MRI quality control procedure Section 3.1.2 uses metrics derived from the MRI Quality Control (MRIQC) pipeline (Esteban et al., 2017). However, MRIQC provides several metrics beyond the subset used by A2CPS. This kit reviews those metrics and shows how they compare with others that are available in the MRIQC database.",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>MRIQC</span>"
    ]
  },
  {
    "objectID": "mriqc.html#starting-project",
    "href": "mriqc.html#starting-project",
    "title": "10  MRIQC",
    "section": "",
    "text": "10.1.1 Locate Data\nOn TACC, the neuroimaging data are stored underneath the releases. For example, data release v2.#.# is underneath\npre-surgery/mris\nThe MRIQC metrics are underneath derivatives/mriqc.\n\n\n10.1.2 Extract Data\nThe A2CPS pipeline produces a standard set of MRIQC outputs, including both participant- and group-level results. For a detailed explanation of the outputs, please see the official MRIQC documentation. At a high-level, the outputs include:\n\nparticipant-level metrics: underneath sub-[recordid]/ses-[protocolid]/{anat,func,dwi}\nparticipant-level reports: html documents that display participant-level figures related to data quality and MRIQC preprocessing\ngroup-level results: files with the prefix group_ that collate the participant-level results\n\n$ ls /corral-secure/projects/A2CPS/products/consortium-data/pre-surgery/mris/derivatives/mriqc | head\ngroup_bold.html\ngroup_bold.tsv\ngroup_dwi.html\ngroup_dwi.tsv\ngroup_T1w.html\ngroup_T1w.tsv\nsub-10003\nsub-10003_ses-V1_dwi.html\nsub-10003_ses-V1_T1w.html\nsub-10003_ses-V1_task-cuff_run-01_bold.html\nFor example, here are all of the metrics available for the functional data.\n\ngroup_bold &lt;- read_tsv(\"data/mriqc/group_bold.tsv\")\ngroup_bold |&gt;\n  head()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nsize_x\nsummary_fg_p05\ngsr_x\nfd_perc\nfwhm_x\nfwhm_avg\ngsr_y\nsize_y\ngcor\nsummary_bg_k\nfwhm_z\nspacing_z\nsummary_bg_median\nsummary_fg_mean\nsummary_fg_p95\nsize_z\nsummary_bg_mad\nspacing_x\nsummary_bg_n\nsummary_bg_p95\ndvars_nstd\nsummary_bg_stdv\nsummary_fg_k\nspacing_tr\nsize_t\nsnr\nsummary_fg_stdv\ntsnr\ndvars_vstd\ndvars_std\naqi\nfd_mean\nfd_num\nfber\ndummy_trs\nspacing_y\naor\nefc\nsummary_bg_mean\nfwhm_y\nsummary_bg_p05\nsummary_fg_mad\nsummary_fg_median\nsummary_fg_n\nbids_name\n\n\n\n\n90\n255\n-0.0121202\n92.77652\n3.069183\n2.910943\n0.0296651\n90\n0.0039961\n69.6477\n2.866987\n2.4\n10\n1072.0242\n1873\n60\n14.8260\n2.40000\n389198\n167\n114.37294\n89.8264\n2.5801\n0.8000000\n443\n2.220860\n468.2846\n16.08951\n0.9862437\n1.283511\n0.0532005\n0.9142547\n411\n10858.5127\n7\n2.40000\n0.0045815\n0.4243\n38.3237\n2.796658\n0\n356.6813\n1040\n96802\nsub-10355_ses-V3_task-cuff_run-01_bold\n\n\n90\n290\n0.0088436\n47.40406\n3.250654\n2.996301\n0.0279804\n90\n0.0035719\n97.8685\n2.940925\n2.4\n14\n1215.6718\n2224\n60\n20.7531\n2.40000\n366337\n248\n39.78583\n153.3359\n4.6670\n0.8000000\n443\n2.032800\n569.6553\n26.74147\n0.9690394\n1.090245\n0.0189762\n0.2202484\n210\n7218.0190\n7\n2.40000\n0.0046997\n0.4688\n58.3281\n2.797325\n0\n399.2685\n1158\n119663\nsub-20041_ses-V3_task-cuff_run-02_bold\n\n\n90\n182\n-0.0173981\n38.47875\n2.851042\n3.053996\n0.0641578\n90\n0.0022321\n50.8674\n3.215412\n2.4\n17\n471.1883\n806\n60\n4.6468\n2.40000\n388706\n127\n36.21926\n59.6670\n0.5428\n0.8000000\n447\n2.444261\n184.9220\n35.41455\n0.9611394\n1.029062\n0.0133520\n0.1717237\n172\n731.6926\n3\n2.40000\n0.0003907\n0.4995\n35.7919\n3.095533\n14\n165.4644\n452\n97294\nsub-20399_ses-V3_task-cuff_run-02_bold\n\n\n96\n6845\n-0.0110442\n94.15730\n2.686887\n2.534638\n0.0287072\n96\n0.0061725\n70.4831\n2.449446\n2.4\n26\n19412.4011\n27486\n54\n38.5477\n2.21875\n394502\n3262\n66.94345\n1492.6184\n1.4292\n0.7999997\n445\n3.529797\n5676.2202\n25.88404\n0.9959189\n1.174573\n0.0453041\n0.7045787\n419\n584686.2500\n5\n2.21875\n0.0025314\n0.4514\n699.5358\n2.467583\n0\n3896.1295\n20036\n103162\nsub-11069_ses-V3_task-cuff_run-02_bold\n\n\n90\n306\n-0.0119028\n55.32880\n3.275942\n3.119962\n0.0276843\n90\n0.0013895\n276.4821\n3.100054\n2.4\n12\n1143.9366\n1970\n60\n17.7912\n2.40000\n385415\n181\n41.74820\n138.2481\n3.0032\n0.8000000\n441\n2.274493\n490.6563\n20.88673\n0.9053607\n1.014526\n0.0416413\n0.2101655\n244\n8937.8770\n9\n2.40000\n0.0025078\n0.4332\n45.6822\n2.983891\n0\n366.2935\n1116\n100585\nsub-10295_ses-V1_task-cuff_run-01_bold\n\n\n90\n191\n0.0039095\n29.93197\n2.805417\n2.664839\n0.0147271\n90\n0.0099024\n98.7085\n2.593362\n2.4\n11\n1129.2300\n1991\n60\n16.3053\n2.40000\n398773\n163\n38.32907\n103.9497\n2.2260\n0.8000000\n441\n2.206411\n513.9539\n31.49358\n0.9654090\n1.134152\n0.0140956\n0.1442416\n132\n11567.4209\n9\n2.40000\n0.0010844\n0.4023\n40.0061\n2.595737\n0\n367.4937\n1134\n87227\nsub-10326_ses-V1_task-cuff_run-02_bold\n\n\n\n\n\n\nFor a detailed description of these metrics, please see the official MRIQC documentation.\n\nStructural\nFunctional\nDiffusion\n\n\n\n10.1.3 Comparison with Reference Distributions\nOne strength of MRIQC is that the pipeline automatically stores the metrics in a centralized database. The centralized database is available via the MRIQC Web API. An example of interacting with the API can be found in https://github.com/psadil/mriqc-export. In this kit, the metrics have already been downloaded and stored in a set parquet files. Let’s use that reference set to rate A2CPS. One of the most important determiners of quality is motion, so let’s focus on the average Framewise Displacement.\n\nall_bold &lt;- duckplyr::read_parquet_duckdb(\n  fs::dir_ls(\n    \"data/mriqcwebapi/bold\",\n    recurse = TRUE,\n    glob = \"*parquet\"\n  )\n) |&gt;\n  dplyr::select(`_id`, fd_mean) |&gt;\n  collect()\n\nnrow(all_bold)\n\n[1] 1245400\n\n\nLoading them, we see that there are over 1 million entries in the database.\nLet’s create a simple scatter plot to compare motion in A2CPS against motion in the MRIQC database. Note that because there are so many points to display, we’re using the package scattermore.\n\ndplyr::bind_rows(list(a2cps = group_bold, mriqc = all_bold), .id = \"source\") |&gt;\n  ggplot(aes(x = source, y = fd_mean)) +\n  geom_violin() +\n  geom_scattermore(position = position_jitter(height = 0)) +\n  coord_cartesian(ylim = c(0, 5))\n\n\n\n\n\n\n\n\nQuantitatively, the dataset is in the upper quantiles of motion, which is to be expected given the study population.\n\nempirical_motion_cdf &lt;- ecdf(all_bold$fd_mean)\n\ngroup_bold |&gt;\n  mutate(\n    fd_quantile = empirical_motion_cdf(fd_mean)\n  ) |&gt;\n  ggplot(aes(x = fd_quantile)) +\n  geom_histogram()",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>MRIQC</span>"
    ]
  },
  {
    "objectID": "mriqc.html#considerations-while-working-on-the-project",
    "href": "mriqc.html#considerations-while-working-on-the-project",
    "title": "10  MRIQC",
    "section": "10.2 Considerations While Working on the Project",
    "text": "10.2 Considerations While Working on the Project\n\n10.2.1 Framewise Displacement and A2CPS\nA key element of the A2CPS Quality Ratings for raw data is based on Framewise Displacement. Although MRIQC provides a measurement of framewise displacement, it is not the one that is entered into the rating. Instead, A2CPS uses the estimate of motion from fMRIPrep, what it refers to as rmsd, also referred to as FD_Jenk, in reference to the method as described in Jenkinson et al. (2002). The measure of motion provided by MRIQC is sometimes referred to as FD_Power (e.g., Parkes et al. (2018)), referring to Power et al. (2012). FD_Power measures the distance travelled by a point on the edge of a sphere between frames (usually using a sphere of 50 mm), whereas FD_Jenk measures the average distance traveled by the entire sphere (usually using a sphere of 80 mm). The two measures are often almost perfectly correlated, but FD_Power tends to be about 1.7x as high as FD_Jenk.\n\nJenkinson, M., Bannister, P., Brady, M., & Smith, S. (2002). Improved optimization for the robust and accurate linear registration and motion correction of brain images. Neuroimage, 17(2), 825–841. https://doi.org/10.1006/nimg.2002.1132\n\nParkes, L., Fulcher, B., Yücel, M., & Fornito, A. (2018). An evaluation of the efficacy, reliability, and sensitivity of motion correction strategies for resting-state functional MRI. Neuroimage, 171, 415–436. https://doi.org/10.1016/j.neuroimage.2017.12.073\n\nPower, J. D., Barnes, K. A., Snyder, A. Z., Schlaggar, B. L., & Petersen, S. E. (2012). Spurious but systematic correlations in functional connectivity MRI networks arise from subject motion. Neuroimage, 59(3), 2142–2154. https://doi.org/10.1016/j.neuroimage.2011.10.018\n\n\n10.2.2 MRIQC Versions\nPlease be aware that, across versions of MRIQC, the manner in which MRIQC calculates metrics has changed. These changes can lead to substantial differences in the distribution of metrics. For one set of examples, please see this GitHub issue.\n\n\n10.2.3 Variability Across Scanners\nMany of these metrics exhibit substantial variability across the scanners, which may confound some analyses. For example, the scanner “NS” (serial number: 70032) has the “Prescan Normalization” feature turned off, which produces substantial intensity inhomogeneity in the images. This inhomogeneity is very noticeable in the images, resulting in much voxels near the edge of the field-of-view being much brighter than voxels in the center of the field-of-view. Unfortunately, this spatial pattern confounds one of the metrics produced by MRIQC that is designed to estimate ghosting: the “Ghost-to-Signal” Ratio. That is, the values for this ratio suggest that the NS scanner suffers from substantial ghosting, but those values are instead driven primarily by intensity inhomogeneity.\nAs another example, the scanner UC (serial number: 71399) is unique in that the structural images were collected with “Image Domain Parallel Imaging”. This form of parallel imaging causes a near total suppression of the background signal (that is, most background voxels have intensity 0). Several of the MRIQC metrics incorporate the background signal, and so this noise suppression causes those metrics to have a fundamentally different scaling as compared to metrics calculated on images without that suppression. Consider the “Dietrich” version of the signal-to-noise ratio (Dietrich et al., 2007), which uses the standard deviation of the intensity in the background to scale the average intensity of the foreground, producing substantially larger estimates of the signal-to-noise ratio.\n\nDietrich, O., Raya, J. G., Reeder, S. B., Reiser, M. F., & Schoenberg, S. O. (2007). Measurement of signal-to-noise ratios in MR images: Influence of multichannel coils, parallel imaging, and reconstruction filters. Journal of Magnetic Resonance Imaging: An Official Journal of the International Society for Magnetic Resonance in Medicine, 26(2), 375–385. https://doi.org/10.1002/jmri.20969\nFor a detailed description of these particular issues, please see these slides. In general, interpreting the MRIQC metrics should be done with caution.\n\n\n10.2.4 Citations\nIf you use these results, please cite the MRIQC report (Esteban et al., 2017) and all relevant citations of the pipeline configuration.\n\n\n\nEsteban, O., Birman, D., Schaer, M., Koyejo, O. O., Poldrack, R. A., & Gorgolewski, K. J. (2017). MRIQC: Advancing the automatic prediction of image quality in MRI from unseen sites. PloS One, 12(9), e0184661. https://doi.org/10.1371/journal.pone.0184661",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>MRIQC</span>"
    ]
  },
  {
    "objectID": "neural-pain-signatures.html",
    "href": "neural-pain-signatures.html",
    "title": "11  Prior Neural Pain Signature Responses",
    "section": "",
    "text": "11.1 Starting Project",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Prior Neural Pain Signature Responses</span>"
    ]
  },
  {
    "objectID": "neural-pain-signatures.html#starting-project",
    "href": "neural-pain-signatures.html#starting-project",
    "title": "11  Prior Neural Pain Signature Responses",
    "section": "",
    "text": "11.1.1 Locate data\nOn TACC, the neuroimaging data are stored underneath the releases. For example, data release v2.#.# is underneath\npre-surgery/mris\nThe signature response are underneath derivatives/signatures\n$ ls derivatives/signatures/\ncleaned    confounds.json      signatures-by-part-diff       signatures-by-part.json  signatures-by-run-diff       signatures-by-run.json  signatures-by-tr-diff       signatures-by-tr.json\nconfounds  signatures-by-part  signatures-by-part-diff.json  signatures-by-run        signatures-by-run-diff.json  signatures-by-tr        signatures-by-tr-diff.json\nSignature responses are stored either “by-run” (that is, one response per scan), “by-part” (three responses per run corresponding to the three parts for which participants provided pain ratings), or “by-tr” (one response for every volume). The biomarker corresponds to the values that are “by-run”. Additionally, responses may be calculated with only the data from a single run (e.g., a “by-run” response for REST1, CUFF1, CUFF2, and REST2), or they may be calculated as a difference (“diff”) between one of the CUFF scans and one of the REST scans.\nEach signature response folder contains a table of values, and *.json sidecars are data dictionaries that conform to BIDS. The data dictionary for responses “by-run” is copied below.\n{\n    \"signature\": {\n        \"LongName\": \"Signature\",\n        \"Description\": \"Index for of Signature. See signature_labels.json\"\n    },\n    \"correlation\": {\n        \"LongName\": \"Correlation\",\n        \"Description\": \"Signature as Estimated by Correlation\"\n    },\n    \"dot\": {\n        \"LongName\": \"Dot Product\",\n        \"Description\": \"Signature as Estimated by Dot Product\"\n    },\n    \"cosine\": {\n        \"LongName\": \"Cosine Similarity\",\n        \"Description\": \"Signature as Estimated by Cosine Similarity\"\n    },\n    \"sub\": {\n        \"LongName\": \"Subject\",\n        \"Description\": \"Study Participant, BIDS Subject ID\",\n        \"TermURL\": \"https://bids-specification.readthedocs.io/en/v1.9.0/appendices/entities.html#sub\"\n    },\n    \"ses\": {\n        \"LongName\": \"Session\",\n        \"Description\": \"Visit, Protocol, BIDS Session ID\",\n        \"Levels\": {\n            \"V1\": \"baseline_visit\",\n            \"V3\": \"3mo_postop\"\n        },\n        \"TermURL\": \"https://bids-specification.readthedocs.io/en/v1.9.0/appendices/entities.html#ses\"\n    },\n    \"task\": {\n        \"LongName\": \"Task\",\n        \"Description\": \"Functional MRI Task, BIDS Task ID\",\n        \"Levels\": {\n            \"cuff\": \"cuff pressure scan\",\n            \"rest\": \"resting state scan\"\n        },\n        \"TermURL\": \"https://bids-specification.readthedocs.io/en/v1.9.0/appendices/entities.html#task\"\n    },\n    \"run\": {\n        \"LongName\": \"Run\",\n        \"Description\": \"Task Run Number, BIDS Run ID\",\n        \"TermURL\": \"https://bids-specification.readthedocs.io/en/v1.9.0/appendices/entities.html#run\"\n    }\n}\nNote: the table mentions “session”, but in this release only V1 (baseline) results are available.\n\n\n11.1.2 Extract data\nThe tabular data comprise parquet files that have been partitioned in a hive-style. That is, subfolder names contain column information – in this case subject ID (REDCap Record ID), task, and run.\n$ tree signature-by-run\nsignature-by-run\n├── sub=10003\n│  └── ses=V1\n│     ├── task=cuff\n│     │  └── run=1\n│     │     └── part-0.parquet\n│     └── task=rest\n│        ├── run=1\n│        │  └── part-0.parquet\n│        └── run=2\n│           └── part-0.parquet\n├── sub=10008\n│  └── ses=V1\n│     ├── task=cuff\n│     │  └── run=1\n│     │     └── part-0.parquet\n│     └── task=rest\n│        ├── run=1\n│        │  └── part-0.parquet\n│        └── run=2\nThe biomarker is based on the CUFF1 (task=cuff/run=1) scan. The other scans are available for secondary analyses, but please note that not all participants have all tasks and runs available.\nTo load the whole dataset, the parquet files may be read individually or using a tool that is aware of the hive-partitioning structure. In R, a good choice is the arrow library.\n\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\n\nopen_dataset(\"data/signatures-by-run\") |&gt;\n  filter(signature %in% c(\"grouppred_cvpcr\", \"137subjmap_weighted_mean\")) |&gt;\n  filter(task == \"cuff\", run == 1) |&gt;\n  select(signature, value = correlation, sub, ses) |&gt;\n  collect() |&gt;\n  pivot_wider(names_from = signature) |&gt;\n  rename(\n    SIIPS1 = `137subjmap_weighted_mean`,\n    NPS = `grouppred_cvpcr`\n  )\n\n# A tibble: 716 × 4\n     sub ses     SIIPS1      NPS\n   &lt;int&gt; &lt;chr&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n 1 10003 V1    -0.00162  0.0331 \n 2 10010 V1    -0.0611  -0.0200 \n 3 10011 V1    -0.00652 -0.0740 \n 4 10008 V1    -0.0407  -0.0581 \n 5 10013 V1    -0.0279   0.0234 \n 6 10014 V1    -0.00120 -0.0146 \n 7 10017 V1    -0.0165   0.0263 \n 8 10015 V1    -0.0576  -0.0178 \n 9 10020 V1    -0.0103  -0.0530 \n10 10023 V1     0.0116  -0.00789\n# ℹ 706 more rows\n\n\nIn python, a good choice is the polars library\n\nimport polars as pl\n\npl.read_parquet(\"data/signatures-by-run\").filter(\n    pl.col(\"signature\").is_in([\"grouppred_cvpcr\", \"137subjmap_weighted_mean\"])\n).filter(pl.col(\"task\") == \"cuff\", pl.col(\"run\") == 1).rename(\n    {\"correlation\": \"value\"}\n).select(\n    \"signature\",\n    \"value\",\n    \"sub\",\n    \"ses\",\n).pivot(\n    on=\"signature\", index=[\"sub\", \"ses\"]\n).rename(\n    {\"grouppred_cvpcr\": \"NPS\", \"137subjmap_weighted_mean\": \"SIIPS1\"}\n)\n\nshape: (716, 4)\n┌───────┬─────┬───────────┬───────────┐\n│ sub   ┆ ses ┆ SIIPS1    ┆ NPS       │\n│ ---   ┆ --- ┆ ---       ┆ ---       │\n│ i64   ┆ str ┆ f64       ┆ f64       │\n╞═══════╪═════╪═══════════╪═══════════╡\n│ 10003 ┆ V1  ┆ -0.001619 ┆ 0.033091  │\n│ 10008 ┆ V1  ┆ -0.040698 ┆ -0.058134 │\n│ 10010 ┆ V1  ┆ -0.061107 ┆ -0.019997 │\n│ 10011 ┆ V1  ┆ -0.006518 ┆ -0.074017 │\n│ 10013 ┆ V1  ┆ -0.027933 ┆ 0.023413  │\n│ …     ┆ …   ┆ …         ┆ …         │\n│ 25266 ┆ V1  ┆ -0.058184 ┆ -0.032597 │\n│ 25271 ┆ V1  ┆ -0.039983 ┆ -0.092517 │\n│ 25273 ┆ V1  ┆ -0.038248 ┆ -0.02306  │\n│ 25275 ┆ V1  ┆ -0.052387 ┆ -0.06732  │\n│ 25277 ┆ V1  ┆ 0.023143  ┆ -0.063882 │\n└───────┴─────┴───────────┴───────────┘",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Prior Neural Pain Signature Responses</span>"
    ]
  },
  {
    "objectID": "neural-pain-signatures.html#considerations-while-working-on-the-project",
    "href": "neural-pain-signatures.html#considerations-while-working-on-the-project",
    "title": "11  Prior Neural Pain Signature Responses",
    "section": "11.2 Considerations While Working on the Project",
    "text": "11.2 Considerations While Working on the Project\n\n11.2.1 Variability Across Scanners\nMany MRI biomarkers exhibit variability across the scanners, which may confound some analyses. For an up-to-date assessment of the issue and overview of current thinking, please see Confluence.\n\n\n11.2.2 Data Quality\nAs with any MRI derivative, all pipeline derivatives have been included. This means that products were included regardless of their quality, and so some products may have been generated from images that are known to have poor quality—rated “red”, or incomparable. For details on the ratings and how to exclude them, see Appendix A. Additionally, extensive QC has not yet been performed on the derivatives themselves, and so there may be cases where pipelines produced atypical outputs. For an overview of planned checks, see Confluence.\n\n\n11.2.3 Signature Response Measure\nThe signature responses were extracted using best-practices, but the imaging DIRC is currently exploring alternative ways of calculating signature responses in the CUFF tasks.\n\n\n11.2.4 Intermediate Outputs\nThe other folders contain intermediate outputs that may be useful for digging into a participant’s results\n\nconfounds\n\nThe nuisance timeseries that were used during denoising\n\ncleaned\n\nThe NifTI files of functional MRI after denoising (e.g., temporal filter, nuisance regression)",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Prior Neural Pain Signature Responses</span>"
    ]
  },
  {
    "objectID": "faq.html",
    "href": "faq.html",
    "title": "FAQ",
    "section": "",
    "text": "Q: After reviewing the kit, I still have questions. Who should I contact?\n\nA: Each kit is maintained by a different member of the DIRC, and their contact information is listed at the end of the kit. Please use the channels listed in the kit\n\nQ: I am not familiar with R. What are a few good resources.\n\nA: A great introduction to data analysis in R is the R for Data Science book. Many of the starter kits rely on the tidyverse, which is covered in that book.\n\nQ: I’m seeing what appears to be a set of related technologies, including parquet files, the Arrow format, and hive-style partioning. Where can I find out more information about these?\n\nA: Please see this chapter in the R for Data Science book. See also this series of posts by Danielle Navarro. For reading and working with these files, many kits specifically use the duckplyr package.",
    "crumbs": [
      "FAQ"
    ]
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Arrieta, J., Aguerrebere, M., Raviola, G., Flores, H., Elliott, P.,\nEspinosa, A., Reyes, A., Ortiz-Panozo, E., Rodriguez-Gutierrez, E. G.,\nMukherjee, J., Palazuelos, D., & Franke, M. F. (2017). Validity and\nUtility of the Patient Health Questionnaire (PHQ)-2 and PHQ-9 for\nScreening and Diagnosis of Depression in Rural Chiapas, Mexico: A\nCross-Sectional Study. Journal of Clinical Psychology,\n73(9), 1076–1090. https://doi.org/10.1002/jclp.22390\n\n\nBaliki, M. N., Petre, B., Torbey, S., Herrmann, K. M., Huang, L.,\nSchnitzer, T. J., Fields, H. L., & Apkarian, A. V. (2012).\nCorticostriatal functional connectivity predicts transition to chronic\nback pain. Nature Neuroscience, 15(8), 1117–1119. https://doi.org/10.1038/nn.3153\n\n\nBashyam, V. M., Erus, G., Doshi, J., Habes, M., Nasrallah, I. M.,\nTruelove-Hill, M., Srinivasan, D., Mamourian, L., Pomponio, R., Fan, Y.,\net al. (2020). MRI signatures of brain age and disease over the lifespan\nbased on a deep brain network and 14 468 individuals worldwide.\nBrain, 143(7), 2312–2324. https://doi.org/10.1093/brain/awaa160\n\n\nBayman, E. O. (2017). Pain-Related Limitations in Daily Activities\nFollowing Thoracic Surgery in a United States Population. Pain\nPhysician, 3(20;3), E367–E378. https://doi.org/10.36076/ppj.2017.e378\n\n\nBerardi, G., Frey-Law, L., Sluka, K. A., Bayman, E. O., Coffey, C. S.,\nEcklund, D., Vance, C. G. T., Dailey, D. L., Burns, J., Buvanendran, A.,\nMcCarthy, R. J., Jacobs, J., Zhou, X. J., Wixson, R., Balach, T.,\nBrummett, C. M., Clauw, D., Colquhoun, D., Harte, S. E., … Wandner, L.\nD. (2022). Multi-site observational study to assess biomarkers for\nsusceptibility or resilience to chronic pain: The acute to chronic pain\nsignatures (A2CPS) study protocol. Frontiers in Medicine,\n9. https://doi.org/10.3389/fmed.2022.849214\n\n\nBiondo, F., Jewell, A., Pritchard, M., Aarsland, D., Steves, C. J.,\nMueller, C., & Cole, J. H. (2022). Brain-age is associated with\nprogression to dementia in memory clinic patients. NeuroImage:\nClinical, 36, 103175. https://doi.org/10.1016/j.nicl.2022.103175\n\n\nBridgeford, E. W., Wang, S., Wang, Z., Xu, T., Craddock, C., Dey, J.,\nKiar, G., Gray-Roncal, W., Colantuoni, C., Douville, C., et al. (2021).\nEliminating accidental deviations to minimize generalization error and\nmaximize replicability: Applications in connectomics and genomics.\nPLoS Computational Biology, 17(9), e1009279. https://doi.org/10.1371/journal.pcbi.1009279\n\n\nBuysse, D. J., Reynolds, C. F., Monk, T. H., Berman, S. R., &\nKupfer, D. J. (1989). The Pittsburgh sleep quality index: A new\ninstrument for psychiatric practice and research. Psychiatry\nResearch, 28(2), 193–213. https://doi.org/10.1016/0165-1781(89)90047-4\n\n\nCalhoun, V. D., Adali, T., Pearlson, G. D., & Pekar, J. J. (2001). A\nmethod for making group inferences from functional MRI data using\nindependent component analysis. Human Brain Mapping,\n14(3), 140–151. https://doi.org/10.1002/hbm.1048\n\n\nCella, D., Riley, W., Stone, A., Rothrock, N., Reeve, B., Yount, S.,\nAmtmann, D., Bode, R., Buysse, D., Choi, S., Cook, K., DeVellis, R.,\nDeWalt, D., Fries, J. F., Gershon, R., Hahn, E. A., Lai, J.-S.,\nPilkonis, P., Revicki, D., … Hays, R. (2010). The Patient-Reported\nOutcomes Measurement Information System (PROMIS) developed and tested\nits first wave of adult self-reported health outcome item banks:\n20052008. Journal of Clinical Epidemiology,\n63(11), 1179–1194. https://doi.org/10.1016/j.jclinepi.2010.04.011\n\n\nClausen, A. N., Fercho, K. A., Monsour, M., Disner, S., Salminen, L.,\nHaswell, C. C., Rubright, E. C., Watts, A. A., Buckley, M. N.,\nMaron-Katz, A., et al. (2022). Assessment of brain age in posttraumatic\nstress disorder: Findings from the ENIGMA PTSD and brain age working\ngroups. Brain and Behavior, 12(1), e2413. https://doi.org/10.1002/brb3.2413\n\n\nCleeland CS Ryan KM. Pain assessment: global use of the Brief Pain\nInventory. Ann Acad Med Singapore (1994 Mar) 23(2):129-38. (1995).\nRehabilitation Oncology, 13(1), 29–30. https://doi.org/10.1097/01893697-199513010-00022\n\n\nCox, R. W., Ashburner, J., Breman, H., Fissell, K., Haselgrove, C.,\nHolmes, C. J., Lancaster, J. L., Rex, D. E., Smith, S. M., Woodward, J.\nB., et al. (2004). A (sort of) new image data format standard: NiFTI-1.\n10th Annual Meeting of the Organization for Human Brain\nMapping, 22, 01. https://nifti.nimh.nih.gov/pub/dist/doc/hbm_nifti_2004.pdf\n\n\nDadi, K., Varoquaux, G., Machlouzarides-Shalit, A., Gorgolewski, K. J.,\nWassermann, D., Thirion, B., & Mensch, A. (2020). Fine-grain atlases\nof functional modes for fMRI analysis. NeuroImage,\n221, 117126. https://doi.org/10.1016/j.neuroimage.2020.117126\n\n\nDarnall, B. D., Sturgeon, J. A., Cook, K. F., Taub, C. J., Roy, A.,\nBurns, J. W., Sullivan, M., & Mackey, S. C. (2017). Development and\nValidation of a Daily Pain Catastrophizing Scale. The Journal of\nPain, 18(9), 1139–1149. https://doi.org/10.1016/j.jpain.2017.05.003\n\n\nDietrich, O., Raya, J. G., Reeder, S. B., Reiser, M. F., &\nSchoenberg, S. O. (2007). Measurement of signal-to-noise ratios in MR\nimages: Influence of multichannel coils, parallel imaging, and\nreconstruction filters. Journal of Magnetic Resonance Imaging: An\nOfficial Journal of the International Society for Magnetic Resonance in\nMedicine, 26(2), 375–385. https://doi.org/10.1002/jmri.20969\n\n\nDu, Y., & Fan, Y. (2013). Group information guided ICA for fMRI data\nanalysis. Neuroimage, 69, 157–197. https://doi.org/10.1016/j.neuroimage.2012.11.008\n\n\nDu, Y., Fu, Z., Sui, J., Gao, S., Xing, Y., Lin, D., Salman, M., Abrol,\nA., Rahaman, M. A., Chen, J., et al. (2020). NeuroMark: An automated and\nadaptive ICA based pipeline to identify reproducible fMRI markers of\nbrain disorders. NeuroImage: Clinical, 28, 102375. https://doi.org/10.1016/j.nicl.2020.102375\n\n\nEsteban, O., Birman, D., Schaer, M., Koyejo, O. O., Poldrack, R. A.,\n& Gorgolewski, K. J. (2017). MRIQC: Advancing the automatic\nprediction of image quality in MRI from unseen sites. PloS One,\n12(9), e0184661. https://doi.org/10.1371/journal.pone.0184661\n\n\nFreynhagen, R., Baron, R., Gockel, U., & Tölle, T. R. (2006).\npainDETECT: a new screening questionnaire to\nidentify neuropathic components in patients with back pain. Current\nMedical Research and Opinion, 22(10), 1911–1920. https://doi.org/10.1185/030079906x132488\n\n\nGorgolewski, K. J., Auer, T., Calhoun, V. D., Craddock, R. C., Das, S.,\nDuff, E. P., Flandin, G., Ghosh, S. S., Glatard, T., Halchenko, Y. O.,\net al. (2016). The brain imaging data structure, a format for organizing\nand describing outputs of neuroimaging experiments. Scientific\nData, 3(1), 1–9. https://doi.org/10.1038/sdata.2016.44\n\n\nHalchenko, Y. O., Goncalves, M., Ghosh, S., Velasco, P., Oleggio\nCastello, M. V. di, Salo, T., Wodder, J. T., Hanke, M., Sadil, P.,\nGorgolewski, K. J., et al. (2024). HeuDiConv—flexible DICOM conversion\ninto structured directory layouts. Journal of Open Source\nSoftware, 9(99), 5839. https://doi.org/10.21105/joss.05839\n\n\nHobday, H., Cole, J. H., Stanyard, R. A., Daws, R. E., Giampietro, V.,\nO’Daly, O., Leech, R., & Váša, F. (2022). Tissue volume estimation\nand age prediction using rapid structural brain scans. Scientific\nReports, 12(1), 12005.\n\n\nIraji, A., Fu, Z., Faghiri, A., Duda, M., Chen, J., Rachakonda, S.,\nDeRamus, T., Kochunov, P., Adhikari, B. M., Belger, A., et al. (2023).\nIdentifying canonical and replicable multi-scale intrinsic connectivity\nnetworks in 100k+ resting-state fMRI datasets. Human Brain\nMapping, 44(17), 5729–5748. https://doi.org/10.1002/hbm.26472\n\n\nJenkinson, M., Bannister, P., Brady, M., & Smith, S. (2002).\nImproved optimization for the robust and accurate linear registration\nand motion correction of brain images. Neuroimage,\n17(2), 825–841. https://doi.org/10.1006/nimg.2002.1132\n\n\nKorponay, C., Janes, A. C., & Frederick, B. B. (2024). Brain-wide functional connectivity artifactually inflates\nthroughout functional magnetic resonance imaging scans. Nature\nHuman Behaviour, 8(8), 1568–1580.\n\n\nKratz, A. L., Schilling, S. G., Goesling, J., & Williams, D. A.\n(2015). Development and Initial Validation of a Brief Self-Report\nMeasure of Cognitive Dysfunction in Fibromyalgia. The Journal of\nPain, 16(6), 527–536. https://doi.org/10.1016/j.jpain.2015.02.008\n\n\nKroenke, K., Strine, T. W., Spitzer, R. L., Williams, J. B. W., Berry,\nJ. T., & Mokdad, A. H. (2009). The PHQ-8 as a measure of current\ndepression in the general population. Journal of Affective\nDisorders, 114(1-3), 163–173. https://doi.org/10.1016/j.jad.2008.06.026\n\n\nLi, X., Morgan, P. S., Ashburner, J., Smith, J., & Rorden, C.\n(2016). The first step for neuroimaging data analysis: DICOM to NIfTI\nconversion. Journal of Neuroscience Methods, 264,\n47–56. https://doi.org/10.1016/j.jneumeth.2016.03.001\n\n\nMcWilliams, L. A., Kowal, J., & Wilson, K. G. (2015). Development\nand evaluation of short forms of the Pain Catastrophizing Scale and the\nPain Self-efficacy Questionnaire. European Journal of Pain,\n19(9), 1342–1349. https://doi.org/10.1002/ejp.665\n\n\nMontesino-Goicolea, S., Valdes-Hernandez, P., Nodarse, C. L., Johnson,\nA. J., Cole, J. H., Antoine, L. H., Goodin, B. R., Fillingim, R. B.,\n& Cruz-Almeida, Y. (2023). Brain-predicted age difference mediates\nthe association between PROMIS sleep impairment, and self-reported pain\nmeasure in persons with knee pain. Aging Brain, 4,\n100088. https://doi.org/10.1016/j.nbas.2023.100088\n\n\nNichols, T. E., Das, S., Eickhoff, S. B., Evans, A. C., Glatard, T.,\nHanke, M., Kriegeskorte, N., Milham, M. P., Poldrack, R. A., Poline,\nJ.-B., et al. (2017). Best practices in data analysis and sharing in\nneuroimaging using MRI. Nature Neuroscience, 20(3),\n299–303. https://doi.org/10.1038/nn.4500\n\n\nParkes, L., Fulcher, B., Yücel, M., & Fornito, A. (2018). An\nevaluation of the efficacy, reliability, and sensitivity of motion\ncorrection strategies for resting-state functional MRI.\nNeuroimage, 171, 415–436. https://doi.org/10.1016/j.neuroimage.2017.12.073\n\n\nPower, J. D., Barnes, K. A., Snyder, A. Z., Schlaggar, B. L., &\nPetersen, S. E. (2012). Spurious but systematic correlations in\nfunctional connectivity MRI networks arise from subject motion.\nNeuroimage, 59(3), 2142–2154. https://doi.org/10.1016/j.neuroimage.2011.10.018\n\n\nRingsted, T. K., Wildgaard, K., Kreiner, S., & Kehlet, H. (2013).\nPain-related Impairment of Daily Activities After Thoracic Surgery.\nThe Clinical Journal of Pain, 29(9), 791–799. https://doi.org/10.1097/ajp.0b013e318278d4e2\n\n\nRoos, E. M., Roos, H. P., Lohmander, L. S., Ekdahl, C., & Beynnon,\nB. D. (1998). Knee Injury and Osteoarthritis Outcome Score\n(KOOS)Development of a Self-Administered Outcome Measure.\nJournal of Orthopaedic & Sports Physical Therapy,\n28(2), 88–96. https://doi.org/10.2519/jospt.1998.28.2.88\n\n\nSadil, P., Arfanakis, K., Bhuiyan, E. H., Caffo, B., Calhoun, V. D.,\nClauw, D. J., DeLano, M. C., Ford, J. C., Gattu, R., Guo, X., Harris, R.\nE., Ichesco, E., Johnson, M. A., Jung, H., Kahn, A. B., Kaplan, C. M.,\nLeloudas, N., Lindquist, M. A., Luo, Q., … Chronic Pain Signatures\nConsortium, T. A. to. (2024). Image processing in the acute to chronic\npain signatures (A2CPS) project. bioRxiv. https://doi.org/10.1101/2024.12.19.627509\n\n\nSlepian, P. M., Ankawi, B., Himawan, L. K., & France, C. R. (2016).\nDevelopment and Initial Validation of the Pain Resilience Scale. The\nJournal of Pain, 17(4), 462–472. https://doi.org/10.1016/j.jpain.2015.12.010\n\n\nSmith, S. M., Vidaurre, D., Alfaro-Almagro, F., Nichols, T. E., &\nMiller, K. L. (2019). Estimation of brain age delta from brain imaging.\nNeuroimage, 200, 528–539. https://doi.org/10.1016/j.neuroimage.2019.06.017\n\n\nSoto, C. J., & John, O. P. (2017). Short and extra-short forms of\nthe Big Five Inventory2: The BFI-2-S and BFI-2-XS.\nJournal of Research in Personality, 68, 69–81. https://doi.org/10.1016/j.jrp.2017.02.004\n\n\nSpitzer, R. L., Kroenke, K., Williams, J. B. W., & Löwe, B. (2006).\nA Brief Measure for Assessing Generalized Anxiety Disorder. Archives\nof Internal Medicine, 166(10), 1092. https://doi.org/10.1001/archinte.166.10.1092\n\n\nTopolski, T. D., LoGerfo, J., Patrick, D. L., Williams, B., Walwick, J.,\n& Patrick, M. M. B. (2006). The rapid assessment of physical\nactivity (RAPA) among older adults. Preventing Chronic Disease,\n3(4), A118.\n\n\nValdes-Hernandez, P. A., Nodarse, C. L., Johnson, A. J.,\nMontesino-Goicolea, S., Bashyam, V., Davatzikos, C., Peraza, J. A.,\nCole, J. H., Huo, Z., Fillingim, R. B., et al. (2023). Brain-predicted\nage difference estimated using DeepBrainNet is significantly associated\nwith pain and function—a multi-institutional and multiscanner study.\nPain, 164(12), 2822–2838. https://doi.org/10.1097/j.pain.0000000000002984\n\n\nVisconti di Oleggio Castello, M., Dobson, J. E., Sackett, T., Kodiweera,\nC., Haxby, J. V., Goncalves, M., Ghosh, S., & Halchenko, Y. O.\n(2023). ReproNim/reproin: 0.11.6.2. Zenodo. https://doi.org/10.5281/ZENODO.7975330\n\n\nWaddell, G., Newton, M., Henderson, I., Somerville, D., & Main, C.\nJ. (1993). A Fear-Avoidance Beliefs Questionnaire (FABQ) and the role of\nfear-avoidance beliefs in chronic low back pain and disability.\nPain, 52(2), 157–168. https://doi.org/10.1016/0304-3959(93)90127-b\n\n\nWolfe, F., Clauw, D. J., Fitzcharles, M.-A., Goldenberg, D. L., Häuser,\nW., Katz, R. L., Mease, P. J., Russell, A. S., Russell, I. J., &\nWalitt, B. (2016). 2016 Revisions to the 2010/2011 fibromyalgia\ndiagnostic criteria. Seminars in Arthritis and Rheumatism,\n46(3), 319–329. https://doi.org/10.1016/j.semarthrit.2016.08.012\n\n\nZou, Q.-H., Zhu, C.-Z., Yang, Y., Zuo, X.-N., Long, X.-Y., Cao, Q.-J.,\nWang, Y.-F., & Zang, Y.-F. (2008). An improved approach to detection\nof amplitude of low-frequency fluctuation (ALFF) for resting-state fMRI:\nFractional ALFF. Journal of Neuroscience Methods,\n172(1), 137–141. https://doi.org/10.1016/j.jneumeth.2008.04.012",
    "crumbs": [
      "References"
    ]
  },
  {
    "objectID": "bids-qc-joining.html",
    "href": "bids-qc-joining.html",
    "title": "Appendix A — Exclude Scans with “Red” Quality",
    "section": "",
    "text": "For each MRI product, all pipeline derivatives have been included. This means that products were included regardless of their quality, and so some products are known to have poor quality–rated “red” or incomparable. This kit walks through one way to incorporate those outputs for FreeSurfer products. For details on how the ratings were generated, see Section 3.1.2.\n\nlibrary(fs)\nlibrary(readr)\nlibrary(dplyr)\nlibrary(stringr)\n\nFirst, start by loading the table of FreeSurfer outputs. In this example, the cortical parcellations will be used.\n\naparc &lt;- read_tsv(\"data/aparc.tsv\")\naparc\n\n# A tibble: 399,992 × 14\n   StructName       NumVert SurfArea GrayVol ThickAvg ThickStd MeanCurv GausCurv\n   &lt;chr&gt;              &lt;dbl&gt;    &lt;dbl&gt;   &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n 1 bankssts            1360      909    2055     2.52    0.397    0.112    0.02 \n 2 caudalanteriorc…     852      604    1626     2.25    0.887    0.131    0.024\n 3 caudalmiddlefro…    2870     1857    4018     2.16    0.485    0.104    0.018\n 4 cuneus              1595     1090    2019     1.74    0.515    0.141    0.027\n 5 entorhinal           480      306    1366     3.03    0.816    0.105    0.018\n 6 fusiform            3434     2414    8326     2.91    0.603    0.123    0.023\n 7 inferiorparietal    4984     3387    7491     2.06    0.508    0.122    0.022\n 8 inferiortemporal    3816     2614    8405     2.79    0.552    0.118    0.021\n 9 isthmuscingulate    1167      782    1820     2.14    0.832    0.117    0.021\n10 lateraloccipital    6159     4023    8578     2.02    0.536    0.132    0.027\n# ℹ 399,982 more rows\n# ℹ 6 more variables: FoldInd &lt;dbl&gt;, CurvInd &lt;dbl&gt;, sub &lt;dbl&gt;, ses &lt;chr&gt;,\n#   hemisphere &lt;chr&gt;, parc &lt;chr&gt;\n\n\nThe overall quality ratings (red/yellow/green) for the rawdata are included in the *scans.tsv files. For example\n\n$ cat sub-10003/ses-V1/sub-10003_ses-V1_scans.tsv \nfilename    rating\nfunc/sub-10003_ses-V1_task-cuff_run-01_bold.nii.gz  green\ndwi/sub-10003_ses-V1_dwi.nii.gz green\nfunc/sub-10003_ses-V1_task-rest_run-01_bold.nii.gz  green\nfunc/sub-10003_ses-V1_task-rest_run-02_bold.nii.gz  green\nanat/sub-10003_ses-V1_T1w.nii.gz    green\nfmap/sub-10003_ses-V1_acq-fmrib0_dir-AP_epi.nii.gz  n/a\nfmap/sub-10003_ses-V1_acq-fmrib0_dir-PA_epi.nii.gz  n/a\nfmap/sub-10003_ses-V1_acq-dwib0_dir-AP_epi.nii.gz   n/a\nfmap/sub-10003_ses-V1_acq-dwib0_dir-PA_epi.nii.gz   n/a\n\nTo load the files, first list them all with fs::dir_ls.\n\nscan_files &lt;- dir_ls(\"data/scans\", glob = \"*tsv\")\nhead(scan_files)\n\ndata/scans/sub-10003_ses-V1_scans.tsv data/scans/sub-10005_ses-V1_scans.tsv \ndata/scans/sub-10008_ses-V1_scans.tsv data/scans/sub-10010_ses-V1_scans.tsv \ndata/scans/sub-10011_ses-V1_scans.tsv data/scans/sub-10013_ses-V1_scans.tsv \n\n\nThey can be read and bound together using readr::read_tsv. Note that the BIDS way to represent null values is with 'n/a'.\n\nscans &lt;- read_tsv(scan_files, na = \"n/a\")\nscans\n\n# A tibble: 9,188 × 2\n   filename                                           rating\n   &lt;chr&gt;                                              &lt;chr&gt; \n 1 func/sub-10003_ses-V1_task-cuff_run-01_bold.nii.gz green \n 2 dwi/sub-10003_ses-V1_dwi.nii.gz                    green \n 3 func/sub-10003_ses-V1_task-rest_run-01_bold.nii.gz green \n 4 func/sub-10003_ses-V1_task-rest_run-02_bold.nii.gz green \n 5 anat/sub-10003_ses-V1_T1w.nii.gz                   green \n 6 fmap/sub-10003_ses-V1_acq-fmrib0_dir-AP_epi.nii.gz &lt;NA&gt;  \n 7 fmap/sub-10003_ses-V1_acq-fmrib0_dir-PA_epi.nii.gz &lt;NA&gt;  \n 8 fmap/sub-10003_ses-V1_acq-dwib0_dir-AP_epi.nii.gz  &lt;NA&gt;  \n 9 fmap/sub-10003_ses-V1_acq-dwib0_dir-PA_epi.nii.gz  &lt;NA&gt;  \n10 anat/sub-10005_ses-V1_T1w.nii.gz                   yellow\n# ℹ 9,178 more rows\n\n\nRatings will be used to exclude some FreeSurfer products, and so we only need the ratings for the T1w scans.\n\nt1w_ratings &lt;- scans |&gt;\n  filter(str_detect(filename, \"T1w\"))\n\nIn this example, all scans with a rating “red” will be excluded, so filter for those scans.\n\nred_t1w &lt;- t1w_ratings |&gt;\n  filter(rating == \"red\")\nred_t1w\n\n# A tibble: 8 × 2\n  filename                         rating\n  &lt;chr&gt;                            &lt;chr&gt; \n1 anat/sub-10144_ses-V1_T1w.nii.gz red   \n2 anat/sub-10216_ses-V1_T1w.nii.gz red   \n3 anat/sub-10258_ses-V1_T1w.nii.gz red   \n4 anat/sub-10267_ses-V1_T1w.nii.gz red   \n5 anat/sub-10553_ses-V1_T1w.nii.gz red   \n6 anat/sub-10559_ses-V1_T1w.nii.gz red   \n7 anat/sub-20040_ses-V1_T1w.nii.gz red   \n8 anat/sub-20224_ses-V1_T1w.nii.gz red   \n\n\nThe FreeSurfer rows are defined by the entities sub and ses, so extract these from the filename column.\n\nred_t1w_w_entities &lt;- red_t1w |&gt;\n  mutate(\n    sub = str_extract(filename, \"(?&lt;=sub-)[[:digit:]]{5}\") |&gt;\n      as.integer(),\n    ses = str_extract(filename, \"V[13]\")\n  )\n\nFinally, this table with red ratings can be used to exclude participants with a low quality T1w scan.\n\naparc_wo_red &lt;- aparc |&gt;\n  anti_join(red_t1w_w_entities, by = join_by(sub, ses))\naparc_wo_red\n\n# A tibble: 396,776 × 14\n   StructName       NumVert SurfArea GrayVol ThickAvg ThickStd MeanCurv GausCurv\n   &lt;chr&gt;              &lt;dbl&gt;    &lt;dbl&gt;   &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n 1 bankssts            1360      909    2055     2.52    0.397    0.112    0.02 \n 2 caudalanteriorc…     852      604    1626     2.25    0.887    0.131    0.024\n 3 caudalmiddlefro…    2870     1857    4018     2.16    0.485    0.104    0.018\n 4 cuneus              1595     1090    2019     1.74    0.515    0.141    0.027\n 5 entorhinal           480      306    1366     3.03    0.816    0.105    0.018\n 6 fusiform            3434     2414    8326     2.91    0.603    0.123    0.023\n 7 inferiorparietal    4984     3387    7491     2.06    0.508    0.122    0.022\n 8 inferiortemporal    3816     2614    8405     2.79    0.552    0.118    0.021\n 9 isthmuscingulate    1167      782    1820     2.14    0.832    0.117    0.021\n10 lateraloccipital    6159     4023    8578     2.02    0.536    0.132    0.027\n# ℹ 396,766 more rows\n# ℹ 6 more variables: FoldInd &lt;dbl&gt;, CurvInd &lt;dbl&gt;, sub &lt;dbl&gt;, ses &lt;chr&gt;,\n#   hemisphere &lt;chr&gt;, parc &lt;chr&gt;",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>A</span>  <span class='chapter-title'>Exclude Scans with \"Red\" Quality</span>"
    ]
  },
  {
    "objectID": "ids.html",
    "href": "ids.html",
    "title": "Appendix B — ID Information",
    "section": "",
    "text": "B.1 Location\nA2CPS relies on several different schemes for labeling and describing metadata entities. This appendix describes those schemes to facilitate linking entities across data modalities.\nLocation refers to where the data were collected.\nThe following table may be used for mapping across datatypes.",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>B</span>  <span class='chapter-title'>ID Information</span>"
    ]
  },
  {
    "objectID": "ids.html#location",
    "href": "ids.html#location",
    "title": "Appendix B — ID Information",
    "section": "",
    "text": "Terminology Mapping\n\n\nTerminology\nVenue\nNotes\n\n\n\n\nsite (code)\nImaging\nIn Imaging, the code is a two-letter acronym set when the project began. Sites changed their name, and so the acronym may not obviously correspond to the longer name. The mapping is always one-to-one. participants.tsv\n\n\nsite (LongName)\n\n\ncollection site\nVBR\nlocations table",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>B</span>  <span class='chapter-title'>ID Information</span>"
    ]
  },
  {
    "objectID": "ids.html#participants",
    "href": "ids.html#participants",
    "title": "Appendix B — ID Information",
    "section": "B.2 Participants",
    "text": "B.2 Participants\n\n\n\n\nTerminology Mapping\n\n\n\n\n\n\n\nTerminology\nVenue\nNotes\n\n\n\n\nsubject\nImaging\nIn Imaging, “subject” is used interchangeably with “participant“ and both are equivalent to “record”\n\n\nparticipant\nImaging\nIn Imaging, “participant” is used interchangeably with “subject“ and both are equivalent to “record”\n\n\nsubject_guid\nVBR\nIn the VBR, “subject_guid” refers to the same entity as “NDA GUID” in Imaging, but the format is a UUID\n\n\nrecord\nREDCap\n10000-14999: MCC1 TKA; 15000-19999: MCC1 Thoracic; 20000-24999: MCC2 Thoracic; 25000-29999: MCC2 TKA\n\n\nIndividual ID\nGenetics\nChapter 1\n\n\nGlobally Unique ID (GUID*)\nNDA\nThe GUIDs used in A2CPS are not typical GUIDs but “pseudo-GUIDs“. A decision to upload to the NDA was made partway through the project, at which time it was too late to collect the information that would be required to make typical GUIDs. In practice, this means that the GUIDs used by A2CPS cannot be used to link these participants to other studies within the NDA. https://nda.nih.gov/nda/using-the-nda-guid",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>B</span>  <span class='chapter-title'>ID Information</span>"
    ]
  },
  {
    "objectID": "ids.html#visits",
    "href": "ids.html#visits",
    "title": "Appendix B — ID Information",
    "section": "B.3 Visits",
    "text": "B.3 Visits\n\n\n\n\nTerminology Mapping\n\n\nTerminology\nVenue\nNotes\n\n\n\n\nsession\nImaging\n\n\n\nvisit\nNDA, Imaging\nimage03\n\n\nvisnum\nNDA\nimage03\n\n\nsession_det\nNDA\nimage03, fmriresults01\n\n\nprotocol_name\nVBR\nprotocol table\n\n\n\n\n\n\nThe following table may be used for mapping across datatypes.",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>B</span>  <span class='chapter-title'>ID Information</span>"
    ]
  },
  {
    "objectID": "nda-mri.html",
    "href": "nda-mri.html",
    "title": "Appendix C — NDA Download Example, MRI",
    "section": "",
    "text": "C.1 Data Overview\nThis page describes the A2CPS rawdata as downloaded from the NDA.\nIf you do not yet have access to the NDA and plan to download data from the NDA, please follow the instructions on the A2CPS For Researchers page (Accessing our Data) and the linked tutorials.\nThis starter kit will assume that the data have been downloaded using nda-tools. In this example, a Data Package has been created that includes the rawdata. You will see a list of files like the following",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>C</span>  <span class='chapter-title'>NDA Download Example, MRI</span>"
    ]
  },
  {
    "objectID": "nda-mri.html#data-overview",
    "href": "nda-mri.html#data-overview",
    "title": "Appendix C — NDA Download Example, MRI",
    "section": "",
    "text": "$ tree -L 2\n.\n├── dataset_collection.txt\n├── datastructure_manifest.txt\n├── experiments\n│   ├── experiment_2652\n│   └── experiment_2655\n├── image03\n│   ├── corral-secure\n│   └── manifest-files\n├── image03.txt\n├── md5_values.txt\n├── package_file_metadata_1235008.txt.gz\n├── package_info.txt\n└── README.pdf",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>C</span>  <span class='chapter-title'>NDA Download Example, MRI</span>"
    ]
  },
  {
    "objectID": "nda-mri.html#data-structures",
    "href": "nda-mri.html#data-structures",
    "title": "Appendix C — NDA Download Example, MRI",
    "section": "C.2 Data Structures",
    "text": "C.2 Data Structures\nThis is raw imaging data, and so it is stored in the image03 Data Structure (link goes to data dictionary). Metadata is stored in the image03.txt. This is where you will find information such as participant age, participant sex, and scan acquisition date.\nNote that, as with downloads of all NDA data structures, the second line of this table includes a partial data dictionary. That is, the header is on the first line, and the first row of data is on the third line.",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>C</span>  <span class='chapter-title'>NDA Download Example, MRI</span>"
    ]
  },
  {
    "objectID": "nda-mri.html#imaging-files",
    "href": "nda-mri.html#imaging-files",
    "title": "Appendix C — NDA Download Example, MRI",
    "section": "C.3 Imaging Files",
    "text": "C.3 Imaging Files\nThe imaging files are underneath image03.\n$ ls image03/corral-secure/projects/A2CPS/products/consortium-data/pre-surgery/mris/bids/ | head\ndataset_description.json\nREADME\nsessions.json\nsub-10003\nsub-10005\nsub-10008\nsub-10010\nsub-10011\nsub-10013\nThe contents of that folder match the contents described in Chapter 3 (note that the aggregated table participants.tsv is not included in the NDA download, as the information is available in image03.txt).",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>C</span>  <span class='chapter-title'>NDA Download Example, MRI</span>"
    ]
  },
  {
    "objectID": "nda-mri.html#experiments",
    "href": "nda-mri.html#experiments",
    "title": "Appendix C — NDA Download Example, MRI",
    "section": "C.4 Experiments",
    "text": "C.4 Experiments\nThe rawdata folder includes an “experiments“ folder, which provides some information on how the two types of fMRI scans were collected.\n\n\n\n\n\n\n\n\n\n\nExperiment\nFiles\n\n\n\n\nexperiment_2652 (rfMRI)\n \n\n\nexperiment_2655 (tfMRI)",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>C</span>  <span class='chapter-title'>NDA Download Example, MRI</span>"
    ]
  },
  {
    "objectID": "nda-mri.html#additional-nda-metadata",
    "href": "nda-mri.html#additional-nda-metadata",
    "title": "Appendix C — NDA Download Example, MRI",
    "section": "C.5 Additional NDA Metadata",
    "text": "C.5 Additional NDA Metadata\nThe rest of the files are metadata associated with the storage of the dataset in the NDA or information about the Data Package. Most users will not need to interact with these files unless something has gone wrong with the download.\n\n\n\n\n\n\n\n\n\n\nFile/Directory\nDescription/Notes\n\n\n\n\n\nTable with identifiers relating to how the data were uploaded\n\n\n\nTable with partial information about how the files are stored on the NDA AWS S3 bucket. This example file contains the first 10 rows.\n\n\n\nTable with MD5 File Checksums for each of the files in the image03 folder. This example file contains the first 10 rows.\n\n\n\nAdditional metadata related to the location of imaging files within the NDA and their S3 bucket\n\n\n\nHigh-level information about the Data Package and Filter Cart at the time of Data Package creation. Note that the counts listed in this file may not relate to the files that were downloaded (e.g., this file refers to 1053 participants in the filter, but 585 participants were downloaded).\n\n\n\nInformation that pertains to some NDA Data Packages.",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>C</span>  <span class='chapter-title'>NDA Download Example, MRI</span>"
    ]
  },
  {
    "objectID": "psycho_social_biomarker_impute.html",
    "href": "psycho_social_biomarker_impute.html",
    "title": "Appendix D — Psychosocial Data Imputation and Biomarker calculations",
    "section": "",
    "text": "D.1 Read in Data and write functions\nThis document goes over score calculation and missing data imputation for each psychosocial form. The headings in the sidebar help the user navigate to their desired content. The code chunks for each form can be run independently after running Section D.1 in its entirety.",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>D</span>  <span class='chapter-title'>Psychosocial Data Imputation and Biomarker calculations</span>"
    ]
  },
  {
    "objectID": "psycho_social_biomarker_impute.html#sec-psychosocial-reading",
    "href": "psycho_social_biomarker_impute.html#sec-psychosocial-reading",
    "title": "Appendix D — Psychosocial Data Imputation and Biomarker calculations",
    "section": "",
    "text": "D.1.1 Load Libraries\n\nlibrary(shiny)\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(plotly)\nlibrary(GGally)\nlibrary(here)\nlibrary(hablar)\nlibrary(janitor)\nlibrary(naniar)\nlibrary(ComplexUpset)\nlibrary(gt)\n\n\n\nD.1.2 Read in Psycho-social Data\nWe will call this psy_soc\n\npsy_soc &lt;- read.csv(here(\n  \"data\",\n  \"psychosocial\",\n  \"psychosocial-2024-11-06.csv\"\n)) %&gt;%\n  filter(redcap_event_name == \"baseline_visit_arm_1\")\n\nRemove test records\n\ntest_records &lt;- c(\n  \"10000\",\n  \"15000\",\n  \"20000\",\n  \"25000\",\n  \"40000\",\n  \"50000\",\n  \"60000\",\n  \"70000\",\n  \"80000\",\n  \"90000\",\n  \"100000\",\n  \"110000\",\n  \"120000\"\n)\n\npsy_soc &lt;- psy_soc %&gt;%\n  filter(!record_id %in% test_records)\n\nCreate a column for cohort type called “cohort”\n\npsy_soc &lt;- psy_soc %&gt;%\n  mutate(\n    cohort = case_when(\n      record_id &gt;= 10000 & record_id &lt; 15000 | record_id &gt;= 25000 ~ \"TKA\",\n      TRUE ~ \"Thoracic\"\n    )\n  )\n\n\n\nD.1.3 Read in Data Dictionary\nRead in Data dictionary and remove duplicate field name\n\npsy_soc_dict &lt;- read_csv(here(\n  \"data\",\n  \"psychosocial\",\n  \"psychosocial-Data-Dictionary-2024-11-06.csv\"\n)) %&gt;%\n  distinct(field_name, .keep_all = TRUE)\n\n\n\nD.1.4 New field name(s):\nAdd the field name “cohort” to the data dictionary\n\n# Create field names\ncohort_new_row &lt;- data.frame(\n  field_name = \"cohort\",\n  field_type = \"Character\",\n  field_note = \"Type of surgical cohort\",\n  select_choices_or_calculations = \"TKA,Thoracic\"\n)\n\n# Add the new row after the last row\n\n# TKA\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  slice(1:nrow(.)) %&gt;%\n  add_row(.after = nrow(.), !!!cohort_new_row)\n\n\n\nD.1.5 Rules for handling missing data:\nIn case of missing data, each form will be handled on a case by case basis using available literature or user guides. For forms with no available user guides:\n\nWe will impute missing values by replacing missing values with the average score of the completed items for a given subject if less than or equal to 29% of the survey items are missing (Arrieta et al., 2017)\nFor non integer values, we will use the floor value. In other words for a 12 item questionnaire, where 29% = 3.48, we will impute missing values if less than or equal to 3 of 12 items are missing.\nWe will not impute missing items with a yes/no response\nWe will not impute missing values where questions do not assess an underlying latent trait i.e not correlated with other items on a multi-item questionnaire\nForms with subject level characteristics will not be imputed\n\n\n\nD.1.6 Drop field names\nThere are some forms (opioid_side_effects_and_likeability_v03_side_effec, opioid_and_pain_control_satisfaction_v02_satisfact and patient_global_impression_of_change_pgic) and field names for follow up questions not asked during the baseline visit. We will create a vector of these field names and drop them from the psycho-social data as well as the data dictionary. We will call this subset of the data “psy_soc1.”\n\ndrop_vars &lt;- c(\n  \"pgicsymptomchangestatval\",\n  \"patient_global_impression_of_change_pgic_complete\",\n  \"gad7_tot_not_sure\",\n  \"gad7_tot_several\",\n  \"gad7_tot_over_half\",\n  \"gad7_tot_every_day\",\n  \"pdqassessdate_dss\",\n  \"oms1surgyn\",\n  \"oms1surgrel\",\n  \"oms1relmanipultn___1\",\n  \"oms1relinfection___1\",\n  \"oms1relrevision___1\",\n  \"oms1relother___1\",\n  \"oms1relothertxt\",\n  \"oms1surgunr\",\n  \"oms1unrotherknee___1\",\n  \"oms1unrsurgother___1\",\n  \"oms1unrother___1\",\n  \"oms1unrothertxt\",\n  \"oms1visityn\",\n  \"oms1relvisit\",\n  \"oms1relvisited___1\",\n  \"oms1relvisitoffice___1\",\n  \"oms1relvisitother___1\",\n  \"oms1relvisitothertxt\",\n  \"oms1unrvisit\",\n  \"oms1unrvisited___1\",\n  \"oms1unrvisitoffice___1\",\n  \"oms1unrvisitother___1\",\n  \"oms1unrvisitothertxt\",\n  \"oms2surgyn\",\n  \"oms2surgrel\",\n  \"oms2surgunr\",\n  \"oms2relvisitoffice___1\",\n  \"oms2relvisitother___1\",\n  \"oms2relvisitothertxt\",\n  \"oms2unrvisit\",\n  \"oms2unrvisited___1\",\n  \"oms2unrvisitoffice___1\",\n  \"oms2unrvisitother___1\",\n  \"oms2unrvisitothertxt\"\n)\n\n\npsy_soc1 &lt;- psy_soc %&gt;%\n  select(-all_of(drop_vars))\n\nThe initial data had 521 field names, we now have 456 fields names after removing 65 field names not needed\n\ndim(psy_soc)\n\n[1] 1401  495\n\ndim(psy_soc1)\n\n[1] 1401  454\n\n\n\n\nD.1.7 Forms:\nFollowing are the available psycho-social forms and imputation methods used in this workflow:\n\n\n\n\n\n\n\nForm Name\nHow was missing data handled\n\n\n\n\nThe Brief Pain Inventory v2.3 - Short Form (BPI): General Pain Intensity\nIndicator for missingness\n\n\nThe Brief Pain Inventory v2.3 - Short Form (BPI):Local Pain Intensity\nBPI user guide\n\n\nThe Brief Pain Inventory v2.3 - Short Form (BPI):pain interference subscore\nBPI user guide\n\n\nThe Brief Pain Inventory v2.3 - Short Form (BPI):Widespread Body Pain (Michigan body map)\nIndicator for missingness\n\n\nKnee Injury Osteoarthritis Outcome Score (KOOS-12)\nKOOS-12 user guide\n\n\nGeneralized Anxiety Disorder 7 Item (GAD7) Scale Score\nRow-wise mean\n\n\nPatient Health Questionnaire Depression Scale (PHQ) Scored\nRow-wise mean\n\n\nFear avoidance: FABQ\nRow-wise mean\n\n\nPain Catastrophizing Questionnaire (PCS6)\nRow-wise mean\n\n\nOther Pain Treatments v3 (Other Treatments)\nNot imputed: Subject Level Characteristics\n\n\nOther Medical Surgical Treatments II v0.5\nNot imputed: Subject Level Characteristics\n\n\nSymptom Severity Index v1.0 (SSI)\nIndicator for missingness\n\n\npainDETECT Questionnaire\nRow-wise mean\n\n\nPROMIS SF v1.2 - Physical Function 8b\nHealthMeasures Scoring Service\n\n\nPROMIS SF v1.0 - Sleep Disturbance 6a (Sleep I)\nHealthMeasures Scoring Service\n\n\nPROMIS SF v1.0 - Fatigue 7a\nHealthMeasures Scoring Service\n\n\nPROMIS SF v2.0 - Emotional Support 6a\nHealthMeasures Scoring Service\n\n\nPROMIS SF v2.0 - Instrumental Support 6a\nHealthMeasures Scoring Service\n\n\nPain-Sleep Duration (Sleep II)\nIndicator for outliers and missingness\n\n\nPain Resilience Scale (PRS)\nRow-wise mean\n\n\nMultidimensional Inventory of Subjective Cognitive Impairment v1.0 (MISCI)\nRow-wise mean\n\n\nAdverse Childhood Experience Questionnaire (ACE)\nNot imputed: Responses in yes/no format\n\n\nTAPS-1\nNot imputed: Smoking/substance abuse screener\n\n\nTAPS-2\nNot imputed: Responses in yes/no format\n\n\nOpioid Use Baseline v1.0 (Opioid Use I)\nNot imputed: Subject Level Characteristics\n\n\nExpectation Items\nNot imputed\n\n\nCurrent Opioid Misuse v0.2 (COMM)\nNot imputed: Subject Level Characteristics\n\n\nRapid Assessment of Physical Activity v1.0 (RAPA)\nNot imputed: Responses in yes/no format\nAerobic activity items: scored based on the highest activity answered in the affirmative\n\n\nGeneral Sensory Sensitivity v0.2 (GSS-8)\nNot imputed: Responses in yes/no format\n\n\nThe Big Five Inventory (BFI-2-S)\nResponse to the closest matching item (similar meaning) was used\n\n\nSelf-Administered Comorbidity Questionnaire v4 (SCQ)\nNot imputed: Subject Level Characteristics\n\n\nDanish Thoracic Surgery Questionnaire v0.2\nRow-wise mean\n\n\n\n\n\nD.1.8 Functions:\nWe will create a function called ‘applyFilter’ that subsets the ‘psy_soc1’ dataset based on field names that match a specified pattern. The function takes two parameters: ‘prefix’, for form specific field names and ‘test_complete_column’ for the form specific variable which indicates if the form was complete i.e 2 . It returns a dataset containing the ‘record_id’, ‘redcap_event_name’, ‘redcap_data_access_group’, and the form specific field names for completed forms.\n\napplyFilter &lt;- function(prefix, test_complete_column) {\n  filtered_data &lt;- psy_soc1 %&gt;%\n    select(\n      record_id,\n      guid,\n      redcap_event_name,\n      redcap_data_access_group,\n      cohort,\n      starts_with(prefix),\n      {{ test_complete_column }}\n    ) %&gt;%\n    filter({{ test_complete_column }} == 2)\n\n  return(filtered_data)\n}",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>D</span>  <span class='chapter-title'>Psychosocial Data Imputation and Biomarker calculations</span>"
    ]
  },
  {
    "objectID": "psycho_social_biomarker_impute.html#scoring-and-imputation",
    "href": "psycho_social_biomarker_impute.html#scoring-and-imputation",
    "title": "Appendix D — Psychosocial Data Imputation and Biomarker calculations",
    "section": "D.2 Scoring and Imputation",
    "text": "D.2 Scoring and Imputation\n\nD.2.1 The Brief Pain Inventory (BPI)\n\nD.2.1.1 Read in Data:\nRead in psy_soc1 dataframe and select field names from the BPI data and keep completed forms, we will call this BPI\n\nBPI &lt;- applyFilter(\n  \"BPI\",\n  bpisf_the_brief_pain_inventory_v23_short_form_bpi_complete\n)\n\n\n\nD.2.1.2 Components:\nBPI assesses pain and includes information on:\n\nWidespread body pain measured by Michigan Body Map\nGeneral pain intensity measured by Brief pain intensity -whole body pain\nLocal pain intensity measured by Modified BPI – surgical site pain\n\nSplit BPI: We will subset the BPI data into three datasets according to the above information.\n\nbpi_body_map &lt;- BPI %&gt;%\n  select(\n    record_id,\n    guid,\n    redcap_event_name,\n    redcap_data_access_group,\n    cohort,\n    bpipainanatsiteareatxt,\n    ends_with(\"rate\"),\n    ends_with(\"dur\"),\n    bpisf_the_brief_pain_inventory_v23_short_form_bpi_complete\n  )\n\nbpi_body_pain &lt;- BPI %&gt;%\n  select(\n    record_id,\n    guid,\n    redcap_event_name,\n    redcap_data_access_group,\n    cohort,\n    bpiworstpainratingexclss,\n    bpisf_the_brief_pain_inventory_v23_short_form_bpi_complete\n  )\n\n\nbpi_pain_intrf &lt;- BPI %&gt;%\n  select(\n    record_id,\n    guid,\n    redcap_event_name,\n    redcap_data_access_group,\n    cohort,\n    bpiworstpainratingss,\n    bpipainintfrgnrlactvtyscl,\n    contains(\"intfr\"),\n    contains(\"intrfr\"),\n    bpisf_the_brief_pain_inventory_v23_short_form_bpi_complete\n  )\n\nWe now have three datasets:\n\nbpi_body_map for widespread body pain - Michigan Body Map\nbpi_body_pain for general pain intensity measured by brief pain intensity -whole body pain\nbpi_pain_intrf for local pain intensity measured by modified BPI – surgical site pain\n\nInspect Field names: Make sure that the three datasets have the field names of interest\n\nnames(bpi_body_map)\n\n [1] \"record_id\"                                                 \n [2] \"guid\"                                                      \n [3] \"redcap_event_name\"                                         \n [4] \"redcap_data_access_group\"                                  \n [5] \"cohort\"                                                    \n [6] \"bpipainanatsiteareatxt\"                                    \n [7] \"bpi_mbm_z1_rate\"                                           \n [8] \"bpi_mbm_z2_rate\"                                           \n [9] \"bpi_mbm_z3_rate\"                                           \n[10] \"bpi_mbm_z4_rate\"                                           \n[11] \"bpi_mbm_z5_rate\"                                           \n[12] \"bpi_mbm_z6_rate\"                                           \n[13] \"bpi_mbm_z7_rate\"                                           \n[14] \"bpi_mbm_z8_rate\"                                           \n[15] \"bpi_mbm_z9_rate\"                                           \n[16] \"bpi_mbm_z1_dur\"                                            \n[17] \"bpi_mbm_z2_dur\"                                            \n[18] \"bpi_mbm_z3_dur\"                                            \n[19] \"bpi_mbm_z4_dur\"                                            \n[20] \"bpi_mbm_z5_dur\"                                            \n[21] \"bpi_mbm_z6_dur\"                                            \n[22] \"bpi_mbm_z7_dur\"                                            \n[23] \"bpi_mbm_z8_dur\"                                            \n[24] \"bpi_mbm_z9_dur\"                                            \n[25] \"bpisf_the_brief_pain_inventory_v23_short_form_bpi_complete\"\n\n\n\nnames(bpi_body_pain)\n\n[1] \"record_id\"                                                 \n[2] \"guid\"                                                      \n[3] \"redcap_event_name\"                                         \n[4] \"redcap_data_access_group\"                                  \n[5] \"cohort\"                                                    \n[6] \"bpiworstpainratingexclss\"                                  \n[7] \"bpisf_the_brief_pain_inventory_v23_short_form_bpi_complete\"\n\n\n\nnames(bpi_pain_intrf)\n\n [1] \"record_id\"                                                 \n [2] \"guid\"                                                      \n [3] \"redcap_event_name\"                                         \n [4] \"redcap_data_access_group\"                                  \n [5] \"cohort\"                                                    \n [6] \"bpiworstpainratingss\"                                      \n [7] \"bpipainintfrgnrlactvtyscl\"                                 \n [8] \"bpipainintfrmoodscl\"                                       \n [9] \"bpipainintfrwlkablscl\"                                     \n[10] \"bpipainnrmlwrkintrfrscl\"                                   \n[11] \"bpipainrelationsintrfrscl\"                                 \n[12] \"bpipainsleepintrfrscl\"                                     \n[13] \"bpipainenjoymntintrfrscl\"                                  \n[14] \"bpipainintrfrscore\"                                        \n[15] \"bpisf_the_brief_pain_inventory_v23_short_form_bpi_complete\"\n\n\nAll three datasets have the desired fields names. We will now look at missing data pattern in each dataset:\n\n\n\nD.2.2 Michigan Body Map:\nMichigan Body Map records pain intensity and duration for the body region indicated by the subject (Berardi et al., 2022). The painful body regions can vary from subject to subject, which can result in null values in field names for body regions not indicated by the subject, this explains the data sparsity.\n\nD.2.2.1 Missing Data:\nMissing data pattern in bpi_body_map\n\ngg_miss_upset(\n  bpi_body_map,\n  nsets = n_var_miss(bpi_body_map),\n  order.by = \"degree\",\n  point.size = 1,\n  line.size = 0.25,\n  text.scale = c(0.5)\n)\n\n\n\n\n\n\n\n\nWe will create a separate field name for each body region and assign a value of 0 if a subject has not selected a body region and has not indicated the duration and intensity of pain for the selected body region i.e. has not experienced any pain in the selected body region, assign 1 if a subject has indicated painful region(s) as well as specified the rate and duration,and 2 if either value (rate or duration) or none of the values are present for the selected body regions or if either value ( rate or duration) is available but the body region is not specified.\n\nbpi_body_map &lt;- bpi_body_map %&gt;%\n  mutate(\n    head_face_jaw = case_when(\n      (grepl(\"(a00|a01|a02|a25)\", bpipainanatsiteareatxt)) ~ 1,\n      TRUE ~ 0\n    )\n  ) %&gt;%\n  mutate(\n    neck = case_when((grepl(\"a26\", bpipainanatsiteareatxt)) ~ 1, TRUE ~ 0)\n  ) %&gt;%\n  mutate(\n    chest_or_breast = case_when(\n      (grepl(\"(a03|a04)\", bpipainanatsiteareatxt)) ~ 1,\n      TRUE ~ 0\n    )\n  ) %&gt;%\n  mutate(\n    abd_pelvis_groin = case_when(\n      (grepl(\"(a13|a14|a15|a16)\", bpipainanatsiteareatxt)) ~ 1,\n      TRUE ~ 0\n    )\n  ) %&gt;%\n  mutate(\n    right_shoulder_arm_wrist = case_when(\n      (grepl(\"(a28|a05|a07|a09|a11)\", bpipainanatsiteareatxt)) ~ 1,\n      TRUE ~ 0\n    )\n  ) %&gt;%\n  mutate(\n    left_shoulder_arm_wrist = case_when(\n      (grepl(\"(a27|a06|a08|a10|a12)\", bpipainanatsiteareatxt)) ~ 1,\n      TRUE ~ 0\n    )\n  ) %&gt;%\n  mutate(\n    back_buttocks = case_when(\n      (grepl(\"(a29|a30|a33|a34)\", bpipainanatsiteareatxt)) ~ 1,\n      TRUE ~ 0\n    )\n  ) %&gt;%\n  mutate(\n    right_hip_leg_foot = case_when(\n      (grepl(\"(a32|a17|a19|a21|a23)\", bpipainanatsiteareatxt)) ~ 1,\n      TRUE ~ 0\n    )\n  ) %&gt;%\n  mutate(\n    left_hip_leg_foot = case_when(\n      (grepl(\"(a31|a18|a20|a22|a24)\", bpipainanatsiteareatxt)) ~ 1,\n      TRUE ~ 0\n    )\n  ) %&gt;%\n  mutate(\n    head_face_jaw_m = case_when(\n      head_face_jaw == 0 & is.na(bpi_mbm_z1_rate) & is.na(bpi_mbm_z1_dur) ~ 0,\n      head_face_jaw == 1 & !is.na(bpi_mbm_z1_rate) & !is.na(bpi_mbm_z1_dur) ~ 1,\n      TRUE ~ 2\n    )\n  ) %&gt;%\n  mutate(\n    neck_m = case_when(\n      neck == 0 & is.na(bpi_mbm_z2_rate) & is.na(bpi_mbm_z2_dur) ~ 0,\n      neck == 1 & !is.na(bpi_mbm_z2_rate) & !is.na(bpi_mbm_z2_dur) ~ 1,\n      TRUE ~ 2\n    )\n  ) %&gt;%\n  mutate(\n    chest_or_breast_m = case_when(\n      chest_or_breast == 0 & is.na(bpi_mbm_z3_rate) & is.na(bpi_mbm_z3_dur) ~ 0,\n      chest_or_breast == 1 & !is.na(bpi_mbm_z3_rate) & !is.na(bpi_mbm_z3_dur) ~\n        1,\n      TRUE ~ 2\n    )\n  ) %&gt;%\n  mutate(\n    abd_pelvis_groin_m = case_when(\n      abd_pelvis_groin == 0 & is.na(bpi_mbm_z4_rate) & is.na(bpi_mbm_z4_dur) ~\n        0,\n      abd_pelvis_groin == 1 & !is.na(bpi_mbm_z4_rate) & !is.na(bpi_mbm_z4_dur) ~\n        1,\n      TRUE ~ 2\n    )\n  ) %&gt;%\n  mutate(\n    right_shoulder_arm_wrist_m = case_when(\n      right_shoulder_arm_wrist == 0 &\n        is.na(bpi_mbm_z5_rate) &\n        is.na(bpi_mbm_z5_dur) ~\n        0,\n      right_shoulder_arm_wrist == 1 &\n        !is.na(bpi_mbm_z5_rate) &\n        !is.na(bpi_mbm_z5_dur) ~\n        1,\n      TRUE ~ 2\n    )\n  ) %&gt;%\n  mutate(\n    left_shoulder_arm_wrist_m = case_when(\n      left_shoulder_arm_wrist == 0 &\n        is.na(bpi_mbm_z6_rate) &\n        is.na(bpi_mbm_z6_dur) ~\n        0,\n      left_shoulder_arm_wrist == 1 &\n        !is.na(bpi_mbm_z6_rate) &\n        !is.na(bpi_mbm_z6_dur) ~\n        1,\n      TRUE ~ 2\n    )\n  ) %&gt;%\n  mutate(\n    back_buttocks_m = case_when(\n      back_buttocks == 0 & is.na(bpi_mbm_z7_rate) & is.na(bpi_mbm_z7_dur) ~ 0,\n      back_buttocks == 1 & !is.na(bpi_mbm_z7_rate) & !is.na(bpi_mbm_z7_dur) ~ 1,\n      TRUE ~ 2\n    )\n  ) %&gt;%\n  mutate(\n    right_hip_leg_foot_m = case_when(\n      right_hip_leg_foot == 0 & is.na(bpi_mbm_z8_rate) & is.na(bpi_mbm_z8_dur) ~\n        0,\n      right_hip_leg_foot == 1 &\n        !is.na(bpi_mbm_z8_rate) &\n        !is.na(bpi_mbm_z8_dur) ~\n        1,\n      TRUE ~ 2\n    )\n  ) %&gt;%\n  mutate(\n    left_hip_leg_foot_m = case_when(\n      left_hip_leg_foot == 0 & is.na(bpi_mbm_z9_rate) & is.na(bpi_mbm_z9_dur) ~\n        0,\n      left_hip_leg_foot == 1 &\n        !is.na(bpi_mbm_z9_rate) &\n        !is.na(bpi_mbm_z9_dur) ~\n        1,\n      TRUE ~ 2\n    )\n  ) %&gt;%\n  mutate(across(ends_with(\"_m\"), as.factor)) %&gt;%\n  relocate(\n    record_id,\n    guid,\n    redcap_event_name,\n    redcap_data_access_group,\n    bpipainanatsiteareatxt,\n    head_face_jaw,\n    head_face_jaw_m,\n    bpi_mbm_z1_rate,\n    bpi_mbm_z1_dur,\n    neck,\n    neck_m,\n    bpi_mbm_z2_rate,\n    bpi_mbm_z2_dur,\n    chest_or_breast,\n    chest_or_breast_m,\n    bpi_mbm_z3_rate,\n    bpi_mbm_z3_dur,\n    abd_pelvis_groin,\n    abd_pelvis_groin_m,\n    bpi_mbm_z4_rate,\n    bpi_mbm_z4_dur,\n    right_shoulder_arm_wrist,\n    right_shoulder_arm_wrist_m,\n    bpi_mbm_z5_rate,\n    bpi_mbm_z5_dur,\n    left_shoulder_arm_wrist,\n    left_shoulder_arm_wrist_m,\n    bpi_mbm_z6_rate,\n    bpi_mbm_z6_dur,\n    back_buttocks,\n    back_buttocks_m,\n    bpi_mbm_z7_rate,\n    bpi_mbm_z7_dur,\n    right_hip_leg_foot,\n    right_hip_leg_foot_m,\n    bpi_mbm_z8_rate,\n    bpi_mbm_z8_dur,\n    left_hip_leg_foot,\n    left_hip_leg_foot_m,\n    bpi_mbm_z9_rate,\n    bpi_mbm_z9_dur\n  )\n\nCalculate number of pain areas for each subject and name it “number_of_pain_areas”\n\nbody_vector &lt;- c(\n  \"head_face_jaw\",\n  \"neck\",\n  \"chest_or_breast\",\n  \"abd_pelvis_groin\",\n  \"right_shoulder_arm_wrist\",\n  \"left_shoulder_arm_wrist\",\n  \"back_buttocks\",\n  \"right_hip_leg_foot\",\n  \"left_hip_leg_foot\"\n)\n\nbpi_body_map &lt;- bpi_body_map %&gt;%\n  rowwise() %&gt;%\n  mutate(\n    number_of_pain_areas = rowSums(across(all_of(body_vector)), na.rm = TRUE)\n  )\n\n\n\nD.2.2.2 New field name(s)\nAdd new field names for the michigan body map to the data dictionary\n\n# Create new field names\n\n# head face Jaw\njawm_new_row &lt;- data.frame(\n  field_name = \"head_face_jaw_m\",\n  form_name = \"bpisf_the_brief_pain_inventory_v23_short_form_bpi\",\n  field_type = \"Factor\",\n  select_choices_or_calculations = \"0, Subject has not selected the head/face/jaw and has not indicated the duration and intensity of pain for the selected body region|1,Subject has indicated painful region as well as specified the rate and duration|2, if either value ( rate and duration) or none of the values are present for the selected body region or if either value ( rate and duration) is available but the body region is not specified\"\n)\n\njaw_new_row &lt;- data.frame(\n  field_name = \"head_face_jaw\",\n  form_name = \"bpisf_the_brief_pain_inventory_v23_short_form_bpi\",\n  field_type = \"numeric\",\n  select_choices_or_calculations = \"0, Subject has not selected head/face/jaw |1,Subject has selected head/face/jaw\"\n)\n\n\n# neck\nneckm_new_row &lt;- data.frame(\n  field_name = \"neck_m\",\n  form_name = \"bpisf_the_brief_pain_inventory_v23_short_form_bpi\",\n  field_type = \"Factor\",\n  select_choices_or_calculations = \"0, Subject has not selected neck and has not indicated the duration and intensity of pain for the selected body region|1,Subject has indicated painful region as well as specified the rate and duration|2, if either value ( rate and duration) or none of the values are present for the selected body region or if either value ( rate and duration) is available but the body region is not specified\"\n)\n\nneck_new_row &lt;- data.frame(\n  field_name = \"neck\",\n  form_name = \"bpisf_the_brief_pain_inventory_v23_short_form_bpi\",\n  field_type = \"numeric\",\n  select_choices_or_calculations = \"0, Subject has not selected neck |1,Subject has selected neck\"\n)\n\n\n# chest_or_breast\nchest_or_breastm_new_row &lt;- data.frame(\n  field_name = \"chest_or_breast_m\",\n  form_name = \"bpisf_the_brief_pain_inventory_v23_short_form_bpi\",\n  field_type = \"Factor\",\n  select_choices_or_calculations = \"0, Subject has not selected chest_or_breast and has not indicated the duration and intensity of pain for the selected body region|1,Subject has indicated painful region as well as specified the rate and duration|2, if either value ( rate and duration) or none of the values are present for the selected body region or if either value ( rate and duration) is available but the body region is not specified\"\n)\n\nchest_or_breast_new_row &lt;- data.frame(\n  field_name = \"chest_or_breast\",\n  form_name = \"bpisf_the_brief_pain_inventory_v23_short_form_bpi\",\n  field_type = \"numeric\",\n  select_choices_or_calculations = \"0, Subject has not selected chest_or_breast |1,Subject has selected chest_or_breast\"\n)\n\n# abd_pelvis_groin\nabd_pelvis_groinm_new_row &lt;- data.frame(\n  field_name = \"abd_pelvis_groin_m\",\n  form_name = \"bpisf_the_brief_pain_inventory_v23_short_form_bpi\",\n  field_type = \"Factor\",\n  select_choices_or_calculations = \"0, Subject has not selected abd_pelvis_groin and has not indicated the duration and intensity of pain for the selected body region|1,Subject has indicated painful region as well as specified the rate and duration|2, if either value ( rate and duration) or none of the values are present for the selected body region or if either value ( rate and duration) is available but the body region is not specified\"\n)\n\nabd_pelvis_groin_new_row &lt;- data.frame(\n  field_name = \"abd_pelvis_groin\",\n  form_name = \"bpisf_the_brief_pain_inventory_v23_short_form_bpi\",\n  field_type = \"numeric\",\n  select_choices_or_calculations = \"0, Subject has not selected abd_pelvis_groin |1,Subject has selected abd_pelvis_groin\"\n)\n\n\n# right_shoulder_arm_wrist\nright_shoulder_arm_wristm_new_row &lt;- data.frame(\n  field_name = \"right_shoulder_arm_wrist_m\",\n  form_name = \"bpisf_the_brief_pain_inventory_v23_short_form_bpi\",\n  field_type = \"Factor\",\n  select_choices_or_calculations = \"0, Subject has not selected right_shoulder_arm_wrist and has not indicated the duration and intensity of pain for the selected body region|1,Subject has indicated painful region as well as specified the rate and duration|2, if either value ( rate and duration) or none of the values are present for the selected body region or if either value ( rate and duration) is available but the body region is not specified\"\n)\n\nright_shoulder_arm_wrist_new_row &lt;- data.frame(\n  field_name = \"right_shoulder_arm_wrist\",\n  form_name = \"bpisf_the_brief_pain_inventory_v23_short_form_bpi\",\n  field_type = \"numeric\",\n  select_choices_or_calculations = \"0, Subject has not selected right_shoulder_arm_wrist |1,Subject has selected right_shoulder_arm_wrist\"\n)\n\n# left_shoulder_arm_wrist\nleft_shoulder_arm_wristm_new_row &lt;- data.frame(\n  field_name = \"left_shoulder_arm_wrist_m\",\n  form_name = \"bpisf_the_brief_pain_inventory_v23_short_form_bpi\",\n  field_type = \"Factor\",\n  select_choices_or_calculations = \"0, Subject has not selected left_shoulder_arm_wrist and has not indicated the duration and intensity of pain for the selected body region|1,Subject has indicated painful region as well as specified the rate and duration|2, if either value ( rate and duration) or none of the values are present for the selected body region or if either value ( rate and duration) is available but the body region is not specified\"\n)\n\nleft_shoulder_arm_wrist_new_row &lt;- data.frame(\n  field_name = \"left_shoulder_arm_wrist\",\n  form_name = \"bpisf_the_brief_pain_inventory_v23_short_form_bpi\",\n  field_type = \"numeric\",\n  select_choices_or_calculations = \"0, Subject has not selected left_shoulder_arm_wrist |1,Subject has selected left_shoulder_arm_wrist\"\n)\n\n# back_buttocks\nback_buttocksm_new_row &lt;- data.frame(\n  field_name = \"back_buttocks_m\",\n  form_name = \"bpisf_the_brief_pain_inventory_v23_short_form_bpi\",\n  field_type = \"Factor\",\n  select_choices_or_calculations = \"0, Subject has not selected back_buttocks and has not indicated the duration and intensity of pain for the selected body region|1,Subject has indicated painful region as well as specified the rate and duration|2, if either value ( rate and duration) or none of the values are present for the selected body region or if either value ( rate and duration) is available but the body region is not specified\"\n)\n\nback_buttocks_new_row &lt;- data.frame(\n  field_name = \"back_buttocks\",\n  form_name = \"bpisf_the_brief_pain_inventory_v23_short_form_bpi\",\n  field_type = \"numeric\",\n  select_choices_or_calculations = \"0, Subject has not selected back_buttocks |1,Subject has selected back_buttocks\"\n)\n\n# right_hip_leg_foot\nright_hip_leg_footm_new_row &lt;- data.frame(\n  field_name = \"right_hip_leg_foot_m\",\n  form_name = \"bpisf_the_brief_pain_inventory_v23_short_form_bpi\",\n  field_type = \"Factor\",\n  select_choices_or_calculations = \"0, Subject has not selected right_hip_leg_foot and has not indicated the duration and intensity of pain for the selected body region|1,Subject has indicated painful region as well as specified the rate and duration|2, if either value ( rate and duration) or none of the values are present for the selected body region or if either value ( rate and duration) is available but the body region is not specified\"\n)\n\nright_hip_leg_foot_new_row &lt;- data.frame(\n  field_name = \"right_hip_leg_foot\",\n  form_name = \"bpisf_the_brief_pain_inventory_v23_short_form_bpi\",\n  field_type = \"numeric\",\n  select_choices_or_calculations = \"0, Subject has not selected right_hip_leg_foot |1,Subject has selected right_hip_leg_foot\"\n)\n\n# left_hip_leg_foot\nleft_hip_leg_footm_new_row &lt;- data.frame(\n  field_name = \"left_hip_leg_foot_m\",\n  form_name = \"bpisf_the_brief_pain_inventory_v23_short_form_bpi\",\n  field_type = \"Factor\",\n  select_choices_or_calculations = \"0, Subject has not selected left_hip_leg_foot and has not indicated the duration and intensity of pain for the selected body region|1,Subject has indicated painful region as well as specified the rate and duration|2, if either value ( rate and duration) or none of the values are present for the selected body region or if either value ( rate and duration) is available but the body region is not specified\"\n)\n\nleft_hip_leg_foot_new_row &lt;- data.frame(\n  field_name = \"left_hip_leg_foot\",\n  form_name = \"bpisf_the_brief_pain_inventory_v23_short_form_bpi\",\n  field_type = \"numeric\",\n  select_choices_or_calculations = \"0, Subject has not selected left_hip_leg_foot |1,Subject has selected left_hip_leg_foot\"\n)\n\n# number_of_pain_areas\n\npain_areas_new_row &lt;- data.frame(\n  field_name = \"number_of_pain_areas\",\n  form_name = \"bpisf_the_brief_pain_inventory_v23_short_form_bpi\",\n  field_type = \"numeric\",\n  select_choices_or_calculations = \"Sum of pain areas for each subject\"\n)\n\n# Add new rows\n\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!jawm_new_row,\n    .after = match(\"bpi_mbm_z9_dur\", psy_soc_dict$field_name)\n  )\n\n\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!jaw_new_row,\n    .after = match(\"bpi_mbm_z9_dur\", psy_soc_dict$field_name)\n  )\n\n\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!neckm_new_row,\n    .after = match(\"bpi_mbm_z9_dur\", psy_soc_dict$field_name)\n  )\n\n\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!neck_new_row,\n    .after = match(\"bpi_mbm_z9_dur\", psy_soc_dict$field_name)\n  )\n\n\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!chest_or_breastm_new_row,\n    .after = match(\"bpi_mbm_z9_dur\", psy_soc_dict$field_name)\n  )\n\n\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!chest_or_breast_new_row,\n    .after = match(\"bpi_mbm_z9_dur\", psy_soc_dict$field_name)\n  )\n\n\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!abd_pelvis_groinm_new_row,\n    .after = match(\"bpi_mbm_z9_dur\", psy_soc_dict$field_name)\n  )\n\n\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!abd_pelvis_groin_new_row,\n    .after = match(\"bpi_mbm_z9_dur\", psy_soc_dict$field_name)\n  )\n\n\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!right_shoulder_arm_wristm_new_row,\n    .after = match(\"bpi_mbm_z9_dur\", psy_soc_dict$field_name)\n  )\n\n\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!right_shoulder_arm_wrist_new_row,\n    .after = match(\"bpi_mbm_z9_dur\", psy_soc_dict$field_name)\n  )\n\n\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!left_shoulder_arm_wristm_new_row,\n    .after = match(\"bpi_mbm_z9_dur\", psy_soc_dict$field_name)\n  )\n\n\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!left_shoulder_arm_wrist_new_row,\n    .after = match(\"bpi_mbm_z9_dur\", psy_soc_dict$field_name)\n  )\n\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!back_buttocksm_new_row,\n    .after = match(\"bpi_mbm_z9_dur\", psy_soc_dict$field_name)\n  )\n\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!back_buttocks_new_row,\n    .after = match(\"bpi_mbm_z9_dur\", psy_soc_dict$field_name)\n  )\n\n\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!right_hip_leg_footm_new_row,\n    .after = match(\"bpi_mbm_z9_dur\", psy_soc_dict$field_name)\n  )\n\n\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!right_hip_leg_foot_new_row,\n    .after = match(\"bpi_mbm_z9_dur\", psy_soc_dict$field_name)\n  )\n\n\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!left_hip_leg_footm_new_row,\n    .after = match(\"bpi_mbm_z9_dur\", psy_soc_dict$field_name)\n  )\n\n\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!left_hip_leg_foot_new_row,\n    .after = match(\"bpi_mbm_z9_dur\", psy_soc_dict$field_name)\n  )\n\n\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!pain_areas_new_row,\n    .after = match(\"bpi_mbm_z9_dur\", psy_soc_dict$field_name)\n  )\n\n\n\nD.2.2.3 Save:\nCreate a folder for recoded BPI data and save “bpi_bpdy_map” and updated data dictionary as .csv files\n\nwrite_csv(\n  bpi_body_map,\n  file = here::here(\n    \"data\",\n    \"Psychosocial\",\n    \"Reformatted\",\n    \"reformatted_bpi_body_map.csv\"\n  )\n)\nwrite_csv(\n  psy_soc_dict,\n  file = here::here(\n    \"data\",\n    \"Psychosocial\",\n    \"Reformatted\",\n    \"updated_psy_soc_dictionary.csv\"\n  )\n)\n\n\n\n\nD.2.3 Brief pain intensity -whole body pain\nBrief pain intensity -whole body pain assesses other pain intensity (excluding surgical site) in the last 24 hours.\n\nD.2.3.1 Missing Data:\nMissing data pattern in bpi_body_pain\n\nbpi_body_pain %&gt;%\n  miss_var_summary()\n\n\n\n\n\n\n\n\n\n\nvariable\nn_miss\npct_miss\n\n\n\n\nbpiworstpainratingexclss\n44\n3.29\n\n\nrecord_id\n0\n0\n\n\nguid\n0\n0\n\n\nredcap_event_name\n0\n0\n\n\nredcap_data_access_group\n0\n0\n\n\ncohort\n0\n0\n\n\nbpisf_the_brief_pain_inventory_v23_short_form_bpi_complete\n0\n0\n\n\n\n\n\n\nThere are 32 observations (4.12%) with no response to the question i.e null values for the field name “bpiworstpainratingexclss”. We will create a variable “body_pain_intensity” and assign a value of 0 if a subject has not responded to the question, assign 1 if a subject has responded to the question\n\nbpi_body_pain &lt;- bpi_body_pain %&gt;%\n  mutate(body_pain_intensity = ifelse(is.na(bpiworstpainratingexclss), 0, 1))\n\nWe will now pass the field name “bpi_body_pain” as an argument to the table function to look at the frequencies.\n\ntable(bpi_body_pain$body_pain_intensity, exclude = FALSE)\n\n\n   0    1 \n  44 1293 \n\n\n\n\nD.2.3.2 New field name(s)\nAdd the field name “body_pain_intensity” to the data dictionary\n\n# Create field names\nbp_in_new_row &lt;- data.frame(\n  field_name = \"body_pain_intensity\",\n  form_name = \"bpisf_the_brief_pain_inventory_v23_short_form_bpi\",\n  field_type = \"Factor\",\n  select_choices_or_calculations = \"0, No body pain intensity specified |1, body pain intensity specified\"\n)\n\n# Add the new row\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!bp_in_new_row,\n    .after = match(\"bpipainintrfrscore\", psy_soc_dict$field_name)\n  )\n\n\n\nD.2.3.3 Save:\nSave “bpi_body_pain” and updated data dictionary as .csv files in the folder named “reformatted_bpi”\n\nwrite_csv(\n  bpi_body_pain,\n  file = here::here(\n    \"data\",\n    \"Psychosocial\",\n    \"Reformatted\",\n    \"reformatted_bpi_body_pain.csv\"\n  )\n)\nwrite_csv(\n  psy_soc_dict,\n  file = here::here(\n    \"data\",\n    \"Psychosocial\",\n    \"Reformatted\",\n    \"updated_psy_soc_dictionary.csv\"\n  )\n)\n\n\n\n\nD.2.4 Modified BPI – surgical site pain:\nModified BPI – surgical site pain records pain intensity and interference. The primary outcome is the worst pain intensity at the surgical site i.e field name “bpiworstpainratingss” over the past 24 hours,using a scale of 0 to 10. The form also includes the pain interference sub-scale (“Cleeland CS Ryan KM. Pain Assessment,” 1995), which assesses the level of interference in the subject’s daily activities over the past 24 hours (Berardi et al., 2022) due to surgical site pain. Pain interference is scored as the mean of seven interference items, in case of missing data, this mean can still be used if there is a response to at least 4 of 7 items (BPI user guide).\n\nCleeland CS Ryan KM. Pain assessment: global use of the Brief Pain Inventory. Ann Acad Med Singapore (1994 Mar) 23(2):129-38. (1995). Rehabilitation Oncology, 13(1), 29–30. https://doi.org/10.1097/01893697-199513010-00022\n\nBerardi, G., Frey-Law, L., Sluka, K. A., Bayman, E. O., Coffey, C. S., Ecklund, D., Vance, C. G. T., Dailey, D. L., Burns, J., Buvanendran, A., McCarthy, R. J., Jacobs, J., Zhou, X. J., Wixson, R., Balach, T., Brummett, C. M., Clauw, D., Colquhoun, D., Harte, S. E., … Wandner, L. D. (2022). Multi-site observational study to assess biomarkers for susceptibility or resilience to chronic pain: The acute to chronic pain signatures (A2CPS) study protocol. Frontiers in Medicine, 9. https://doi.org/10.3389/fmed.2022.849214\n\nD.2.4.1 Missing Data:\nMissing data pattern in bpi_pain_intrf if bpiworstpainratingss is not 0\n\ngg_miss_upset(\n  bpi_pain_intrf %&gt;%\n    filter(bpiworstpainratingss != 0),\n  nsets = n_var_miss(bpi_pain_intrf),\n  order.by = \"degree\",\n  point.size = 1,\n  line.size = 0.25,\n  text.scale = c(0.5)\n)\n\n\n\n\n\n\n\n\nWe will create a variable “pain_intrf” and assign a value of 1 if worst pain intensity at the surgical site is available and at least 4 of 7 pain interference item are available, 2 if response to worst pain intensity at the surgical site is available and less than or equal to 3 of 7 pain interference items are available, 3 if there is no response to worst pain intensity at the surgical site but at least 4 out 7 pain interference items are available, 4 if there is no response to worst pain intensity at the surgical site and less than or equal to 3 of 7 pain interference items are available.\n\nbpi_pain_intrf &lt;- bpi_pain_intrf %&gt;%\n  mutate(\n    intrf_not_na = rowSums(\n      !is.na(select(., \"bpipainintfrgnrlactvtyscl\":\"bpipainenjoymntintrfrscl\"))\n    )\n  ) %&gt;%\n  mutate(\n    pain_intrf = case_when(\n      !is.na(bpiworstpainratingss) & intrf_not_na &gt;= 4 ~ 1,\n      !is.na(bpiworstpainratingss) & intrf_not_na &lt;= 3 ~ 2,\n      is.na(bpiworstpainratingss) & intrf_not_na &gt;= 4 ~ 3,\n      is.na(bpiworstpainratingss) & intrf_not_na &lt;= 3 ~ 4,\n      TRUE ~ 0\n    )\n  ) %&gt;%\n  select(-intrf_not_na) %&gt;%\n  as_tibble() %&gt;%\n  mutate(pain_intrf = as.factor(pain_intrf))\n\nWe will create a new field “new_bpipainintrfrscore” with pain interference scores for observations that meet the conditions pain_intrf = 1 or pain_intrf = 3.\n\nbpi_pain_intrf &lt;- bpi_pain_intrf %&gt;%\n  mutate(\n    new_bpipainintrfrscore = case_when(\n      pain_intrf == 1 | pain_intrf == 3 ~ bpipainintrfrscore\n    )\n  )\n\nCompare the distributions for bpipainintrfrscore and new_bpipainintrfrscore\n\nsummary(bpi_pain_intrf$new_bpipainintrfrscore)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n 0.0000  0.8571  3.4286  3.5069  5.5714 10.0000      40 \n\nsummary(bpi_pain_intrf$bpipainintrfrscore)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n 0.0000  0.8571  3.4286  3.4807  5.5714 10.0000      23 \n\n\nWe see that there are more NA values for new_bpipainintrfrscore since this score was calculated for the observation that met the condition of more than or equal to 4 of 7 pain interference responses available.\n\n\nD.2.4.2 New field name(s)\nAdd the field name “pain_intrf” and “new_bpipainintrfrscore” to the data dictionary\n\n# Create field names\npain_intrf_new_row1 &lt;- data.frame(\n  field_name = \"pain_intrf\",\n  form_name = \"bpisf_the_brief_pain_inventory_v23_short_form_bpi\",\n  field_type = \"Factor\",\n  select_choices_or_calculations = \"1,worst pain intensity at the surgical site and at least 4 of 7 pain interference items are available|2, worst pain intensity at the surgical site and less than or equal to 3 out 7 pain interference items are available| 3, no response to worst pain intensity at the surgical site but at least 4 out 7 pain interference items are available |4, no response to worst pain intensity at the surgical site and less than or equal to 3 out 7 pain interference items are available\"\n)\n\n# new row for new_bpipainintrfrscore\npain_intrf_new_row2 &lt;- data.frame(\n  field_name = \"new_bpipainintrfrscore\",\n  form_name = \"bpisf_the_brief_pain_inventory_v23_short_form_bpi\",\n  field_type = \"numeric\",\n  select_choices_or_calculations = \"mean of interference items,if there is a response to at least 4 of 7 items\"\n)\n\n# Add new rows\n\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!pain_intrf_new_row1,\n    .after = match(\"bpipainintrfrscore\", psy_soc_dict$field_name)\n  ) %&gt;%\n  add_row(\n    !!!pain_intrf_new_row2,\n    .after = match(\"bpipainintrfrscore\", psy_soc_dict$field_name)\n  )\n\n\n\nD.2.4.3 Save:\nSave “bpi_pain_intrf” and updated data dictionary as .csv files in the folder named “reformatted_bpi”\n\nwrite_csv(\n  bpi_pain_intrf,\n  file = here::here(\n    \"data\",\n    \"Psychosocial\",\n    \"Reformatted\",\n    \"reformatted_bpi_pain_intrf.csv\"\n  )\n)\n\nwrite_csv(\n  psy_soc_dict,\n  file = here::here(\n    \"data\",\n    \"Psychosocial\",\n    \"Reformatted\",\n    \"updated_psy_soc_dictionary.csv\"\n  )\n)\n\n\n\n\nD.2.5 Knee Injury Osteoarthritis Outcome Score (KOOS-12)\nKOOS-12 is a 12-item scale that contains three sub scales (Roos et al., 1998):\n\nRoos, E. M., Roos, H. P., Lohmander, L. S., Ekdahl, C., & Beynnon, B. D. (1998). Knee Injury and Osteoarthritis Outcome Score (KOOS)Development of a Self-Administered Outcome Measure. Journal of Orthopaedic & Sports Physical Therapy, 28(2), 88–96. https://doi.org/10.2519/jospt.1998.28.2.88\n\n4 KOOS Pain items\n4 KOOS Function (Activities of Daily Living and Sport/Recreation) items\n4 KOOS Quality of Life (QOL) items to assesses knee pain none to extreme).\n\nThere must be a response to at least half of the items in each sub scale to calculate a sub scale score KOOS calculator. These scores are transformed to range from 0 to 100, where 0 represents extreme problems and 100 represents no problems.\n\nD.2.5.1 Read in Data:\nRead in psy_soc1 dataframe and select field names from the KOOS-12 data, keeping completed forms will subset to the TKA cohort by default, we will call this koos\n\nkoos &lt;- applyFilter(\n  \"koos\",\n  knee_injury_osteoarthritis_outcome_score_koos12_complete\n)\n\n\n\nD.2.5.2 Missing Data:\nMissing data pattern in koos.\n\ngg_miss_upset(\n  koos,\n  nsets = n_var_miss(koos),\n  order.by = \"degree\",\n  point.size = 1,\n  line.size = 0.25,\n  text.scale = c(0.5)\n)\n\n\n\n\n\n\n\n\nIf at least half of the items are answered for a given subscale, a subscale score can be calculated as follows KOOS calculator:\n\\[\n100-(mean (subscale score) \\times 100 / 4)\n\\]\nThe mean of all three subscale scores is then used to construct an overall KOOS-12 Summary knee impact score. As with sub scale scores, KOOS-12 summary scores range from 0-100, where 0 represents extreme problems and 100 represents no problems. A Summary impact score is not calculated if any of the three scale scores are missing.\nUsing the above equation, we will create three subscale scores:\n\npain_score for 4 KOOS Pain items\nfunc_score for 4 KOOS Function (Activities of Daily Living and Sport/Recreation) items\nqol_score for 4 KOOS Quality of Life (QOL) items.\n\nWe will also create a summary impact score “pain_summary”\n\npain &lt;- c(\n  \"koospainfreqscl\",\n  \"koospainwalkflatscl\",\n  \"koospainstairsscl\",\n  \"koospainsitlyingscl\"\n)\n\nfunc &lt;- c(\n  \"koosfuncdiffrisesitscl\",\n  \"koosfuncdiffstandscl\",\n  \"koosfuncdiffcarscl\",\n  \"koosfunctwistpivotscl\"\n)\n\nqol &lt;- c(\n  \"koosqolkneeawarescl\",\n  \"koosqollifestylemodscl\",\n  \"koosqolconfidencescl\",\n  \"koosqolkneedifficultyscl\"\n)\n\nall_koos &lt;- c(\"new_pain_score\", \"new_func_score\", \"new_qol_score\")\n\n\nkoos &lt;- koos %&gt;%\n  mutate(pain_not_na = rowSums(!is.na(select(., all_of(pain))))) %&gt;%\n  mutate(func_not_na = rowSums(!is.na(select(., all_of(func))))) %&gt;%\n  mutate(qol_not_na = rowSums(!is.na(select(., all_of(qol))))) %&gt;%\n  mutate(\n    new_pain_score = case_when(\n      pain_not_na &gt;= 2 ~\n        100 - ((rowMeans(select(., all_of(pain)), na.rm = TRUE) * 100) / 4)\n    )\n  ) %&gt;%\n  mutate(\n    new_func_score = case_when(\n      func_not_na &gt;= 2 ~\n        100 - ((rowMeans(select(., all_of(func)), na.rm = TRUE) * 100) / 4)\n    )\n  ) %&gt;%\n  mutate(\n    new_qol_score = case_when(\n      qol_not_na &gt;= 2 ~\n        100 - ((rowMeans(select(., all_of(qol)), na.rm = TRUE) * 100) / 4)\n    )\n  ) %&gt;%\n  mutate(new_pain_summary = rowMeans(select(., all_of(all_koos))))\n\nWe will now check the frequencies of all the scores (new vs. original) after accounting for missing data.\n\nnew_koos &lt;- koos %&gt;%\n  select(c(\n    \"new_qol_score\",\n    \"new_pain_score\",\n    \"new_func_score\",\n    \"new_pain_summary\"\n  ))\nold_koos &lt;- koos %&gt;%\n  select(c(\n    \"koospainscoret\",\n    \"koosfunctionscoret\",\n    \"koosqolscoret\",\n    \"koossummaryscore\"\n  ))\n\nUpset plot below shows missing scores in the original dataset\n\ngg_miss_upset(\n  old_koos,\n  nsets = n_var_miss(old_koos),\n  order.by = \"degree\",\n  point.size = 1,\n  line.size = 0.25,\n  text.scale = c(0.5)\n)\n\n\n\n\n\n\n\n\nUpset plot below shows missing scores for observation that don’t meet the criteria for calculating a scale score i.e. If at least half of the items are answered\n\ngg_miss_upset(\n  new_koos,\n  nsets = n_var_miss(new_koos),\n  order.by = \"degree\",\n  point.size = 1,\n  line.size = 0.25,\n  text.scale = c(0.5)\n)\n\n\n\n\n\n\n\n\n\n\nD.2.5.3 New field name(s)\nAdd the field names “new_qol_score”,“new_pain_score”, “new_func_score” and “new_pain_summary” to the data dictionary\n\n# Create New field name(s)s\nqol_score_new_row &lt;- data.frame(\n  field_name = \"new_qol_score\",\n  form_name = \"knee_injury_osteoarthritis_outcome_score_koos12\",\n  field_type = \"numeric\",\n  field_label = \"0 represents extreme problems and 100 represents no problems\",\n  field_note = \"If at least half of the items are answered for quality of life subscale, a subscale score can be calculated as follows 100-(mean (quality of life subscale) X 100 / 4\"\n)\n\nfunc_score_new_row &lt;- data.frame(\n  field_name = \"new_func_score\",\n  form_name = \"knee_injury_osteoarthritis_outcome_score_koos12\",\n  field_type = \"numeric\",\n  field_label = \"0 represents extreme problems and 100 represents no problems\",\n  field_note = \"If at least half of the items are answered for function subscale, a subscale score can be calculated as follows 100-(mean (function subscale) X 100 / 4\"\n)\n\npain_score_new_row &lt;- data.frame(\n  field_name = \"new_pain_score\",\n  form_name = \"knee_injury_osteoarthritis_outcome_score_koos12\",\n  field_type = \"numeric\",\n  field_label = \"0 represents extreme problems and 100 represents no problems\",\n  field_note = \"If at least half of the items are answered for pain subscale, a subscale score can be calculated as follows 100-(mean (pain subscale) X 100 / 4\"\n)\n\npain_summary_new_row &lt;- data.frame(\n  field_name = \"new_pain_summary\",\n  form_name = \"knee_injury_osteoarthritis_outcome_score_koos12\",\n  field_type = \"numeric\",\n  field_label = \"0 represents extreme problems and 100 represents no problems\",\n  field_note = \"If all three scale scores are available, The mean of all three subscale scores is then used to construct an overall KOOS-12 Summary knee impact score\"\n)\n\n\n# Add new rows\n\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!qol_score_new_row,\n    .after = match(\"koosqolscoret\", psy_soc_dict$field_name)\n  ) %&gt;% # new qol score\n  add_row(\n    !!!func_score_new_row,\n    .after = match(\"koosfunctionscoret\", psy_soc_dict$field_name)\n  ) %&gt;% # new func score\n  add_row(\n    !!!pain_score_new_row,\n    .after = match(\"koospainscoret\", psy_soc_dict$field_name)\n  ) # new pain score\n\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!pain_summary_new_row,\n    .after = match(\"koossummaryscore\", psy_soc_dict$field_name)\n  ) # new summary score\n\n\n\nD.2.5.4 Save:\nSave “koos” and updated data dictionary as .csv files in the folder named “reformatted_koos”\n\nwrite_csv(\n  koos,\n  file = here::here(\n    \"data\",\n    \"Psychosocial\",\n    \"Reformatted\",\n    \"reformatted_koos.csv\"\n  )\n)\nwrite_csv(\n  psy_soc_dict,\n  file = here::here(\n    \"data\",\n    \"Psychosocial\",\n    \"Reformatted\",\n    \"updated_psy_soc_dictionary.csv\"\n  )\n)\n\n\n\n\nD.2.6 Generalized Anxiety Disorder 7 Item (GAD7) Scale Score\nThe GAD-7 is a 7-item likert scale questionnaire that assesses anxiety levels over the last two weeks. The response to each item is rated on a scale of 0 (“not at all”) to 3 (“nearly every day”). A total score is calculated by adding the scores for all the 7 items and ranges from 0 to 21. A greater total score on the GAD-7 reflects higher anxiety levels(Spitzer et al., 2006). At the end of the questionnaire there is an additional question (“gad7difficulttowork”) to evaluate the subject’s perception about the impact of identified problems on their activities such as work, taking care of things at home, or interacting with others.\n\nSpitzer, R. L., Kroenke, K., Williams, J. B. W., & Löwe, B. (2006). A Brief Measure for Assessing Generalized Anxiety Disorder. Archives of Internal Medicine, 166(10), 1092. https://doi.org/10.1001/archinte.166.10.1092\n\nD.2.6.1 Read in Data:\nRead in psy_soc1 dataframe and select field names from the GAD7 data and keep completed forms, we will call this gad\n\ngad &lt;- applyFilter(\n  \"gad\",\n  generalized_anxiety_disorder_7_item_gad7_scale_sco_complete\n)\n\n\n\nD.2.6.2 Missing Data:\nMissing data pattern in gad. We will exclude “gad7difficulttowork” since the response to this field name is conditional on the responses to the rest of the GAD7 items.\n\ngg_miss_upset(\n  gad %&gt;%\n    select(-gad7difficulttowork),\n  nsets = n_var_miss(gad),\n  order.by = \"degree\",\n  point.size = 1,\n  line.size = 0.25,\n  text.scale = c(0.5)\n)\n\n\n\n\n\n\n\n\nHandling missing data:\nIn case of missing values, a total score can still be calculated if responses to 5 of 7 items are available (less than or equal to 29% missing data). The missing responses are first replaced with the average score of the completed items and then a total score is calculated by adding the scores for all the 7 items(Arrieta et al., 2017).\nThere are two observations with complete data missing, we will remove these observations. We will create a variable “gad_diff” and assign a value of 1 if there is a response to “gad7difficulttowork” and less than or equal to 2 GAD items are missing, 2 if there is a response to “gad7difficulttowork” and more than 2 GAD items are missing, 3 if there is no response to “gad7difficulttowork” and less than or equal to 2 GAD items are missing, 4 if there is no response to “gad7difficulttowork” more than 2 GAD items are missing.\n\ngad_vector &lt;- c(\n  \"gad2feelnervscl\",\n  \"gad2notstopwryscl\",\n  \"gad7wrytoomchscl\",\n  \"gad7troubrelxscl\",\n  \"gad7rstlessscl\",\n  \"gad7easyannoyedscl\",\n  \"gad7feelafrdscl\"\n)\n\ngad &lt;- gad %&gt;%\n  mutate(gad_not_na = rowSums(!is.na(select(., all_of(gad_vector))))) %&gt;%\n  mutate(\n    gad_diff = case_when(\n      !is.na(gad7difficulttowork) & gad_not_na &gt;= 5 ~ 1,\n      !is.na(gad7difficulttowork) & gad_not_na &lt; 5 ~ 2,\n      is.na(gad7difficulttowork) & gad_not_na &gt;= 5 ~ 3,\n      is.na(gad7difficulttowork) & gad_not_na &lt; 5 ~ 4,\n      TRUE ~ 0\n    )\n  ) %&gt;%\n  as_tibble() %&gt;%\n  mutate(gad_diff = as.factor(gad_diff)) %&gt;%\n  filter(gad_not_na != 0)\n\nWe will now replace missing values with the rounded mean of remaining items if gad_diff = 1 or gad_diff = 3 i.e less than or equal to 2 GAD items are missing\n\ngad_vector &lt;- c(\n  \"gad2feelnervscl\",\n  \"gad2notstopwryscl\",\n  \"gad7wrytoomchscl\",\n  \"gad7troubrelxscl\",\n  \"gad7rstlessscl\",\n  \"gad7easyannoyedscl\",\n  \"gad7feelafrdscl\"\n)\n\ngad &lt;- gad %&gt;%\n  filter(gad_not_na != 0) %&gt;%\n  mutate(\n    mean_gad = case_when(\n      gad_diff == 1 | gad_diff == 3 ~\n        round(rowMeans(select(., all_of(gad_vector)), na.rm = TRUE))\n    )\n  ) %&gt;%\n  mutate(across(all_of(gad_vector), ~ if_else(is.na(.), mean_gad, .))) %&gt;%\n  mutate(\n    imputed_gad_score = case_when(\n      gad_diff == 1 | gad_diff == 3 ~\n        rowSums(select(., all_of(gad_vector)), na.rm = TRUE)\n    )\n  )\n\nCheck missingness pattern after imputation\n\ngg_miss_upset(\n  gad %&gt;%\n    select(-gad7difficulttowork, -mean_gad, -imputed_gad_score),\n  nsets = n_var_miss(gad),\n  order.by = \"degree\",\n  point.size = 1,\n  line.size = 0.25,\n  text.scale = c(0.5)\n)\n\n\n\n\n\n\n\n\ncheck distributions of gad scores before (gad7totscore) and after imputation (imputed_gad_score)\n\ngad_plot &lt;- gad %&gt;%\n  filter(between(gad_not_na, 5, 6)) %&gt;%\n  select(guid, gad7totscore, imputed_gad_score) %&gt;%\n  pivot_longer(\n    cols = c(\"gad7totscore\", \"imputed_gad_score\"),\n    values_to = \"score\",\n    names_to = \"score_name\"\n  )\n\nggplot(gad_plot, aes(x = score_name, y = score, fill = score_name)) +\n  geom_violin(alpha = .25)\n\n\n\n\n\n\n\n\nRemove intermediate field names not needed\n\ngad &lt;- gad %&gt;%\n  select(-gad_not_na, -mean_gad)\n\n\n\nD.2.6.3 New field name(s)\nAdd the field names “gad_diff” and “imputed_gad_score”to the data dictionary\n\n# Create field names\ngad_diff_new_row &lt;- data.frame(\n  field_name = \"gad_diff\",\n  form_name = \"generalized_anxiety_disorder_7_item_gad7_scale_sco\",\n  field_type = \"factor\",\n  select_choices_or_calculations = \"1, if there is a response to gad7difficulttowork and less than or equal to 2 GAD items are missing|2, if there is a response to gad7difficulttowork and more than 2 GAD items are missing|3,if there is no response to gad7difficulttowork and less than or equal to 2 GAD items are missing|4,if there is no response to gad7difficulttowork more 2 GAD items are missing\"\n)\n\ngad_score_new_row &lt;- data.frame(\n  field_name = \"imputed_gad_score\",\n  form_name = \"generalized_anxiety_disorder_7_item_gad7_scale_sco\",\n  field_type = \"numeric\",\n  field_label = \" A total score ranges from 0 to 21. A greater total score on the GAD-7 reflects higher anxiety levels\",\n  field_note = \"The missing responses are first replaced with the average score of the completed items and then a total score is calculated by adding the scores for all the 7 items\"\n)\n\n\n# Adding new rows to the data dictionary\n# adding gad_diff\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!gad_diff_new_row,\n    .after = match(\"gad7difficulttowork\", psy_soc_dict$field_name)\n  )\n\n# imputed gad score score\n\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!gad_score_new_row,\n    .after = match(\"gad7difficulttowork\", psy_soc_dict$field_name)\n  )\n\n\n\nD.2.6.4 Save:\nSave “gad” and updated data dictionary as .csv files in the folder named “reformatted_gad”\n\nwrite_csv(\n  gad,\n  file = here::here(\n    \"data\",\n    \"Psychosocial\",\n    \"Reformatted\",\n    \"reformatted_gad.csv\"\n  )\n)\nwrite_csv(\n  psy_soc_dict,\n  file = here::here(\n    \"data\",\n    \"Psychosocial\",\n    \"Reformatted\",\n    \"updated_psy_soc_dictionary.csv\"\n  )\n)\n\n\n\n\nD.2.7 Patient Health Questionnaire Depression Scale (PHQ) Scored\nThe PHQ is a 8-item likert scale questionnaire that assesses depression levels over the last two weeks. The response to each item is rated on a scale of 0 (“not at all”) to 3 (“nearly every day”). The total score is calculated by adding the scores for all the 8 items. A score greater than 10 on PHQ indicates major depressive disorder(Kroenke et al., 2009).\n\nKroenke, K., Strine, T. W., Spitzer, R. L., Williams, J. B. W., Berry, J. T., & Mokdad, A. H. (2009). The PHQ-8 as a measure of current depression in the general population. Journal of Affective Disorders, 114(1-3), 163–173. https://doi.org/10.1016/j.jad.2008.06.026\n\nD.2.7.1 Read in Data:\nRead in psy_soc1 dataframe and select field names from the PHQ data and keep completed forms, we will call phq\n\nphq &lt;- applyFilter(\n  \"phq\",\n  patient_health_questionnaire_depression_scale_phq_complete\n)\n\n\n\nD.2.7.2 Missing Data:\nMissing data pattern in phq.\n\ngg_miss_upset(\n  phq,\n  nsets = n_var_miss(phq),\n  order.by = \"degree\",\n  point.size = 1,\n  line.size = 0.25,\n  text.scale = c(0.5)\n)\n\n\n\n\n\n\n\n\nHandling missing data:\nIn case of missing values, a total score can still be calculated if responses to 6 of 8 items are available (less than or equal to 29% missing data). The missing responses are first replaced with the average score of the completed items and then a total score is calculated by adding the scores for all the 8 items(Arrieta et al., 2017).\nNone of the observations have complete data missing. We will create a variable “phq_diff” and assign a value of 1 if there is a response to more than or equal to 6 of 8 PHQ items and 0 if there is a response to less than 6 of 8 PHQ items.\n\nphq_vector &lt;- c(\n  \"phqlitintrstscore\",\n  \"phqdeprssnscore\",\n  \"phqsleepimpairscore\",\n  \"phqtirdlittleenrgyscore\",\n  \"phqabnrmldietscore\",\n  \"phqflngfailrscore\",\n  \"phqconcntrtnimprmntscore\",\n  \"phqmovmntspchimprmntscore\"\n)\n\n\nphq &lt;- phq %&gt;%\n  mutate(phq_not_na = rowSums(!is.na(select(., all_of(phq_vector))))) %&gt;%\n  mutate(\n    phq_diff = case_when(\n      phq_not_na &gt;= 6 ~ 1,\n      TRUE ~ 0\n    )\n  ) %&gt;%\n  as_tibble() %&gt;%\n  mutate(phq_diff = as.factor(phq_diff))\n\nWe will now replace missing values with the rounded mean of remaining items if phq_diff = 1 i.e if less than or equal to 2 PHQ items are missing and calculate the total score by taking a sum of all the items.\n\nphq &lt;- phq %&gt;%\n  mutate(\n    mean_phq = case_when(\n      phq_diff == 1 ~\n        round(rowMeans(select(., all_of(phq_vector)), na.rm = TRUE))\n    )\n  ) %&gt;%\n  mutate(across(all_of(phq_vector), ~ if_else(is.na(.), mean_phq, .))) %&gt;%\n  mutate(\n    imputed_phq_score = case_when(\n      phq_diff == 1 ~ rowSums(select(., all_of(phq_vector)), na.rm = TRUE)\n    )\n  )\n\nCheck missingness pattern after imputation\n\ngg_miss_upset(\n  phq %&gt;%\n    select(-mean_phq, -imputed_phq_score),\n  nsets = n_var_miss(phq),\n  order.by = \"degree\",\n  point.size = 1,\n  line.size = 0.25,\n  text.scale = c(0.5)\n)\n\n\n\n\n\n\n\n\ncheck distributions of phq scores before (phqtotalscore) and after imputation (imputed_phq_score)\n\nphq_plot &lt;- phq %&gt;%\n  filter(between(phq_not_na, 6, 8)) %&gt;%\n  select(guid, phqtotalscore, imputed_phq_score) %&gt;%\n  pivot_longer(\n    cols = c(\"phqtotalscore\", \"imputed_phq_score\"),\n    values_to = \"score\",\n    names_to = \"score_name\"\n  )\n\nggplot(phq_plot, aes(x = score_name, y = score, fill = score_name)) +\n  geom_violin(alpha = .25)\n\n\n\n\n\n\n\n\nRemove intermediate field names not needed\n\nphq &lt;- phq %&gt;%\n  select(-phq_not_na, -mean_phq)\n\n\n\nD.2.7.3 New field name(s)\nAdd the field names “phq_diff” and “imputed_phq_score”to the data dictionary\n\n# Create field names\nphq_diff_new_row &lt;- data.frame(\n  field_name = \"phq_diff\",\n  form_name = \"patient_health_questionnaire_depression_scale_phq\",\n  field_type = \"factor\",\n  select_choices_or_calculations = \"1, if there is a response to more than or equal to 6 of 8 PHQ items|0,if there is a response to less than 6 of 8 PHQ items\"\n)\n\nphq_score_new_row &lt;- data.frame(\n  field_name = \"imputed_phq_score\",\n  form_name = \"patient_health_questionnaire_depression_scale_phq\",\n  field_type = \"numeric\",\n  field_label = \"A greater than 10 total score on the PHQ indicates major depressive disorder \",\n  field_note = \"The missing responses are first replaced with the average score of the completed items and then a total score is calculated by adding the scores for all the 8 items\"\n)\n\n\n# Add new rows\n\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!phq_diff_new_row,\n    .after = match(\"phqtotalscore\", psy_soc_dict$field_name)\n  ) # new summary score\n\n\n# imputed phq score\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!phq_score_new_row,\n    .after = match(\"phq_diff\", psy_soc_dict$field_name)\n  ) # new summary score\n\n\n\nD.2.7.4 Save:\nSave “phq” and updated data dictionary as .csv files in the folder named “reformatted_phq”\n\nwrite_csv(\n  phq,\n  file = here::here(\n    \"data\",\n    \"Psychosocial\",\n    \"Reformatted\",\n    \"reformatted_phq.csv\"\n  )\n)\nwrite_csv(\n  psy_soc_dict,\n  file = here::here(\n    \"data\",\n    \"Psychosocial\",\n    \"Reformatted\",\n    \"updated_psy_soc_dictionary.csv\"\n  )\n)\n\n\n\n\nD.2.8 Fear-Avoidance Beliefs Questionnaire v0.3 (FABQ)\nThe FABQ is a 4-item questionnaire that assesses fear avoidance behavior. The response to each item ranges from 0 (completely disagree) to 6 (completely agree)(Waddell et al., 1993). A total score is calculated by adding the scores for all the items and ranges from 0-24. A higher score indicates a higher degree of fear-avoidance belief.\n\nWaddell, G., Newton, M., Henderson, I., Somerville, D., & Main, C. J. (1993). A Fear-Avoidance Beliefs Questionnaire (FABQ) and the role of fear-avoidance beliefs in chronic low back pain and disability. Pain, 52(2), 157–168. https://doi.org/10.1016/0304-3959(93)90127-b\n\nD.2.8.1 Read in Data:\nRead in psy_soc1 dataframe and select field names from the FABQ data and keep completed forms, we will call FABQ\n\nfabq &lt;- applyFilter(\n  \"fabq\",\n  fearavoidance_beliefs_questionnaire_v03_fabq_complete\n)\n\n\n\nD.2.8.2 Missing Data:\nMissing data pattern in fabq.\n\ngg_miss_upset(\n  fabq,\n  nsets = n_var_miss(fabq),\n  order.by = \"degree\",\n  point.size = 1,\n  line.size = 0.25,\n  text.scale = c(0.5)\n)\n\n\n\n\n\n\n\n\nHandling missing data:\nIn case of missing values, a total score can be calculated if responses to 3 of 4 items are available (less than or equal to 29% missing data). The missing responses are first replaced with the average score of the completed items and then a total score is calculated by adding the scores for all the 4 items(Arrieta et al., 2017).\n\nArrieta, J., Aguerrebere, M., Raviola, G., Flores, H., Elliott, P., Espinosa, A., Reyes, A., Ortiz-Panozo, E., Rodriguez-Gutierrez, E. G., Mukherjee, J., Palazuelos, D., & Franke, M. F. (2017). Validity and Utility of the Patient Health Questionnaire (PHQ)-2 and PHQ-9 for Screening and Diagnosis of Depression in Rural Chiapas, Mexico: A Cross-Sectional Study. Journal of Clinical Psychology, 73(9), 1076–1090. https://doi.org/10.1002/jclp.22390\nWe will create a variable “fabq_diff” and assign a value of 1 if there is a response to more than or equal to 3 of 4 FABQ items and 0 if there is a response to less than 3 of 4 FABQ items.\n\nfabq_vector &lt;- c(\n  \"fabqphysclactvtywrsscl\",\n  \"fabqphysclactvtybckhrmscl\",\n  \"fabqphysactvtyshldntdoscl\",\n  \"fabqphysactvtycnntdoscl\"\n)\n\nfabq &lt;- fabq %&gt;%\n  mutate(fabq_not_na = rowSums(!is.na(select(., all_of(fabq_vector))))) %&gt;%\n  mutate(\n    fabq_diff = case_when(\n      fabq_not_na &gt;= 3 ~ 1,\n      TRUE ~ 0\n    )\n  ) %&gt;%\n  as_tibble() %&gt;%\n  mutate(fabq_diff = as.factor(fabq_diff))\n\nWe will now replace missing values with the rounded mean of remaining items if fabq_diff = 1 i.e if less than or equal to 1 FABQ item is missing and calculate the total score by taking a sum of all the items.\n\nfabq &lt;- fabq %&gt;%\n  mutate(\n    raw_fabq_score = rowSums(select(., all_of(fabq_vector)), na.rm = TRUE)\n  ) %&gt;%\n  mutate(\n    mean_fabq = case_when(\n      fabq_diff == 1 ~\n        round(rowMeans(select(., all_of(fabq_vector)), na.rm = TRUE))\n    )\n  ) %&gt;%\n  mutate(across(all_of(fabq_vector), ~ if_else(is.na(.), mean_fabq, .))) %&gt;%\n  mutate(\n    imputed_fabq_score = case_when(\n      fabq_diff == 1 ~ rowSums(select(., all_of(fabq_vector)), na.rm = TRUE)\n    )\n  )\n\nCheck missingness pattern after imputation\n\ngg_miss_upset(\n  fabq,\n  nsets = n_var_miss(fabq),\n  order.by = \"degree\",\n  point.size = 1,\n  line.size = 0.25,\n  text.scale = c(0.5)\n)\n\n\n\n\n\n\n\n\ncheck distributions of fabq scores before (raw_fabq_score) and after imputation (imputed_fabq_score)\n\nfabq_plot &lt;- fabq %&gt;%\n  filter(between(fabq_not_na, 3, 4)) %&gt;%\n  select(guid, raw_fabq_score, imputed_fabq_score) %&gt;%\n  pivot_longer(\n    cols = c(\"raw_fabq_score\", \"imputed_fabq_score\"),\n    values_to = \"score\",\n    names_to = \"score_name\"\n  )\n\nggplot(fabq_plot, aes(x = score_name, y = score, fill = score_name)) +\n  geom_violin(alpha = .25)\n\n\n\n\n\n\n\n\nRemove intermediate field names not needed\n\nfabq &lt;- fabq %&gt;%\n  select(-fabq_not_na, -mean_fabq)\n\n\n\nD.2.8.3 New field name(s)\nAdd the field names “fabq_diff” and “imputed_fabq_score” to the data dictionary\n\n# Create field names\nfabq_diff_new_row &lt;- data.frame(\n  field_name = \"fabq_diff\",\n  form_name = \"fearavoidance_beliefs_questionnaire_v03_fabq\",\n  field_type = \"factor\",\n  select_choices_or_calculations = \"1, if there is a response to more than or equal to 3 of 4 FABQ items|0, if there is a response to less than 3 of 4 FABQ items\"\n)\n\nfabq_score_new_row &lt;- data.frame(\n  field_name = \"imputed_fabq_score\",\n  form_name = \"fearavoidance_beliefs_questionnaire_v03_fabq\",\n  field_type = \"numeric\",\n  field_label = \"A higher score indicates a higher degree of fear-avoidance beliefs\",\n  field_note = \"The missing responses are first replaced with the average score of the completed items and then a total score is calculated by adding the scores for all 4 items\"\n)\n\n\n# Adding new rows to the data dictionary\n# adding fabq_diff\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!fabq_diff_new_row,\n    .after = match(\"fabqphysclactvtybckhrmscl\", psy_soc_dict$field_name)\n  )\n\n# imputed fabq score\n\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!fabq_score_new_row,\n    .after = match(\"fabqphysclactvtybckhrmscl\", psy_soc_dict$field_name)\n  )\n\n\n\nD.2.8.4 Save:\nSave “fabq” and updated data dictionary as .csv files in the folder named “reformatted_fabq”\n\nwrite_csv(\n  fabq,\n  file = here::here(\n    \"data\",\n    \"Psychosocial\",\n    \"Reformatted\",\n    \"reformatted_fabq.csv\"\n  )\n)\nwrite_csv(\n  psy_soc_dict,\n  file = here::here(\n    \"data\",\n    \"Psychosocial\",\n    \"Reformatted\",\n    \"updated_psy_soc_dictionary.csv\"\n  )\n)\n\n\n\n\nD.2.9 Pain Catastrophizing Scale (PCS6)\nThe PCS-6 comprises six questions, each item is rated on a scale of 0 to 4, where 0 indicates “not at all” and 4 indicates “all the time.” The questionnaire also measures three sub-scales that evaluate rumination, magnification, and helplessness. A total score is calculated by adding the scores for all the 6 items and ranges from 0-24, the three sub scale scores can be calculated separately as well[Darnall et al. (2017)](McWilliams et al., 2015). A higher score indicates higher degree catastrophizing.\n\nDarnall, B. D., Sturgeon, J. A., Cook, K. F., Taub, C. J., Roy, A., Burns, J. W., Sullivan, M., & Mackey, S. C. (2017). Development and Validation of a Daily Pain Catastrophizing Scale. The Journal of Pain, 18(9), 1139–1149. https://doi.org/10.1016/j.jpain.2017.05.003\n\nMcWilliams, L. A., Kowal, J., & Wilson, K. G. (2015). Development and evaluation of short forms of the Pain Catastrophizing Scale and the Pain Self-efficacy Questionnaire. European Journal of Pain, 19(9), 1342–1349. https://doi.org/10.1002/ejp.665\n\nD.2.9.1 Read in Data:\nRead in psy_soc1 dataframe and select field names from the PCS-6 data and keep completed forms, we will call “pcs”\n\npcs &lt;- applyFilter(\"pcq\", pain_catastrophizing_questionnaire_pcs6_complete)\n\n\n\nD.2.9.2 Missing Data:\nMissing data pattern in pcs.\n\ngg_miss_upset(\n  pcs %&gt;%\n    select(-pcqtotalscoreval),\n  nsets = n_var_miss(pcs),\n  order.by = \"degree\",\n  point.size = 1,\n  line.size = 0.25,\n  text.scale = c(0.5)\n)\n\n\n\n\n\n\n\n\nHandling missing data:\nIn case of missing values, a total score can still be calculated if responses to 5 of 6 items are available (0.29 x 6 = 1.74). The missing responses are first replaced with the average score of the completed items and then a total score is calculated by adding the scores for all the 6 items(refer to section 1.c).\nTwo of the the observations have complete data missing, we will remove these observations. We will create a variable “pcs_diff” and assign a value of 1 if there is a response to more than or equal to 5 of 6 PCS items and 0 if there is a response to less than 5 of 6 PCS items.\n\npcs_vector &lt;- c(\n  \"pcqpainawfulovrwhlmscl\",\n  \"pcqfeelcantwithstandscl\",\n  \"pcqafraidpainworsescl\",\n  \"pcqhurtscl\",\n  \"pcqpainstopscl\",\n  \"pcqseriousscl\"\n)\n\n\npcs &lt;- pcs %&gt;%\n  mutate(pcs_not_na = rowSums(!is.na(select(., all_of(pcs_vector))))) %&gt;%\n  mutate(\n    pcs_diff = case_when(\n      pcs_not_na &gt;= 5 ~ 1,\n      TRUE ~ 0\n    )\n  ) %&gt;%\n  as_tibble() %&gt;%\n  mutate(pcs_diff = as.factor(pcs_diff)) %&gt;%\n  filter(pcs_not_na != 0)\n\nWe will now replace missing values with the rounded mean of remaining items if pcs_diff = 1 i.e if 1 pcs item is missing, and calculate the total score by taking a sum of all the items.\n\npcs &lt;- pcs %&gt;%\n  mutate(\n    raw_pcs_score = rowSums(select(., all_of(pcs_vector)), na.rm = TRUE)\n  ) %&gt;%\n  mutate(\n    mean_pcs = case_when(\n      pcs_diff == 1 ~\n        round(rowMeans(select(., all_of(pcs_vector)), na.rm = TRUE))\n    )\n  ) %&gt;%\n  mutate(across(all_of(pcs_vector), ~ if_else(is.na(.), mean_pcs, .))) %&gt;%\n  mutate(\n    imputed_pcs_score = case_when(\n      pcs_diff == 1 ~ rowSums(select(., all_of(pcs_vector)), na.rm = TRUE)\n    )\n  )\n\nCheck missingness pattern after imputation\n\ngg_miss_upset(\n  pcs %&gt;%\n    select(-pcqtotalscoreval, -raw_pcs_score, -imputed_pcs_score),\n  nsets = n_var_miss(pcs),\n  order.by = \"degree\",\n  point.size = 1,\n  line.size = 0.25,\n  text.scale = c(0.5)\n)\n\n\n\n\n\n\n\n\ncheck distributions of PCS scores before (raw_pcs_score) and after imputation (imputed_pcs_score)\n\npcs_plot &lt;- pcs %&gt;%\n  filter(between(pcs_not_na, 5, 6)) %&gt;%\n  select(guid, raw_pcs_score, imputed_pcs_score) %&gt;%\n  pivot_longer(\n    cols = c(\"raw_pcs_score\", \"imputed_pcs_score\"),\n    values_to = \"score\",\n    names_to = \"score_name\"\n  )\n\nggplot(pcs_plot, aes(x = score_name, y = score, fill = score_name)) +\n  geom_violin(alpha = .25)\n\n\n\n\n\n\n\n\nRemove intermediate field names not needed\n\npcs &lt;- pcs %&gt;%\n  select(-pcs_not_na, -mean_pcs, -raw_pcs_score)\n\n\n\nD.2.9.3 New field name(s)\nAdd the field names “pcs_diff” and “imputed_pcs_score”to the data dictionary\n\n# Create field names\npcs_diff_new_row &lt;- data.frame(\n  field_name = \"pcs_diff\",\n  form_name = \"pain_catastrophizing_questionnaire_pcs6\",\n  field_type = \"factor\",\n  select_choices_or_calculations = \"1, if there is a response to more than or equal to 5 of 6 PCS items|0, if there is a response to less than 5 of 6 PCS items\"\n)\n\npcs_score_new_row &lt;- data.frame(\n  field_name = \"imputed_pcs_score\",\n  form_name = \"pain_catastrophizing_questionnaire_pcs6\",\n  field_type = \"numeric\",\n  field_label = \"A higher score indicates a higher degree of catastrophizing\",\n  field_note = \"The missing responses are first replaced with the average score of the completed items and then a total score is calculated by adding the scores for all the items\"\n)\n\n# adding pcs_diff\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!pcs_diff_new_row,\n    .after = match(\"pcqtotalscoreval\", psy_soc_dict$field_name)\n  )\n\n# imputed pcs score\n\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!pcs_score_new_row,\n    .after = match(\"pcqtotalscoreval\", psy_soc_dict$field_name)\n  )\n\n\n\nD.2.9.4 Save:\nSave “pcs” and updated data dictionary as .csv files in the folder named “reformatted_pcs”\n\nwrite_csv(\n  pcs,\n  file = here::here(\n    \"data\",\n    \"Psychosocial\",\n    \"Reformatted\",\n    \"reformatted_pcs.csv\"\n  )\n)\nwrite_csv(\n  psy_soc_dict,\n  file = here::here(\n    \"data\",\n    \"Psychosocial\",\n    \"Reformatted\",\n    \"updated_psy_soc_dictionary.csv\"\n  )\n)\n\n\n\n\nD.2.10 Symptom Severity Index v1.0 (SSI)\nThe SSI measures the severity of fatigue, cognitive dysfunction, and unrefreshed sleep over the past week using a Likert scale from 0 (no problem) to 3 (severe). If the sum of the scores of fatigue, waking unrefreshed, and cognitive symptoms is more than 0, an additional question (ssi_chronicyn) related to the duration of symptoms is asked. The questionnaire also comprises three additional questions for the history of lower abdomen pain, depression, and headache for at least three months (yes/no). The symptom severity scale (SSS) score is calculated by summing up the scores of fatigue, waking unrefreshed, and cognitive symptoms, which range from 0 to 9, and the sum (0-3) of additional symptoms experienced in the past six months. The final total score can be between 0 and 12.(Wolfe et al., 2016).\n\nWolfe, F., Clauw, D. J., Fitzcharles, M.-A., Goldenberg, D. L., Häuser, W., Katz, R. L., Mease, P. J., Russell, A. S., Russell, I. J., & Walitt, B. (2016). 2016 Revisions to the 2010/2011 fibromyalgia diagnostic criteria. Seminars in Arthritis and Rheumatism, 46(3), 319–329. https://doi.org/10.1016/j.semarthrit.2016.08.012\n\nD.2.10.1 Read in Data:\nRead in psy_soc1 dataframe and select field names from the SSI data and keep completed forms, we will call “ssi”\n\nssi &lt;- applyFilter(\"ssi\", symptom_severity_index_v10_ssi_complete)\n\n\n\nD.2.10.2 Missing Data:\nMissing data pattern in SSI, we will exclude “ssi_chronicyn” since the response to this field name is conditional on the sum of fatigue, waking unrefreshed, and cognitive symptom scores being more than 0.\n\ngg_miss_upset(\n  ssi %&gt;%\n    select(-ssi_chronicyn),\n  nsets = n_var_miss(ssi),\n  order.by = \"degree\",\n  point.size = 1,\n  line.size = 0.25,\n  text.scale = c(0.5)\n)\n\n\n\n\n\n\n\n\nHandling missing data:\nMissing values for fatigue, cognitive dysfunction, or unrefreshed sleep cannot be imputed using row wise means since 28% X 3 = 0.87, resulting in the floor value for non integer values being 0. Additionally we will not impute missing values for history of lower abdomen pain, depression, and headache for at least three months (yes/no)(refer section 1.c).\nScoring:\nWe will calculate:\n\nA summed score for fatigue, cognitive dysfunction, or unrefreshed sleep if responses to all three items are available, ranging from 0-9, we will name this “ssi_symp_score”\nA summed score for history of lower abdomen pain, depression, and headache for at least three months (yes/no), ranging from 0-3, we will name this “ssi_hist_score”\nFinally we will calculate a total summed score ranging from 0-12 if responses to all items are available, we will name this “ssi_total_score”\n\n\nssi_symptoms &lt;- c(\"ssi_fatigue\", \"ssi_cognitive\", \"ssi_tired\")\nssi_history &lt;- c(\"ssi_abdpainyn\", \"ssi_depressyn\", \"ssi_headacheyn\")\nssi_all &lt;- c(\"ssi_symp_score\", \"ssi_hist_score\")\n\nssi &lt;- ssi %&gt;%\n  mutate(\n    ssi_symp_score = rowSums(select(., all_of(ssi_symptoms)), na.rm = FALSE)\n  ) %&gt;%\n  mutate(\n    ssi_hist_score = rowSums(select(., all_of(ssi_history)), na.rm = FALSE)\n  ) %&gt;%\n  mutate(ssi_total_score = rowSums(select(., all_of(ssi_all)), na.rm = FALSE))\n\nWe will now create a field name “ssi_diff”, and assign a value of 0 if both ssi_symp_score and ssi_hist_score are missing, 1 if only ssi_symp_score is available, 2 if only ssi_hist_score is available and 3 if both scores and invariably the total score is available. If the sum of the scores of fatigue, waking unrefreshed, and cognitive symptoms is more than 0, an additional question (ssi_chronicyn) related to the duration of symptoms is asked. We will create a field name “ssi_missing_chronic” and assign a value of 0 if “ssi_symp_score” &gt; 0 and “ssi_chronicyn” is missing, of 1 if “ssi_symp_score” &gt; 0 and “ssi_chronicyn” is not missing, 2 if “ssi_sym_score” = 0 or “ssi_sym_score” is missing and “ssi_chronicyn” is missing.\n\nssi &lt;- ssi %&gt;%\n  mutate(\n    ssi_diff = case_when(\n      is.na(ssi_symp_score) & is.na(ssi_hist_score) ~ 0,\n      !is.na(ssi_symp_score) & is.na(ssi_hist_score) ~ 1,\n      is.na(ssi_symp_score) & !is.na(ssi_hist_score) ~ 2,\n      TRUE ~ 3\n    )\n  ) %&gt;%\n  mutate(\n    ssi_missing_chronic = case_when(\n      ssi_symp_score &gt; 0 & !is.na(ssi_chronicyn) ~ 1,\n      ssi_symp_score &gt; 0 & is.na(ssi_chronicyn) ~ 0,\n      TRUE ~ 2\n    )\n  ) %&gt;%\n  mutate(ssi_diff = as.factor(ssi_diff)) %&gt;%\n  mutate(ssi_missing_chronic = as.factor(ssi_missing_chronic))\n\n\n\nD.2.10.3 New field name(s)\nAdd the field names “ssi_symp_score”, “ssi_hist_score”, “ssi_total_score”, “ssi_diff”, and “ssi_missing_chronic” to the data dictionary.\n\n# Create field names\nssi_symp_score_new_row &lt;- data.frame(\n  field_name = \"ssi_symp_score\",\n  form_name = \"symptom_severity_index_v10_ssi\",\n  field_type = \"numeric\",\n  field_label = \"Total score ranges from 0 to 9\",\n  field_note = \"Summed score for fatigue, cognitive dysfunction, or unrefreshed sleep if responses to all three items are available\"\n)\n\nssi_hist_score_new_row &lt;- data.frame(\n  field_name = \"ssi_hist_score\",\n  form_name = \"symptom_severity_index_v10_ssi\",\n  field_type = \"numeric\",\n  field_label = \"Total score ranges from 0 to 3\",\n  field_note = \"Summed score for history of lower abdomen pain, depression, and headache for at least three months (yes/no)\"\n)\n\nssi_total_score_new_row &lt;- data.frame(\n  field_name = \"ssi_total_score\",\n  form_name = \"symptom_severity_index_v10_ssi\",\n  field_type = \"numeric\",\n  field_label = \"Total score ranges from 0 to 12\",\n  field_note = \"Summed score of all the items if responses to all items are available\"\n)\n\n\nssi_diff_new_row &lt;- data.frame(\n  field_name = \"ssi_diff\",\n  form_name = \"symptom_severity_index_v10_ssi\",\n  field_type = \"factor\",\n  select_choices_or_calculations = \"0, if both ssi_symp_score and ssi_hist_score are missing, 1 if only ssi_symp_score is available|2, if only ssi_hist_score is available | 3, if both scores and invariably the total score is available\"\n)\n\nssi_missing_chronic_new_row &lt;- data.frame(\n  field_name = \"ssi_missing_chronic\",\n  form_name = \"symptom_severity_index_v10_ssi\",\n  field_type = \"factor\",\n  select_choices_or_calculations = \"0 if ssi_symp_score &gt; 0 and ssi_chronicyn is missing| 1 if ssi_symp_score &gt; 0 and ssi_chronicyn is not missing,2 if ssi_sym_score = 0 or is missing and ssi_chronicyn is missing\"\n)\n\n\n# adding new rows\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!ssi_symp_score_new_row,\n    .after = match(\"ssi_headacheyn\", psy_soc_dict$field_name)\n  )\n\n\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!ssi_hist_score_new_row,\n    .after = match(\"ssi_headacheyn\", psy_soc_dict$field_name)\n  )\n\n\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!ssi_total_score_new_row,\n    .after = match(\"ssi_headacheyn\", psy_soc_dict$field_name)\n  )\n\n\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!ssi_diff_new_row,\n    .after = match(\"ssi_headacheyn\", psy_soc_dict$field_name)\n  )\n\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!ssi_missing_chronic_new_row,\n    .after = match(\"ssi_headacheyn\", psy_soc_dict$field_name)\n  )\n\n\n\nD.2.10.4 Save:\nSave “ssi” and updated data dictionary as .csv files in the folder named “reformatted_ssi”\n\nwrite_csv(\n  ssi,\n  file = here::here(\n    \"data\",\n    \"Psychosocial\",\n    \"Reformatted\",\n    \"reformatted_ssi.csv\"\n  )\n)\nwrite_csv(\n  psy_soc_dict,\n  file = here::here(\n    \"data\",\n    \"Psychosocial\",\n    \"Reformatted\",\n    \"updated_psy_soc_dictionary.csv\"\n  )\n)\n\n\n\n\nD.2.11 Pain Detect Questionnaire (PD-Q)\nThe PD-Q consists of seven question to evaluate neuropathic pain, followed by two additional questions that focus on pain patterns to differentiate between neuropathic and nociceptive pain.\nEach item in the initial seven questions is rated on a scale of 0 to 5, where 0 indicates “never” and 5 indicates “very strongly.” The total score is calculated by summing up the scores of the initial seven questions, which can range from 0 to 35, plus the sum of additional two questions. The final total score can be between 0 and 38(Freynhagen et al., 2006).\n\nD.2.11.1 Read in Data:\nRead in psy_soc1 dataframe and select field names from the PD-Q data and keep completed forms, we will call “pdq”\n\npdq &lt;- applyFilter(\"pd\", pain_detect_questionnaire_pdq_complete)\n\n\n\nD.2.11.2 Missing Data:\nMissing data pattern in pdq: Subjects with a total score of 0 on the initial 7 questions may not have responses to the questions related to pain patterns. We will account for this when visualizing missing data pattern.\nThere are rows where the sum of initial seven questions is 0 and there are responses to “pdqpaincourse” and “pdradiateregions”. Create a dataset “pdq_zero” and fill in missing values with “99” for the questions related to pain pattern (“pdqpaincourse” and “pdradiateregions”) if the sum of initial seven questions is 0 and if responses to “pdqpaincourse” and “pdradiateregions” are not available\n\npdq_seven &lt;- c(\n  \"pdburnsens\",\n  \"pdtinglsens\",\n  \"pdlttouch\",\n  \"pdsudpanatt\",\n  \"pdbathwtr\",\n  \"pdnumb\",\n  \"pdslightpress\"\n)\npdq_zero &lt;- pdq %&gt;%\n  mutate(\n    pdq_seven_score = rowSums(select(., all_of(pdq_seven)), na.rm = TRUE)\n  ) %&gt;%\n  mutate(\n    pdqpaincourse = case_when(\n      pdq_seven_score == 0 & is.na(pdqpaincourse) ~ 99,\n      TRUE ~ pdqpaincourse,\n    )\n  ) %&gt;%\n  mutate(\n    pdradiateregions = case_when(\n      pdq_seven_score == 0 & is.na(pdradiateregions) ~ 99,\n      TRUE ~ pdradiateregions,\n    )\n  )\n\nVisualize missing data after accounting for missing responses to pdqpaincourse” and “pdradiateregions” if the sum of total score of the initial 7 items is 0.\n\ngg_miss_upset(\n  pdq_zero,\n  nsets = n_var_miss(pdq_zero),\n  order.by = \"degree\",\n  point.size = 1,\n  line.size = 0.25,\n  text.scale = c(0.5)\n)\n\n\n\n\n\n\n\n\nHandling missing data:\nMissing values for the initial neuropathic pain related seven question can be imputed if the responses to 5 of 7 items are available (less than or equal to 29% missing data). The missing responses are first replaced with the average score of the completed items and then a total score is calculated by adding the scores for all the seven items. We will not impute missing values “pdqpaincourse” and “pdradiateregions” since these two follow up questions focus on pain patterns to differentiate between neuropathic and nociceptive pain (refer section 1.c).\nWe will create a variable “pdq_diff” and assign a value of 1 if there is a response to more than or equal to 5 of 7 Pdq items and 0 if there is a response to less than 5 of 7 Pdq items.\n\npdq_seven &lt;- c(\n  \"pdburnsens\",\n  \"pdtinglsens\",\n  \"pdlttouch\",\n  \"pdsudpanatt\",\n  \"pdbathwtr\",\n  \"pdnumb\",\n  \"pdslightpress\"\n)\npdq &lt;- pdq %&gt;%\n  mutate(pdq_not_na = rowSums(!is.na(.[, pdq_seven]))) %&gt;%\n  mutate(\n    pdq_diff = case_when(\n      pdq_not_na &gt;= 5 ~ 1,\n      TRUE ~ 0\n    )\n  ) %&gt;%\n  as_tibble() %&gt;%\n  mutate(pdq_diff = as.factor(pdq_diff))\n\nWe will now replace missing values with the rounded mean of remaining items if pdq_diff = 1 and calculate a score by taking a sum of the 7 neuropathic pain related items, we will call this “imputed_pdq_score.”\n\npdq &lt;- pdq %&gt;%\n  mutate(\n    raw_pdq_score = rowSums(select(., all_of(pdq_seven)), na.rm = TRUE)\n  ) %&gt;%\n  mutate(\n    mean_pdq = case_when(\n      pdq_diff == 1 ~\n        round(rowMeans(select(., all_of(pdq_seven)), na.rm = TRUE))\n    )\n  ) %&gt;%\n  mutate(across(all_of(pdq_seven), ~ if_else(is.na(.), mean_pdq, .))) %&gt;%\n  mutate(\n    imputed_pdq_score = case_when(\n      pdq_diff == 1 ~ rowSums(select(., all_of(pdq_seven)), na.rm = TRUE)\n    )\n  )\n\nCheck missingness pattern after imputation\n\npdq_zero_imputed &lt;- pdq_zero %&gt;%\n  mutate(pdq_not_na = rowSums(!is.na(.[, pdq_seven]))) %&gt;%\n  mutate(\n    pdq_diff = case_when(\n      pdq_not_na &gt;= 5 ~ 1,\n      TRUE ~ 0\n    )\n  ) %&gt;%\n  as_tibble() %&gt;%\n  mutate(pdq_diff = as.factor(pdq_diff)) %&gt;%\n  mutate(\n    mean_pdq = case_when(\n      pdq_diff == 1 ~\n        round(rowMeans(select(., all_of(pdq_seven)), na.rm = TRUE))\n    )\n  ) %&gt;%\n  mutate(across(all_of(pdq_seven), ~ if_else(is.na(.), mean_pdq, .))) %&gt;%\n  select(-pdq_seven_score, -pdq_diff, -pdq_not_na, -mean_pdq)\n\ngg_miss_upset(\n  pdq_zero_imputed,\n  nsets = n_var_miss(pdq_zero_imputed),\n  order.by = \"degree\",\n  point.size = 1,\n  line.size = 0.25,\n  text.scale = c(0.5)\n)\n\n\n\n\n\n\n\n\ncheck distributions of PDQ scores before (raw_pdq_score) and after imputation (imputed_pdq_score)\n\npdq_plot &lt;- pdq %&gt;%\n  filter(between(pdq_not_na, 5, 7)) %&gt;%\n  select(guid, raw_pdq_score, imputed_pdq_score) %&gt;%\n  pivot_longer(\n    cols = c(\"raw_pdq_score\", \"imputed_pdq_score\"),\n    values_to = \"score\",\n    names_to = \"score_name\"\n  )\n\nggplot(pdq_plot, aes(x = score_name, y = score, fill = score_name)) +\n  geom_violin(alpha = .25)\n\n\n\n\n\n\n\n\nRemove intermediate field names not needed\n\npdq &lt;- pdq %&gt;%\n  select(-pdq_not_na, -mean_pdq, -raw_pdq_score)\n\n\n\nD.2.11.3 Scoring:\nThe scoring for pain behavior pattern (pdqpaincourse) and the pain radiation (pdradiateregions) is as follows(Freynhagen et al., 2006)[PainDETECT.pdf](https://www.oregon.gov/oha/HPA/dsi-pmc/PainCareToolbox/PainDETECT.pdf):\n\nFreynhagen, R., Baron, R., Gockel, U., & Tölle, T. R. (2006). painDETECT: a new screening questionnaire to identify neuropathic components in patients with back pain. Current Medical Research and Opinion, 22(10), 1911–1920. https://doi.org/10.1185/030079906x132488\n\n\nFirst we will recode values for “pdqpaincourse” and “pdradiateregions” according to the above table\nWe will then combine “pdqpaincourse”, “pdradiateregions” scores and the “imputed_pdq_score” to get the total score.\n\nRecode values for “pdqpaincourse” and “pdradiateregions”, we will call these “pdqpaincourse_recoded” and “pdradiateregions_recoded”\n\npdq &lt;- pdq %&gt;%\n  mutate(\n    pdqpaincourse_recoded = case_when(\n      pdqpaincourse == 1 ~ 0,\n      pdqpaincourse == 2 ~ -1,\n      pdqpaincourse == 3 ~ 1,\n      pdqpaincourse == 4 ~ 1,\n      TRUE ~ pdqpaincourse\n    )\n  ) %&gt;%\n  mutate(\n    pdradiateregions_recoded = case_when(\n      pdradiateregions == 0 ~ 0,\n      pdradiateregions == 1 ~ 2,\n      TRUE ~ pdradiateregions\n    )\n  )\n\nCombine “pdqpaincourse_recoded”, “pdradiateregions_recoded” scores and the “imputed_pdq_score” to get the total score if all three scores are available, we will call this “pd_neuro_total_score”\n\npd_neuro &lt;- c(\n  \"pdqpaincourse_recoded\",\n  \"pdradiateregions_recoded\",\n  \"imputed_pdq_score\"\n)\npdq &lt;- pdq %&gt;%\n  mutate(\n    pd_neuro_total_score = rowSums(select(., all_of(pd_neuro)), na.rm = FALSE)\n  ) %&gt;%\n  mutate(pdqpaincourse_recoded = as.factor(pdqpaincourse_recoded)) %&gt;%\n  mutate(pdradiateregions_recoded = as.factor(pdradiateregions_recoded))\n\n\n\nD.2.11.4 New field name(s)\nAdd the field names “pdq_diff”,“pdqpaincourse_recoded”,“pdradiateregions_recoded”,“imputed_pdq_score”, and “pd_neuro_total_score” to the data dictionary\n\n# Create field names\npdq_diff_new_row &lt;- data.frame(\n  field_name = \"pdq_diff\",\n  form_name = \"pain_detect_questionnaire_pdq\",\n  field_type = \"factor\",\n  select_choices_or_calculations = \"1, if there is a response to more than or equal to 5 of 7 PDQ neuropathic pain related items| 0, if there is a response to less than 5 of 7 items\"\n)\n\npdq_score_new_row &lt;- data.frame(\n  field_name = \"imputed_pdq_score\",\n  form_name = \"pain_detect_questionnaire_pdq\",\n  field_type = \"numeric\",\n  field_label = \"Sum of the 7 neuropathic pain related items by replacing missing values with the rounded mean of remaining items if pdq_diff = 1\"\n)\n\npdq_course_new_row &lt;- data.frame(\n  field_name = \"pdqpaincourse_recoded\",\n  form_name = \"pain_detect_questionnaire_pdq\",\n  field_type = \"factor\",\n  select_choices_or_calculations = \"0,Persistent pain with slight fluctuations|-1,Persistent pain with pain attacks|1,Pain attacks without pain between them|1,Pain attacks with pain between them\"\n)\n\n\npdq_radiate_new_row &lt;- data.frame(\n  field_name = \"pdradiateregions_recoded\",\n  form_name = \"pain_detect_questionnaire_pdq\",\n  field_type = \"factor\",\n  select_choices_or_calculations = \"0,No Radiating pains|2,Radiating pains\"\n)\n\npdq_neuro_score_new_row &lt;- data.frame(\n  field_name = \"pd_neuro_total_score\",\n  form_name = \"pain_detect_questionnaire_pdq\",\n  field_type = \"numeric\",\n  field_label = \"Sum of pdqpaincourse_recoded,pdradiateregions_recoded and the imputed_pdq_score if all three scores are available\"\n)\n\n\n# adding rows\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!pdq_diff_new_row,\n    .after = match(\"pdradiateregions\", psy_soc_dict$field_name)\n  )\n\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!pdq_score_new_row,\n    .after = match(\"pdradiateregions\", psy_soc_dict$field_name)\n  )\n\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!pdq_course_new_row,\n    .after = match(\"pdradiateregions\", psy_soc_dict$field_name)\n  )\n\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!pdq_radiate_new_row,\n    .after = match(\"pdradiateregions\", psy_soc_dict$field_name)\n  )\n\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!pdq_neuro_score_new_row,\n    .after = match(\"pdradiateregions\", psy_soc_dict$field_name)\n  )\n\n\n\nD.2.11.5 Save:\nSave “pdq” and updated data dictionary as .csv files in the folder named “reformatted_pdq”\n\nwrite_csv(\n  pdq,\n  file = here::here(\n    \"data\",\n    \"Psychosocial\",\n    \"Reformatted\",\n    \"reformatted_pdq.csv\"\n  )\n)\nwrite_csv(\n  psy_soc_dict,\n  file = here::here(\n    \"data\",\n    \"Psychosocial\",\n    \"Reformatted\",\n    \"updated_psy_soc_dictionary.csv\"\n  )\n)\n\n\n\n\nD.2.12 Patient-Reported Outcomes Measurement Information System (PROMIS)\nPROMIS instruments are based on item response theory (IRT), where the responses to a set of items measure a latent trait(Cella et al., 2010). PROMIS instruments can be scored accurately using the HealthMeasures Scoring Service found here. The A2PCS uses the following PROMIS instruments:\n\nCella, D., Riley, W., Stone, A., Rothrock, N., Reeve, B., Yount, S., Amtmann, D., Bode, R., Buysse, D., Choi, S., Cook, K., DeVellis, R., DeWalt, D., Fries, J. F., Gershon, R., Hahn, E. A., Lai, J.-S., Pilkonis, P., Revicki, D., … Hays, R. (2010). The Patient-Reported Outcomes Measurement Information System (PROMIS) developed and tested its first wave of adult self-reported health outcome item banks: 20052008. Journal of Clinical Epidemiology, 63(11), 1179–1194. https://doi.org/10.1016/j.jclinepi.2010.04.011\n\n\n\nForm Name\n\n\n\n\nPROMIS SF v1.2 - Physical Function 8b\n\n\nPROMIS SF v1.0 - Sleep Disturbance 6a (Sleep I)\n\n\nPROMIS SF v1.0 - Fatigue 7a\n\n\nPROMIS SF v2.0 - Emotional Support 6a\n\n\nPROMIS SF v2.0 - Instrumental Support 6a\n\n\n\n\n\nD.2.13 Pain-Sleep Duration (Sleep II)\nThe Sleep II form measures the average number of hours and minutes of sleep each night during the past month(Buysse et al., 1989).\n\nBuysse, D. J., Reynolds, C. F., Monk, T. H., Berman, S. R., & Kupfer, D. J. (1989). The Pittsburgh sleep quality index: A new instrument for psychiatric practice and research. Psychiatry Research, 28(2), 193–213. https://doi.org/10.1016/0165-1781(89)90047-4\n\nD.2.13.1 Read in Data:\nRead in psy_soc1 dataframe and select field names from the Sleep Duration data and keep completed forms, we will call “sleep_dur”\n\nsleep_dur &lt;- applyFilter(\"sleep\", painsleep_duration_sleep_ii_complete) %&gt;%\n  retype()\n\n\n\nD.2.13.2 Outliers:\nMissing values for hours and minutes of sleep cannot be imputed. We will check the distribution of hours and minutes of sleep and check for outliers\n\npar(mfrow = c(1, 1))\nboxplot(sleep_dur$sleepnighthourmindurhrs, ylab = \"Sleep Hours\")\n\n\n\n\n\n\n\nboxplot(sleep_dur$sleepnighthourmindurmins, ylab = \"Sleep Minutes\")\n\n\n\n\n\n\n\n\nWe will create a variable “sleep_outlier_hours” and assign a value of 0 if “sleepnighthourmindurhrs” is missing and “sleepnighthourmindurmins” is available, 1 if “sleepnighthourmindurhrs” is less than or equal to 23 (within range) and 2 if “sleepnighthourmindurhrs” is more than 23, and 4 if both “sleepnighthourmindurhrs” and “sleepnighthourmindurmins” are missing. We will not assign a value for missing “sleepnighthourmindurmins” for this variable since most people report sleep in hours, unless both “sleepnighthourmindurhrs” and “sleepnighthourmindurmins” are missing.\nWe will also create a variable “sleep_outlier_mins” and assign a value of 1 if “sleepnighthourmindurmins” is less than or equal to 59 (within range) and 2 if “sleepnighthourmindurmins” is more than 59 (out of range), and 3 if “sleepnighthourmindurmins” is missing.\n\nsleep_dur &lt;- sleep_dur %&gt;%\n  mutate(\n    sleep_outlier_hours = case_when(\n      is.na(sleepnighthourmindurhrs) & !is.na(sleepnighthourmindurmins) ~ 0,\n      sleepnighthourmindurhrs &lt;= 23 ~ 1,\n      sleepnighthourmindurhrs &gt; 23 ~ 2,\n      is.na(sleepnighthourmindurhrs) & is.na(sleepnighthourmindurmins) ~ 4\n    )\n  ) %&gt;%\n  mutate(sleep_outlier_hours = as.factor(sleep_outlier_hours))\n\nsleep_dur &lt;- sleep_dur %&gt;%\n  mutate(\n    sleep_outlier_mins = case_when(\n      sleepnighthourmindurmins &lt;= 59 ~ 1,\n      sleepnighthourmindurmins &gt; 59 ~ 2,\n      TRUE ~ 3\n    )\n  ) %&gt;%\n  mutate(sleep_outlier_mins = as.factor(sleep_outlier_mins))\n\n\n\nD.2.13.3 New field name(s)\nAdd the field names “sleep_outlier_hours” and “sleep_outlier_mins” to the data dictionary\n\n# Create field names\nsleep_hour_new_row &lt;- data.frame(\n  field_name = \"sleep_outlier_hours\",\n  form_name = \"painsleep_duration_sleep_ii\",\n  field_type = \"factor\",\n  select_choices_or_calculations = \"0, if sleepnighthourmindurhrs is missing and sleepnighthourmindurmins is available|1 if sleepnighthourmindurhrs is less than or equal to 23 (within range)|2,if sleepnighthourmindurhrs is more than 23 | 4, if both sleepnighthourmindurhrs and sleepnighthourmindurmins are missing\"\n)\n\nsleep_mins_new_row &lt;- data.frame(\n  field_name = \"sleep_outlier_mins\",\n  form_name = \"painsleep_duration_sleep_ii\",\n  field_type = \"factor\",\n  select_choices_or_calculations = \"1 if sleepnighthourmindurmins is less than or equal to 59 (within range)|2, if sleepnighthourmindurmins is more than 59 (out of range)| 3 if sleepnighthourmindurmins is missing\"\n)\n\n\n# adding rows\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!sleep_hour_new_row,\n    .after = match(\"sleepnighthourmindur\", psy_soc_dict$field_name)\n  )\n\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!sleep_mins_new_row,\n    .after = match(\"sleepnighthourmindur\", psy_soc_dict$field_name)\n  )\n\n\n\nD.2.13.4 Save:\nSave “sleep_dur” and updated data dictionary as .csv files in the folder named “reformatted_sleep_dur”\n\nwrite_csv(\n  sleep_dur,\n  file = here::here(\n    \"data\",\n    \"Psychosocial\",\n    \"Reformatted\",\n    \"reformatted_sleep_dur.csv\"\n  )\n)\nwrite_csv(\n  psy_soc_dict,\n  file = here::here(\n    \"data\",\n    \"Psychosocial\",\n    \"Reformatted\",\n    \"updated_psy_soc_dictionary.csv\"\n  )\n)\n\n\n\n\nD.2.14 Pain Resilience Scale (PRS)\nPRS is a 14-item scale that measures resilience during intense or prolonged pain(Slepian et al., 2016).\nEach item is rated on a scale of 0 to 4, where 0 indicates “not at all” and 4 indicates “all the time.” The total score is calculated by summing up all 14 items, which can range from 0 to 56. Higher scores indicate greater pain related resilience. PRS also contains two sub scales(Slepian et al., 2016)\n\nBehavioral Perseverance = sum of items 1-5\nCognitive/Affective positivity = sum of items 6-14\n\n\nD.2.14.1 Read in Data:\nRead in psy_soc1 dataframe and select field names from the PRS forms and keep completed forms, we will call this “prs”\n\nprs &lt;- applyFilter(\"prs\", pain_resilience_scale_prs_complete)\n\n\n\nD.2.14.2 Behavioral Perseverance (items 1-5): Handling missing data and scoring\nMissing data pattern in Behavioral Perseverance.\n\ngg_miss_upset(\n  prs %&gt;%\n    select(\n      prsbackoutscl,\n      prsworkgoalsscl,\n      prspushthroughscl,\n      prscontworkscl,\n      prsstayactivescl\n    ),\n  nsets = n_var_miss(prs),\n  order.by = \"degree\",\n  point.size = 1,\n  line.size = 0.25,\n  text.scale = c(0.5)\n)\n\n\n\n\n\n\n\n\nMissing values can be imputed if the responses to 4 of 5 items are available (less than or equal to 29% missing data).\nThe missing responses are first replaced with the average score of the completed items and then a total score is calculated by adding the scores for all the seven items\nWe will create a variable “prs_bhv_diff” and assign a value of 1 if there is a response to more than or equal to 4 of 5 behavioral perseverance items and 0 if there is a response to less than 4 of 5 items.\n\nprs_bhv_five &lt;- c(\n  \"prsbackoutscl\",\n  \"prsworkgoalsscl\",\n  \"prspushthroughscl\",\n  \"prscontworkscl\",\n  \"prsstayactivescl\"\n)\n\n\nprs &lt;- prs %&gt;%\n  mutate(prs_bhv_not_na = rowSums(!is.na(select(., all_of(prs_bhv_five))))) %&gt;%\n  mutate(\n    prs_bhv_diff = case_when(\n      prs_bhv_not_na &gt;= 4 ~ 1,\n      TRUE ~ 0\n    )\n  ) %&gt;%\n  as_tibble() %&gt;%\n  mutate(prs_bhv_diff = as.factor(prs_bhv_diff))\n\nWe will now replace missing values with the rounded mean of remaining items if prs_bhv_diff = 1 and calculate a behavioral perseverance score by taking a sum of 5 associated item, we will call this “imputed_bhv_score.”\n\nprs &lt;- prs %&gt;%\n  mutate(\n    raw_bhv_score = rowSums(select(., all_of(prs_bhv_five)), na.rm = TRUE)\n  ) %&gt;%\n  mutate(\n    mean_bhv_prs = case_when(\n      prs_bhv_diff == 1 ~\n        round(rowMeans(select(., all_of(prs_bhv_five)), na.rm = TRUE))\n    )\n  ) %&gt;%\n  mutate(across(all_of(prs_bhv_five), ~ if_else(is.na(.), mean_bhv_prs, .))) %&gt;%\n  mutate(\n    imputed_bhv_score = case_when(\n      prs_bhv_diff == 1 ~ rowSums(select(., all_of(prs_bhv_five)), na.rm = TRUE)\n    )\n  )\n\nCheck missingness pattern after imputation\n\ngg_miss_upset(\n  prs %&gt;%\n    select(\n      prsbackoutscl,\n      prsworkgoalsscl,\n      prspushthroughscl,\n      prscontworkscl,\n      prsstayactivescl\n    ),\n  nsets = n_var_miss(prs),\n  order.by = \"degree\",\n  point.size = 1,\n  line.size = 0.25,\n  text.scale = c(0.5)\n)\n\n\n\n\n\n\n\n\ncheck distributions of behavioral perseverance scores before (raw_bhv_score) and after imputation (imputed_bhv_score)\n\nprs_bhv_plot &lt;- prs %&gt;%\n  filter(between(prs_bhv_not_na, 4, 5)) %&gt;%\n  select(guid, raw_bhv_score, imputed_bhv_score) %&gt;%\n  pivot_longer(\n    cols = c(\"raw_bhv_score\", \"imputed_bhv_score\"),\n    values_to = \"score\",\n    names_to = \"score_name\"\n  )\n\nggplot(prs_bhv_plot, aes(x = score_name, y = score, fill = score_name)) +\n  geom_violin(alpha = .25)\n\n\n\n\n\n\n\n\nRemove intermediate field names not needed\n\nprs &lt;- prs %&gt;%\n  select(-prs_bhv_not_na, -mean_bhv_prs, -raw_bhv_score)\n\n\n\nD.2.14.3 Cognitive/Affective positivity: Handling missing data and scoring\nMissing Data Pattern\n\ngg_miss_upset(\n  prs %&gt;%\n    select(\n      prsfocuspositivescl,\n      prsposattitudescl,\n      prsnotaffecthappyscl,\n      prsfindjoyscl,\n      prshopefulscl,\n      prsnotgetdownscl,\n      prsnotupsetscl,\n      prsavoidnegativescl,\n      prsstayrelaxscl\n    ),\n  nsets = n_var_miss(prs),\n  order.by = \"degree\",\n  point.size = 1,\n  line.size = 0.25,\n  text.scale = c(0.5)\n)\n\n\n\n\n\n\n\n\nMissing values can be imputed if the responses to 7 of 9 items are available (less than or equal to 29% missing data).\nThe missing responses are first replaced with the average score of the completed items and then a total score is calculated by adding the scores for all the seven items\nWe will create a variable “prs_cog_diff” and assign a value of 1 if there is a response to more than or equal to 7 of 9 Cognitive/Affective positivity items and 0 if there is a response to less than 7 of 9 items.\n\nprs_cog_nine &lt;- c(\n  \"prsfocuspositivescl\",\n  \"prsposattitudescl\",\n  \"prsnotaffecthappyscl\",\n  \"prsfindjoyscl\",\n  \"prshopefulscl\",\n  \"prsnotgetdownscl\",\n  \"prsnotupsetscl\",\n  \"prsavoidnegativescl\",\n  \"prsstayrelaxscl\"\n)\n\n\nprs &lt;- prs %&gt;%\n  mutate(prs_cog_not_na = rowSums(!is.na(.[, prs_cog_nine]))) %&gt;%\n  mutate(\n    prs_cog_diff = case_when(\n      prs_cog_not_na &gt;= 7 ~ 1,\n      TRUE ~ 0\n    )\n  ) %&gt;%\n  as_tibble() %&gt;%\n  mutate(prs_cog_diff = as.factor(prs_cog_diff))\n\nWe will now replace missing values with the rounded mean of remaining items if prs_cog_diff = 1 and calculate a Cognitive/Affective positivity score by taking a sum of 9 associated item, we will call this “imputed_prs_cog_score.”\n\nprs &lt;- prs %&gt;%\n  mutate(\n    raw_prs_cog_score = rowSums(select(., all_of(prs_cog_nine)), na.rm = TRUE)\n  ) %&gt;%\n  mutate(\n    mean_cog_prs = case_when(\n      prs_cog_diff == 1 ~\n        round(rowMeans(select(., all_of(prs_cog_nine)), na.rm = TRUE))\n    )\n  ) %&gt;%\n  mutate(across(all_of(prs_cog_nine), ~ if_else(is.na(.), mean_cog_prs, .))) %&gt;%\n  mutate(\n    imputed_prs_cog_score = case_when(\n      prs_cog_diff == 1 ~ rowSums(select(., all_of(prs_cog_nine)), na.rm = TRUE)\n    )\n  )\n\nCheck missingness pattern after imputation\n\ngg_miss_upset(\n  prs %&gt;%\n    select(\n      prsfocuspositivescl,\n      prsposattitudescl,\n      prsnotaffecthappyscl,\n      prsfindjoyscl,\n      prshopefulscl,\n      prsnotgetdownscl,\n      prsnotupsetscl,\n      prsavoidnegativescl,\n      prsstayrelaxscl\n    ),\n  nsets = n_var_miss(prs),\n  order.by = \"degree\",\n  point.size = 1,\n  line.size = 0.25,\n  text.scale = c(0.5)\n)\n\n\n\n\n\n\n\n\nCheck distributions Cognitive/Affective positivity scores before (raw_prs_cog_score) and after imputation (imputed_prs_cog_score)\n\nprs_cog_plot &lt;- prs %&gt;%\n  filter(between(prs_cog_not_na, 7, 9)) %&gt;%\n  select(guid, raw_prs_cog_score, imputed_prs_cog_score) %&gt;%\n  pivot_longer(\n    cols = c(\"raw_prs_cog_score\", \"imputed_prs_cog_score\"),\n    values_to = \"score\",\n    names_to = \"score_name\"\n  )\n\nggplot(prs_cog_plot, aes(x = score_name, y = score, fill = score_name)) +\n  geom_violin(alpha = .25)\n\n\n\n\n\n\n\n\nRemove intermediate field names not needed\n\nprs &lt;- prs %&gt;%\n  select(-prs_cog_not_na, -mean_cog_prs, -raw_prs_cog_score)\n\n\n\nD.2.14.4 Total PRS Score: Handling missing data and scoring\nMissing data pattern in prs.\n\ngg_miss_upset(\n  prs %&gt;%\n    select(\n      prsbackoutscl,\n      prsworkgoalsscl,\n      prspushthroughscl,\n      prscontworkscl,\n      prsstayactivescl,\n      prsfocuspositivescl,\n      prsposattitudescl,\n      prsnotaffecthappyscl,\n      prsfindjoyscl,\n      prshopefulscl,\n      prsnotgetdownscl,\n      prsnotupsetscl,\n      prsavoidnegativescl,\n      prsstayrelaxscl\n    ),\n  nsets = n_var_miss(prs),\n  order.by = \"degree\",\n  point.size = 1,\n  line.size = 0.25,\n  text.scale = c(0.5)\n)\n\n\n\n\n\n\n\n\nHandling missing data for total PRS score:\nMissing values can be imputed if the responses to 10 of 14 items are available (less than or equal to 29% missing data).\nSince the correlation between Behavioral Perseverance and Cognitive/Affective positivity is 0.76(Slepian et al., 2016) average score of the completed items can be used to impute missing values.\n\nSlepian, P. M., Ankawi, B., Himawan, L. K., & France, C. R. (2016). Development and Initial Validation of the Pain Resilience Scale. The Journal of Pain, 17(4), 462–472. https://doi.org/10.1016/j.jpain.2015.12.010\n\nThe missing responses are first replaced with the average score of the completed items and then a total score is calculated by adding the scores for all the seven items\nWe will create a variable “prs_diff” and assign a value of 1 if there is a response to more than or equal to 10 of 14 PRS items and 0 if there is a response to less than 10 of 14 PRS items.\n\nprs_fourteen &lt;- c(\n  \"prsbackoutscl\",\n  \"prsworkgoalsscl\",\n  \"prspushthroughscl\",\n  \"prscontworkscl\",\n  \"prsstayactivescl\",\n  \"prsfocuspositivescl\",\n  \"prsposattitudescl\",\n  \"prsnotaffecthappyscl\",\n  \"prsfindjoyscl\",\n  \"prshopefulscl\",\n  \"prsnotgetdownscl\",\n  \"prsnotupsetscl\",\n  \"prsavoidnegativescl\",\n  \"prsstayrelaxscl\"\n)\n\n\nprs &lt;- prs %&gt;%\n  mutate(prs_not_na = rowSums(!is.na(.[, prs_fourteen]))) %&gt;%\n  mutate(\n    prs_diff = case_when(\n      prs_not_na &gt;= 10 ~ 1,\n      TRUE ~ 0\n    )\n  ) %&gt;%\n  as_tibble() %&gt;%\n  mutate(prs_diff = as.factor(prs_diff))\n\nWe will now replace missing values with the rounded mean of remaining items if prs_diff = 1 and calculate a total score by taking a sum of all fourteen items, we will call this “imputed_prs_score.”\n\nprs &lt;- prs %&gt;%\n  mutate(\n    raw_prs_score = rowSums(select(., all_of(prs_fourteen)), na.rm = TRUE)\n  ) %&gt;%\n  mutate(\n    mean_prs = case_when(\n      prs_diff == 1 ~\n        round(rowMeans(select(., all_of(prs_fourteen)), na.rm = TRUE))\n    )\n  ) %&gt;%\n  mutate(across(all_of(prs_fourteen), ~ if_else(is.na(.), mean_prs, .))) %&gt;%\n  mutate(\n    imputed_prs_score = case_when(\n      prs_diff == 1 ~ rowSums(select(., all_of(prs_fourteen)), na.rm = TRUE)\n    )\n  )\n\nCheck missingness pattern after imputation\n\ngg_miss_upset(\n  prs %&gt;%\n    select(\n      -ends_with(\"score\"),\n      -mean_prs,\n      prs_not_na,\n      -prs_diff,\n      -pain_resilience_scale_prs_complete\n    ),\n  nsets = n_var_miss(prs),\n  order.by = \"degree\",\n  point.size = 1,\n  line.size = 0.25,\n  text.scale = c(0.5)\n)\n\n\n\n\n\n\n\n\ncheck distributions of total PRS scores before (raw_prs_score) and after imputation (imputed_prs_score)\n\nprs_plot &lt;- prs %&gt;%\n  filter(between(prs_not_na, 10, 14)) %&gt;%\n  select(guid, raw_prs_score, imputed_prs_score) %&gt;%\n  pivot_longer(\n    cols = c(\"raw_prs_score\", \"imputed_prs_score\"),\n    values_to = \"score\",\n    names_to = \"score_name\"\n  )\n\nggplot(prs_plot, aes(x = score_name, y = score, fill = score_name)) +\n  geom_violin(alpha = .25)\n\n\n\n\n\n\n\n\nRemove intermediate field names not needed\n\nprs &lt;- prs %&gt;%\n  select(-prs_not_na, -mean_prs, -raw_prs_score)\n\n\n\nD.2.14.5 New field name(s)\nAdd the following field names to the data dictionary:\n“prs_diff”,“prs_cog_diff”,“prs_bhv_diff”,“imputed_bhv_score”,“imputed_prs_cog_score”,“imputed_prs_score”\n\n# Create field names\nprs_diff_new_row &lt;- data.frame(\n  field_name = \"prs_diff\",\n  form_name = \"pain_resilience_scale_prs\",\n  field_type = \"factor\",\n  select_choices_or_calculations = \"1,if there is a response to more than or equal to 10 of 14 PRS items | 0, if there is a response to less than 10 of 14 items\"\n)\n\nprs_cog_diff_new_row &lt;- data.frame(\n  field_name = \"prs_cog_diff\",\n  form_name = \"pain_resilience_scale_prs\",\n  field_type = \"factor\",\n  select_choices_or_calculations = \"1, if there is a response to more than or equal to 7 of 9 Cognitive/Affective positivity related items | 0, if there is a response to less than 7 of 9 items\"\n)\n\nprs_bhv_diff_new_row &lt;- data.frame(\n  field_name = \"prs_bhv_diff\",\n  form_name = \"pain_resilience_scale_prs\",\n  field_type = \"factor\",\n  select_choices_or_calculations = \"1,If there is a response to more than or equal to 4 of 5 behavioral perseverance related items| 0, if there is a response to less than 4 of 5 items\"\n)\n\n\nprs_score_new_row &lt;- data.frame(\n  field_name = \"imputed_prs_score\",\n  form_name = \"pain_resilience_scale_prs\",\n  field_type = \"numeric\",\n  field_label = \"sum of all  fourteen PRS items. Replacing missing values with the rounded mean of remaining items if prs_diff = 1\"\n)\n\nprs_cog_score_new_row &lt;- data.frame(\n  field_name = \"imputed_prs_cog_score\",\n  form_name = \"pain_resilience_scale_prs\",\n  field_type = \"numeric\",\n  field_label = \"sum of all  nine Cognitive/Affective positivity items. Replacing missing values with the rounded mean of remaining items if prs_cog_diff = 1\"\n)\n\nprs_bhv_score_new_row &lt;- data.frame(\n  field_name = \"imputed_bhv_score\",\n  form_name = \"pain_resilience_scale_prs\",\n  field_type = \"numeric\",\n  field_label = \"sum of five behavioral perseverance items. Replacing missing values with the rounded mean of remaining items if prs_bhv_diff = 1\"\n)\n\n\n# adding rows\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!prs_diff_new_row,\n    .after = match(\"prscognitivescore\", psy_soc_dict$field_name)\n  )\n\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!prs_cog_diff_new_row,\n    .after = match(\"prscognitivescore\", psy_soc_dict$field_name)\n  )\n\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!prs_bhv_diff_new_row,\n    .after = match(\"prscognitivescore\", psy_soc_dict$field_name)\n  )\n\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!prs_score_new_row,\n    .after = match(\"prscognitivescore\", psy_soc_dict$field_name)\n  )\n\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!prs_cog_score_new_row,\n    .after = match(\"prscognitivescore\", psy_soc_dict$field_name)\n  )\n\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!prs_bhv_score_new_row,\n    .after = match(\"prscognitivescore\", psy_soc_dict$field_name)\n  )\n\n\n\nD.2.14.6 Save:\nSave “prs” and updated data dictionary as .csv files in the folder named “reformatted_prs”\n\nwrite_csv(\n  prs,\n  file = here::here(\n    \"data\",\n    \"Psychosocial\",\n    \"Reformatted\",\n    \"reformatted_prs.csv\"\n  )\n)\nwrite_csv(\n  psy_soc_dict,\n  file = here::here(\n    \"data\",\n    \"Psychosocial\",\n    \"Reformatted\",\n    \"updated_psy_soc_dictionary.csv\"\n  )\n)\n\n\n\n\nD.2.15 Multidimensional Inventory of Subjective Cognitive Impairment v1.0 (MISCI)\nMultidimensional Inventory of Subjective Cognitive Impairment (MISCI) is used to evaluate cognitive function in Fibromyalgia patients. The MISCI comprises ten items based on a Likert scale ranging from 1-5. The initial six items evaluate perceived cognitive abilities and are positively phrased, while the remaining four items assess cognitive difficulties and are negatively phrased. Therefore, items 7-10 should be reverse-coded before being added to the responses of the other items to calculate the total score. The total score can range from 10-50, where higher scores indicate better perceived cognitive functioning (Kratz et al., 2015).\n\nKratz, A. L., Schilling, S. G., Goesling, J., & Williams, D. A. (2015). Development and Initial Validation of a Brief Self-Report Measure of Cognitive Dysfunction in Fibromyalgia. The Journal of Pain, 16(6), 527–536. https://doi.org/10.1016/j.jpain.2015.02.008\n\nD.2.15.1 Read in Data:\nRead in psy_soc1 dataframe and select field names from the MISCI form and keep completed forms, we will call “misci”\n\nmisci &lt;- applyFilter(\n  \"misci\",\n  multidimensional_inventory_of_subjective_cognitive_complete\n)\n\nWe will reverse code the last four items which assess cognitive difficulties. For example, cognitive difficulty related question such as “trouble planning out steps of a task” is rated on a scale of 1 to 5 where 1 is “never” and 5 is “very often”. We will reverse code this to indicate 5 as “never” and 1 as “very often”. The structure will look as follows:\n\n\n\nOriginal\nReverse coded\n\n\n\n\n1\n5\n\n\n2\n4\n\n\n3\n3\n\n\n4\n2\n\n\n5\n1\n\n\n\nReverse code last 4 items: We can accomplish this by subtracting the original values from 6.\n\nmisci &lt;- misci %&gt;%\n  mutate(miscishiftactivscl_reverse = 6 - miscishiftactivscl) %&gt;%\n  mutate(misciplanningscl_reverse = 6 - misciplanningscl) %&gt;%\n  mutate(misciexpressscl_reverse = 6 - misciexpressscl) %&gt;%\n  mutate(miscirightwordsscl_reverse = 6 - miscirightwordsscl)\n\n\n\nD.2.15.2 Missing Data\nMissing data pattern in “misci”.\n\nmisci_ten &lt;- c(\n  \"miscithinkclrscl\",\n  \"miscimindsharpscl\",\n  \"miscirememberscl\",\n  \"miscilearnscl\",\n  \"misciconcentratescl\",\n  \"misciattentionscl\",\n  \"miscishiftactivscl_reverse\",\n  \"misciplanningscl_reverse\",\n  \"misciexpressscl_reverse\",\n  \"miscirightwordsscl_reverse\"\n)\n\ngg_miss_upset(\n  misci %&gt;%\n    select(all_of(misci_ten)),\n  nsets = n_var_miss(misci),\n  order.by = \"degree\",\n  point.size = 1,\n  line.size = 0.25,\n  text.scale = c(0.5)\n)\n\n\n\n\n\n\n\n\nMissing values can be imputed if the responses to 8 of 10 items are available (less than or equal to 29% missing data).\nWe will create a variable “misci_diff” and assign a value of 1 if there is a response to more than or equal to 8 of 10 items and 0 if there is a response to less than 8 of 10 items. The missing responses are first replaced with the average score of the completed items and then a total score is calculated by adding the scores for all the ten items.\n\nmisci &lt;- misci %&gt;%\n  mutate(misci_not_na = rowSums(!is.na(.[, misci_ten]))) %&gt;%\n  mutate(\n    misci_diff = case_when(\n      misci_not_na &gt;= 8 ~ 1,\n      TRUE ~ 0\n    )\n  ) %&gt;%\n  as_tibble() %&gt;%\n  mutate(misci_diff = as.factor(misci_diff))\n\nWe will now replace missing values with the rounded mean of remaining items if misci_diff = 1 and calculate the total score by taking a sum of all ten items, we will call this “imputed_misci_score.”\n\nmisci &lt;- misci %&gt;%\n  mutate(\n    raw_misci_score = rowSums(select(., all_of(misci_ten)), na.rm = TRUE)\n  ) %&gt;%\n  mutate(\n    mean_misci = case_when(\n      misci_diff == 1 ~\n        round(rowMeans(select(., all_of(misci_ten)), na.rm = TRUE))\n    )\n  ) %&gt;%\n  mutate(across(all_of(misci_ten), ~ if_else(is.na(.), mean_misci, .))) %&gt;%\n  mutate(\n    imputed_misci_score = case_when(\n      misci_diff == 1 ~ rowSums(select(., all_of(misci_ten)), na.rm = TRUE)\n    )\n  )\n\nCheck missingness pattern after imputation\n\ngg_miss_upset(\n  misci %&gt;%\n    select(all_of(misci_ten)),\n  nsets = n_var_miss(misci),\n  order.by = \"degree\",\n  point.size = 1,\n  line.size = 0.25,\n  text.scale = c(0.5)\n)\n\n\n\n\n\n\n\n\ncheck distributions of misci total scores before (raw_misci_score) and after imputation (imputed_misci_score)\n\nmisci_plot &lt;- misci %&gt;%\n  filter(misci_diff == 1) %&gt;%\n  select(guid, raw_misci_score, imputed_misci_score) %&gt;%\n  pivot_longer(\n    cols = c(\"raw_misci_score\", \"imputed_misci_score\"),\n    values_to = \"score\",\n    names_to = \"score_name\"\n  )\n\nggplot(misci_plot, aes(x = score_name, y = score, fill = score_name)) +\n  geom_violin(alpha = .25)\n\n\n\n\n\n\n\n\nRemove intermediate field names not needed\n\nmisci &lt;- misci %&gt;%\n  select(-misci_not_na, -mean_misci, -raw_misci_score)\n\n\n\nD.2.15.3 New field name(s)\nAdd the following field names to the data dictionary:\n“misci_diff”, “imputed_misci_score”, “miscishiftactivscl_reverse”, “misciplanningscl_reverse”, “misciexpressscl_reverse” and “miscirightwordsscl_reverse”\n\n# Create field names\n\nmisci_diff_new_row &lt;- data.frame(\n  field_name = \"misci_diff\",\n  form_name = \"multidimensional_inventory_of_subjective_cognitive\",\n  field_type = \"factor\",\n  select_choices_or_calculations = \"1, if there is a response to more than or equal to 8 of 10 MISCI items | 0, if there is a response to less than 8 of 10 items\"\n)\n\n\nmisci_score_new_row &lt;- data.frame(\n  field_name = \"imputed_misci_score\",\n  form_name = \"multidimensional_inventory_of_subjective_cognitive\",\n  field_type = \"numeric\",\n  field_label = \"sum of all ten misci items. Replacing missing values with the rounded mean of remaining items if misci_diff = 1\"\n)\n\nmiscishiftactivscl_reverse_new_row &lt;- data.frame(\n  field_name = \"miscishiftactivscl_reverse\",\n  form_name = \"multidimensional_inventory_of_subjective_cognitive\",\n  field_type = \"numeric\",\n  field_label = \"reverse coded miscishiftactivscl\"\n)\n\nmisciplanningscl_reverse_new_row &lt;- data.frame(\n  field_name = \"misciplanningscl_reverse\",\n  form_name = \"multidimensional_inventory_of_subjective_cognitive\",\n  field_type = \"numeric\",\n  field_label = \"reverse coded misciplanningscl\"\n)\n\nmisciexpressscl_reverse_new_row &lt;- data.frame(\n  field_name = \"misciexpressscl_reverse\",\n  form_name = \"multidimensional_inventory_of_subjective_cognitive\",\n  field_type = \"numeric\",\n  field_label = \"reverse coded misciexpressscl\"\n)\n\nmiscirightwordsscl_reverse_new_row &lt;- data.frame(\n  field_name = \"miscirightwordsscl_reverse\",\n  form_name = \"multidimensional_inventory_of_subjective_cognitive\",\n  field_type = \"numeric\",\n  field_label = \"reverse coded miscirightwordsscl\"\n)\n\n\n# adding rows\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!misci_diff_new_row,\n    .after = match(\"miscitotalscore\", psy_soc_dict$field_name)\n  )\n\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!misci_score_new_row,\n    .after = match(\"miscitotalscore\", psy_soc_dict$field_name)\n  )\n\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!miscishiftactivscl_reverse_new_row,\n    .after = match(\"miscitotalscore\", psy_soc_dict$field_name)\n  )\n\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!misciplanningscl_reverse_new_row,\n    .after = match(\"miscitotalscore\", psy_soc_dict$field_name)\n  )\n\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!misciexpressscl_reverse_new_row,\n    .after = match(\"miscitotalscore\", psy_soc_dict$field_name)\n  )\n\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!miscirightwordsscl_reverse_new_row,\n    .after = match(\"miscitotalscore\", psy_soc_dict$field_name)\n  )\n\n\n\nD.2.15.4 Save:\nSave “misci” and updated data dictionary as .csv files in the folder named “reformatted_misci”\n\nwrite_csv(\n  misci,\n  here(\"data\", \"Psychosocial\", \"Reformatted\", \"reformatted_misci.csv\")\n)\nwrite_csv(\n  psy_soc_dict,\n  file = here::here(\n    \"data\",\n    \"Psychosocial\",\n    \"Reformatted\",\n    \"updated_psy_soc_dictionary.csv\"\n  )\n)\n\n\n\n\nD.2.16 The Big Five Inventory (BFI-2-S)\nThe BFI-2-S is is used to evaluate five personality domains and 15 specific facet traits within the five domains. Altogether, the BFI-2-S comprises thirty items based on a Likert scale ranging from 1-5, where 1 is “disagree strongly” and 5 is “agree strongly”. Some items are negatively phrased and should be reverse coded for scoring (Soto & John, 2017).\n\nSoto, C. J., & John, O. P. (2017). Short and extra-short forms of the Big Five Inventory2: The BFI-2-S and BFI-2-XS. Journal of Research in Personality, 68, 69–81. https://doi.org/10.1016/j.jrp.2017.02.004\nFollowing table shows the five domains and the specific facet traits:\n\n\n\n\n\n\n\nDomains (bold) and domain specific facets\nItems (R: Items should be reverse coded)\n\n\n\n\nExtraversion\n\n\n\nSociability\n1R, 16\n\n\nAssertiveness\n6, 21R\n\n\nEnergy Level\n11, 26R\n\n\nAgreeableness\n\n\n\nCompassion\n2, 17R\n\n\nRespectfulness\n7R, 22\n\n\nTrust\n12, 27R\n\n\nConscientiousness\n\n\n\nOrganization\n3R, 18\n\n\nProductiveness\n8R, 23\n\n\nResponsibility\n13, 28R\n\n\nNegative Emotionality\n\n\n\nAnxiety\n4, 19R\n\n\nDepression\n9, 24R\n\n\nEmotional Volatility\n14R, 29\n\n\nOpen-Mindedness\n\n\n\nAesthetic Sensitivity\n5, 20R\n\n\nIntellectual Curiosity\n10R, 25\n\n\nCreative Imagination\n15, 30R\n\n\n\n\nD.2.16.1 Read in Data:\nRead in psy_soc1 dataframe and select field names from the BFI-2-S form and keep completed forms, we will call this “bfi”\n\nbfi &lt;- applyFilter(\"bfi\", the_big_five_inventory_bfi2s_complete)\n\nWe will reverse code the items denoted by “R” in the table. For example, Sociability related question such as “Tends to be quiet” is rated on a scale of 1 to 5 where 1 is “Disagree strongly” and 5 is “Agree strongly”. We will reverse code this to indicate 5 as “Disagree strongly” and 1 as “Agree strongly”. The structure will look as follows:\n\n\n\nOriginal\nReverse coded\n\n\n\n\n1\n5\n\n\n2\n4\n\n\n3\n3\n\n\n4\n2\n\n\n5\n1\n\n\n\nReverse code the items denoted by “R”: We can accomplish this by subtracting the original values from 6.\n\nbfi &lt;- bfi %&gt;%\n  mutate(\n    across(\n      .cols = c(\n        bfi2squietscl,\n        bfi2stakechargescl,\n        bfi2slessactivescl,\n        bfi2suncaringscl,\n        bfi2srudescl,\n        bfi2sfaultwithothersscl,\n        bfi2sdisorganizedscl,\n        bfi2sdifficultstartscl,\n        bfi2scarelessscl,\n        bfi2srelaxedscl,\n        bfi2ssecurescl,\n        bfi2sstableemotionscl,\n        bfi2sfewartinterestscl,\n        bfi2sllittleinterestscl,\n        bfi2slittlecreativityscl\n      ),\n      .fns = \\(x) 6 - x,\n      .names = \"{.col}_reverse\"\n    )\n  )\n\n# credit: P.Sadil\n\n\n\nD.2.16.2 Extraversion\n\nD.2.16.2.1 Missing Data\nMissing data pattern in Extraversion domain specific items.\n\nextra_vector &lt;- c(\n  \"bfi2squietscl_reverse\",\n  \"bfi2soutgoingscl\",\n  \"bfi2sdominantscl\",\n  \"bfi2stakechargescl_reverse\",\n  \"bfi2senergyscl\",\n  \"bfi2slessactivescl_reverse\"\n)\n\ngg_miss_upset(\n  bfi %&gt;%\n    select(all_of(extra_vector)),\n  nsets = n_var_miss(bfi),\n  order.by = \"degree\",\n  point.size = 1,\n  line.size = 0.25,\n  text.scale = c(0.5)\n)\n\n\n\n\n\n\n\n\nScale score is calculated by taking the mean of the domain specific items. We will calculate raw scale score (without imputed items)\n\nbfi &lt;- bfi %&gt;%\n  mutate(\n    raw_extraversion_score = round(rowMeans(\n      select(., all_of(extra_vector)),\n      na.rm = TRUE\n    ))\n  )\n\nFor missing items, response to the closest item can be used. For instance if “Tends to be quiet” is missing, the value from “Is outgoing, sociable” can be used to replace the missing value or vice versa Berkeley personality lab.\nReplace missing items with the closest matching item.\n\nbfi &lt;- bfi %&gt;%\n  mutate(\n    bfi2squietscl_reverse = ifelse(\n      is.na(bfi2squietscl_reverse),\n      bfi2soutgoingscl,\n      bfi2squietscl_reverse\n    ),\n    bfi2soutgoingscl = ifelse(\n      is.na(bfi2soutgoingscl),\n      bfi2squietscl_reverse,\n      bfi2soutgoingscl\n    )\n  ) %&gt;%\n  mutate(\n    bfi2sdominantscl = ifelse(\n      is.na(bfi2sdominantscl),\n      bfi2stakechargescl_reverse,\n      bfi2sdominantscl\n    ),\n    bfi2stakechargescl_reverse = ifelse(\n      is.na(bfi2stakechargescl_reverse),\n      bfi2sdominantscl,\n      bfi2stakechargescl_reverse\n    )\n  ) %&gt;%\n  mutate(\n    bfi2senergyscl = ifelse(\n      is.na(bfi2senergyscl),\n      bfi2slessactivescl_reverse,\n      bfi2senergyscl\n    ),\n    bfi2slessactivescl_reverse = ifelse(\n      is.na(bfi2slessactivescl_reverse),\n      bfi2senergyscl,\n      bfi2slessactivescl_reverse\n    )\n  )\n\nCheck missingness pattern after imputation\n\ngg_miss_upset(\n  bfi %&gt;%\n    select(all_of(extra_vector)),\n  nsets = n_var_miss(bfi),\n  order.by = \"degree\",\n  point.size = 1,\n  line.size = 0.25,\n  text.scale = c(0.5)\n)\n\n\n\n\n\n\n\n\nWe will now calculate the imputed scale score\n\nbfi &lt;- bfi %&gt;%\n  mutate(\n    imputed_extraversion_score = round(rowMeans(\n      select(., all_of(extra_vector)),\n      na.rm = TRUE\n    ))\n  )\n\ncheck distributions of extraversion scores before (raw_extraversion_score) and after imputation (imputed_extraversion_score)\n\nbfi_ext_plot &lt;- bfi %&gt;%\n  select(guid, raw_extraversion_score, imputed_extraversion_score) %&gt;%\n  pivot_longer(\n    cols = c(\"raw_extraversion_score\", \"imputed_extraversion_score\"),\n    values_to = \"score\",\n    names_to = \"score_name\"\n  ) %&gt;%\n  mutate(score_name = as.factor(score_name)) %&gt;%\n  mutate(score = as.factor(score)) %&gt;%\n  group_by(score_name, score) %&gt;%\n  count() %&gt;%\n  ungroup() %&gt;%\n  rename(score_count = n)\n\nggplot(bfi_ext_plot, aes(x = score, y = score_count, fill = score_name)) +\n  geom_bar(position = \"dodge\", stat = \"identity\") +\n  theme(axis.text.x = element_text(angle = 70, vjust = 0.5, hjust = 1))\n\n\n\n\n\n\n\n\nRemove intermediate field names not needed\n\nbfi &lt;- bfi %&gt;%\n  select(-raw_extraversion_score)\n\n\n\n\nD.2.16.3 Agreeableness\n\nD.2.16.3.1 Missing Data\nMissing data pattern in agreeableness domain specific items.\n\nagree_vector &lt;- c(\n  \"bfi2scompassionatescl\",\n  \"bfi2suncaringscl_reverse\",\n  \"bfi2srudescl_reverse\",\n  \"bfi2srespectfulscl\",\n  \"bfi2sassumingbestscl\",\n  \"bfi2sfaultwithothersscl_reverse\"\n)\n\ngg_miss_upset(\n  bfi %&gt;%\n    select(all_of(agree_vector)),\n  nsets = n_var_miss(bfi),\n  order.by = \"degree\",\n  point.size = 1,\n  line.size = 0.25,\n  text.scale = c(0.5)\n)\n\n\n\n\n\n\n\n\nScale score is calculated by taking the mean of the domain specific items. We will calculate raw scale score (without imputed items)\n\nbfi &lt;- bfi %&gt;%\n  mutate(\n    raw_agreeableness_score = round(rowMeans(\n      select(., all_of(agree_vector)),\n      na.rm = TRUE\n    ))\n  )\n\nFor missing items, response to the closest item can be used Berkeley personality lab.\nReplace missing items with the closest matching item.\n\nbfi &lt;- bfi %&gt;%\n  mutate(\n    bfi2scompassionatescl = ifelse(\n      is.na(bfi2scompassionatescl),\n      bfi2suncaringscl_reverse,\n      bfi2scompassionatescl\n    ),\n    bfi2suncaringscl_reverse = ifelse(\n      is.na(bfi2suncaringscl_reverse),\n      bfi2scompassionatescl,\n      bfi2suncaringscl_reverse\n    )\n  ) %&gt;%\n  mutate(\n    bfi2srudescl_reverse = ifelse(\n      is.na(bfi2srudescl_reverse),\n      bfi2srespectfulscl,\n      bfi2srudescl_reverse\n    ),\n    bfi2srespectfulscl = ifelse(\n      is.na(bfi2srespectfulscl),\n      bfi2srudescl_reverse,\n      bfi2srespectfulscl\n    )\n  ) %&gt;%\n  mutate(\n    bfi2sassumingbestscl = ifelse(\n      is.na(bfi2sassumingbestscl),\n      bfi2sfaultwithothersscl_reverse,\n      bfi2sassumingbestscl\n    ),\n    bfi2sfaultwithothersscl_reverse = ifelse(\n      is.na(bfi2sfaultwithothersscl_reverse),\n      bfi2sassumingbestscl,\n      bfi2sfaultwithothersscl_reverse\n    )\n  )\n\nCheck missingness pattern after imputation\n\ngg_miss_upset(\n  bfi %&gt;%\n    select(all_of(agree_vector)),\n  nsets = n_var_miss(bfi),\n  order.by = \"degree\",\n  point.size = 1,\n  line.size = 0.25,\n  text.scale = c(0.5)\n)\n\n\n\n\n\n\n\n\nWe will now calculate the imputed scale score\n\nbfi &lt;- bfi %&gt;%\n  mutate(\n    imputed_agreeableness_score = round(rowMeans(\n      select(., all_of(agree_vector)),\n      na.rm = TRUE\n    ))\n  )\n\ncheck distributions of agreeableness scores before (raw_agreeableness_score) and after imputation (imputed_agreeableness_score)\n\nbfi_agree_plot &lt;- bfi %&gt;%\n  select(guid, raw_agreeableness_score, imputed_agreeableness_score) %&gt;%\n  pivot_longer(\n    cols = c(\"raw_agreeableness_score\", \"imputed_agreeableness_score\"),\n    values_to = \"score\",\n    names_to = \"score_name\"\n  ) %&gt;%\n  mutate(score_name = as.factor(score_name)) %&gt;%\n  mutate(score = as.factor(score)) %&gt;%\n  group_by(score_name, score) %&gt;%\n  count() %&gt;%\n  ungroup() %&gt;%\n  rename(score_count = n)\n\nggplot(bfi_agree_plot, aes(x = score, y = score_count, fill = score_name)) +\n  geom_bar(position = \"dodge\", stat = \"identity\") +\n  theme(axis.text.x = element_text(angle = 70, vjust = 0.5, hjust = 1))\n\n\n\n\n\n\n\n\nRemove intermediate field names not needed\n\nbfi &lt;- bfi %&gt;%\n  select(-raw_agreeableness_score)\n\n\n\n\nD.2.16.4 Conscientiousness\n\nD.2.16.4.1 Missing Data\nMissing data pattern in conscientiousness domain specific items.\n\ncons_vector &lt;- c(\n  \"bfi2sdisorganizedscl_reverse\",\n  \"bfi2stidyscl\",\n  \"bfi2sdifficultstartscl_reverse\",\n  \"bfi2spersistentscl\",\n  \"bfi2sreliablescl\",\n  \"bfi2scarelessscl_reverse\"\n)\n\ngg_miss_upset(\n  bfi %&gt;%\n    select(all_of(cons_vector)),\n  nsets = n_var_miss(bfi),\n  order.by = \"degree\",\n  point.size = 1,\n  line.size = 0.25,\n  text.scale = c(0.5)\n)\n\n\n\n\n\n\n\n\nScale score is calculated by taking the mean of the domain specific items. We will calculate raw scale score (without imputed items)\n\nbfi &lt;- bfi %&gt;%\n  mutate(\n    raw_cons_score = round(rowMeans(\n      select(., all_of(cons_vector)),\n      na.rm = TRUE\n    ))\n  )\n\nFor missing items response to the closest item can be used.Berkeley personality lab.\nReplace missing items with the closest matching item.\n\nbfi &lt;- bfi %&gt;%\n  mutate(\n    bfi2sdisorganizedscl_reverse = ifelse(\n      is.na(bfi2sdisorganizedscl_reverse),\n      bfi2stidyscl,\n      bfi2sdisorganizedscl_reverse\n    ),\n    bfi2stidyscl = ifelse(\n      is.na(bfi2stidyscl),\n      bfi2sdisorganizedscl_reverse,\n      bfi2stidyscl\n    )\n  ) %&gt;%\n  mutate(\n    bfi2sdifficultstartscl_reverse = ifelse(\n      is.na(bfi2sdifficultstartscl_reverse),\n      bfi2spersistentscl,\n      bfi2sdifficultstartscl_reverse\n    ),\n    bfi2spersistentscl = ifelse(\n      is.na(bfi2spersistentscl),\n      bfi2sdifficultstartscl_reverse,\n      bfi2spersistentscl\n    )\n  ) %&gt;%\n  mutate(\n    bfi2sreliablescl = ifelse(\n      is.na(bfi2sreliablescl),\n      bfi2scarelessscl_reverse,\n      bfi2sreliablescl\n    ),\n    bfi2scarelessscl_reverse = ifelse(\n      is.na(bfi2scarelessscl_reverse),\n      bfi2sreliablescl,\n      bfi2scarelessscl_reverse\n    )\n  )\n\nCheck missingness pattern after imputation\n\ngg_miss_upset(\n  bfi %&gt;%\n    select(all_of(cons_vector)),\n  nsets = n_var_miss(bfi),\n  order.by = \"degree\",\n  point.size = 1,\n  line.size = 0.25,\n  text.scale = c(0.5)\n)\n\n\n\n\n\n\n\n\nWe will now calculate the imputed scale score\n\nbfi &lt;- bfi %&gt;%\n  mutate(\n    imputed_cons_score = round(rowMeans(\n      select(., all_of(cons_vector)),\n      na.rm = TRUE\n    ))\n  )\n\nCheck distributions of conscientiousness scores before (raw_cons_score) and after imputation (imputed_cons_score)\n\nbfi_cons_plot &lt;- bfi %&gt;%\n  select(guid, raw_cons_score, imputed_cons_score) %&gt;%\n  pivot_longer(\n    cols = c(\"raw_cons_score\", \"imputed_cons_score\"),\n    values_to = \"score\",\n    names_to = \"score_name\"\n  ) %&gt;%\n  mutate(score_name = as.factor(score_name)) %&gt;%\n  mutate(score = as.factor(score)) %&gt;%\n  group_by(score_name, score) %&gt;%\n  count() %&gt;%\n  ungroup() %&gt;%\n  rename(score_count = n)\n\nggplot(bfi_cons_plot, aes(x = score, y = score_count, fill = score_name)) +\n  geom_bar(position = \"dodge\", stat = \"identity\") +\n  theme(axis.text.x = element_text(angle = 70, vjust = 0.5, hjust = 1))\n\n\n\n\n\n\n\n\nRemove intermediate field names not needed\n\nbfi &lt;- bfi %&gt;%\n  select(-raw_cons_score)\n\n\n\n\nD.2.16.5 Negative Emotionality\n\nD.2.16.5.1 Missing Data\nMissing data pattern in negative emotionality domain specific items.\n\nemotion_vector &lt;- c(\n  \"bfi2sworriesscl\",\n  \"bfi2srelaxedscl_reverse\",\n  \"bfi2sdepressedscl\",\n  \"bfi2ssecurescl_reverse\",\n  \"bfi2stemperamentalscl\",\n  \"bfi2sstableemotionscl_reverse\"\n)\n\ngg_miss_upset(\n  bfi %&gt;%\n    select(all_of(emotion_vector)),\n  nsets = n_var_miss(bfi),\n  order.by = \"degree\",\n  point.size = 1,\n  line.size = 0.25,\n  text.scale = c(0.5)\n)\n\n\n\n\n\n\n\n\nScale score is calculated by taking the mean of the domain specific items. We will calculate raw scale score (without imputed items)\n\nbfi &lt;- bfi %&gt;%\n  mutate(\n    raw_emotional_score = round(rowMeans(\n      select(., all_of(emotion_vector)),\n      na.rm = TRUE\n    ))\n  )\n\nFor missing items response to the closest item can be used Berkeley personality lab.\nReplace missing items with the closest matching item.\n\nbfi &lt;- bfi %&gt;%\n  mutate(\n    bfi2sworriesscl = ifelse(\n      is.na(bfi2sworriesscl),\n      bfi2srelaxedscl_reverse,\n      bfi2sworriesscl\n    ),\n    bfi2srelaxedscl_reverse = ifelse(\n      is.na(bfi2srelaxedscl_reverse),\n      bfi2sworriesscl,\n      bfi2srelaxedscl_reverse\n    )\n  ) %&gt;%\n  mutate(\n    bfi2sdepressedscl = ifelse(\n      is.na(bfi2sdepressedscl),\n      bfi2ssecurescl_reverse,\n      bfi2sdepressedscl\n    ),\n    bfi2ssecurescl_reverse = ifelse(\n      is.na(bfi2ssecurescl_reverse),\n      bfi2sdepressedscl,\n      bfi2ssecurescl_reverse\n    )\n  ) %&gt;%\n  mutate(\n    bfi2stemperamentalscl = ifelse(\n      is.na(bfi2stemperamentalscl),\n      bfi2sstableemotionscl_reverse,\n      bfi2stemperamentalscl\n    ),\n    bfi2sstableemotionscl_reverse = ifelse(\n      is.na(bfi2sstableemotionscl_reverse),\n      bfi2stemperamentalscl,\n      bfi2sstableemotionscl_reverse\n    )\n  )\n\nCheck missingness pattern after imputation\n\ngg_miss_upset(\n  bfi %&gt;%\n    select(all_of(emotion_vector)),\n  nsets = n_var_miss(bfi),\n  order.by = \"degree\",\n  point.size = 1,\n  line.size = 0.25,\n  text.scale = c(0.5)\n)\n\n\n\n\n\n\n\n\nWe will now calculate the imputed scale score\n\nbfi &lt;- bfi %&gt;%\n  mutate(\n    imputed_emotional_score = round(rowMeans(\n      select(., all_of(emotion_vector)),\n      na.rm = TRUE\n    ))\n  )\n\nCheck distributions negative emotionality scores before (raw_emotional_score) and after imputation (imputed_emotional_score).\n\nbfi_emo_plot &lt;- bfi %&gt;%\n  select(guid, raw_emotional_score, imputed_emotional_score) %&gt;%\n  pivot_longer(\n    cols = c(\"raw_emotional_score\", \"imputed_emotional_score\"),\n    values_to = \"score\",\n    names_to = \"score_name\"\n  ) %&gt;%\n  mutate(score_name = as.factor(score_name)) %&gt;%\n  mutate(score = as.factor(score)) %&gt;%\n  group_by(score_name, score) %&gt;%\n  count() %&gt;%\n  ungroup() %&gt;%\n  rename(score_count = n)\n\nggplot(bfi_emo_plot, aes(x = score, y = score_count, fill = score_name)) +\n  geom_bar(position = \"dodge\", stat = \"identity\") +\n  theme(axis.text.x = element_text(angle = 70, vjust = 0.5, hjust = 1))\n\n\n\n\n\n\n\n\nRemove intermediate field names not needed\n\nbfi &lt;- bfi %&gt;%\n  select(-raw_emotional_score)\n\n\n\n\nD.2.16.6 Open-Mindedness\n\nD.2.16.6.1 Missing Data\nMissing data pattern in open-mindedness domain specific items.\n\nopen_vector &lt;- c(\n  \"bfi2sfascinatedscl\",\n  \"bfi2sfewartinterestscl_reverse\",\n  \"bfi2sllittleinterestscl_reverse\",\n  \"bfi2sthinkerscl\",\n  \"bfi2soriginalscl\",\n  \"bfi2slittlecreativityscl_reverse\"\n)\n\ngg_miss_upset(\n  bfi %&gt;%\n    select(all_of(open_vector)),\n  nsets = n_var_miss(bfi),\n  order.by = \"degree\",\n  point.size = 1,\n  line.size = 0.25,\n  text.scale = c(0.5)\n)\n\n\n\n\n\n\n\n\nScale score is calculated by taking the mean of the domain specific items. We will calculate raw scale score (without imputed items)\n\nbfi &lt;- bfi %&gt;%\n  mutate(\n    raw_open_score = round(rowMeans(\n      select(., all_of(open_vector)),\n      na.rm = TRUE\n    ))\n  )\n\nFor missing items response to the closest item can be used.Berkeley personality lab.\nReplace missing items with the closest matching item.\n\nbfi &lt;- bfi %&gt;%\n  mutate(\n    bfi2sfascinatedscl = ifelse(\n      is.na(bfi2sfascinatedscl),\n      bfi2sfewartinterestscl_reverse,\n      bfi2sfascinatedscl\n    ),\n    bfi2sfewartinterestscl_reverse = ifelse(\n      is.na(bfi2sfewartinterestscl_reverse),\n      bfi2sfascinatedscl,\n      bfi2sfewartinterestscl_reverse\n    )\n  ) %&gt;%\n  mutate(\n    bfi2sllittleinterestscl_reverse = ifelse(\n      is.na(bfi2sllittleinterestscl_reverse),\n      bfi2sthinkerscl,\n      bfi2sllittleinterestscl_reverse\n    ),\n    bfi2sthinkerscl = ifelse(\n      is.na(bfi2sthinkerscl),\n      bfi2sllittleinterestscl_reverse,\n      bfi2sthinkerscl\n    )\n  ) %&gt;%\n  mutate(\n    bfi2soriginalscl = ifelse(\n      is.na(bfi2soriginalscl),\n      bfi2slittlecreativityscl_reverse,\n      bfi2soriginalscl\n    ),\n    bfi2slittlecreativityscl_reverse = ifelse(\n      is.na(bfi2slittlecreativityscl_reverse),\n      bfi2soriginalscl,\n      bfi2slittlecreativityscl_reverse\n    )\n  )\n\nCheck missingness pattern after imputation\n\ngg_miss_upset(\n  bfi %&gt;%\n    select(all_of(open_vector)),\n  nsets = n_var_miss(bfi),\n  order.by = \"degree\",\n  point.size = 1,\n  line.size = 0.25,\n  text.scale = c(0.5)\n)\n\n\n\n\n\n\n\n\nWe will now calculate the imputed scale score\n\nbfi &lt;- bfi %&gt;%\n  mutate(\n    imputed_open_score = round(rowMeans(\n      select(., all_of(open_vector)),\n      na.rm = TRUE\n    ))\n  )\n\nCheck distributions of open-mindedness scores before (raw_open_score) and after imputation (imputed_open_score)\n\nbfi_open_plot &lt;- bfi %&gt;%\n  select(guid, raw_open_score, imputed_open_score) %&gt;%\n  pivot_longer(\n    cols = c(\"raw_open_score\", \"imputed_open_score\"),\n    values_to = \"score\",\n    names_to = \"score_name\"\n  ) %&gt;%\n  mutate(score_name = as.factor(score_name)) %&gt;%\n  mutate(score = as.factor(score)) %&gt;%\n  group_by(score_name, score) %&gt;%\n  count() %&gt;%\n  ungroup() %&gt;%\n  rename(score_count = n)\n\nggplot(bfi_open_plot, aes(x = score, y = score_count, fill = score_name)) +\n  geom_bar(position = \"dodge\", stat = \"identity\") +\n  theme(axis.text.x = element_text(angle = 70, vjust = 0.5, hjust = 1))\n\n\n\n\n\n\n\n\nRemove intermediate field names not needed\n\nbfi &lt;- bfi %&gt;%\n  select(-raw_open_score)\n\n\n\n\nD.2.16.7 New field name(s)\nAdd the following field names to the data dictionary:\n“imputed_extraversion_score”, “imputed_agreeableness_score”, “imputed_cons_score”, “imputed_emotional_score”, “imputed_open_score”, “bfi2squietscl_reverse”, “bfi2stakechargescl_reverse”, “bfi2slessactivescl_reverse”, “bfi2suncaringscl_reverse”, “bfi2srudescl_reverse”, “bfi2sfaultwithothersscl_reverse”, “bfi2sdisorganizedscl_reverse”, “bfi2sdifficultstartscl_reverse”, “bfi2scarelessscl_reverse”, “bfi2srelaxedscl_reverse”, “bfi2ssecurescl_reverse”, “bfi2sstableemotionscl_reverse”, “bfi2sfewartinterestscl_reverse”, “bfi2sllittleinterestscl_reverse”, and “bfi2slittlecreativityscl_reverse”\n\n# Create field names\n\nextra_score_new_row &lt;- data.frame(\n  field_name = \"imputed_extraversion_score\",\n  form_name = \"the_big_five_inventory_bfi2s\",\n  field_type = \"numeric\",\n  field_label = \"Mean of Extraversion domain items. Replacing missing values with the value of the closest matching item (similar meaning)\"\n)\n\n\nagree_score_new_row &lt;- data.frame(\n  field_name = \"imputed_agreeableness_score\",\n  form_name = \"the_big_five_inventory_bfi2s\",\n  field_type = \"numeric\",\n  field_label = \"Mean of Agreeableness domain items. Replacing missing values with the value of the closest matching item (similar meaning)\"\n)\n\ncons_score_new_row &lt;- data.frame(\n  field_name = \"imputed_cons_score\",\n  form_name = \"the_big_five_inventory_bfi2s\",\n  field_type = \"numeric\",\n  field_label = \"Mean of conscientiousness domain items. Replacing missing values with the value of the closest matching item (similar meaning)\"\n)\n\n\nemo_score_new_row &lt;- data.frame(\n  field_name = \"imputed_emotional_score\",\n  form_name = \"the_big_five_inventory_bfi2s\",\n  field_type = \"numeric\",\n  field_label = \"Mean of negative emotionality domain items. Replacing missing values with the value of the closest matching item (similar meaning)\"\n)\n\n\nopen_score_new_row &lt;- data.frame(\n  field_name = \"imputed_open_score\",\n  form_name = \"the_big_five_inventory_bfi2s\",\n  field_type = \"numeric\",\n  field_label = \"Mean of open-mindedness domain items. Replacing missing values with the value of the closest matching item (similar meaning)\"\n)\n\n\nbfi2squietscl_new_row &lt;- data.frame(\n  field_name = \"bfi2squietscl_reverse\",\n  form_name = \"the_big_five_inventory_bfi2s\",\n  field_type = \"numeric\",\n  field_label = \"reverse coded bfi2squietscl\"\n)\n\n\nbfi2stakechargescl_new_row &lt;- data.frame(\n  field_name = \"bfi2stakechargescl_reverse\",\n  form_name = \"the_big_five_inventory_bfi2s\",\n  field_type = \"numeric\",\n  field_label = \"reverse coded bfi2stakechargescl\"\n)\n\n\nbfi2slessactivescl_new_row &lt;- data.frame(\n  field_name = \"bfi2slessactivescl_reverse\",\n  form_name = \"the_big_five_inventory_bfi2s\",\n  field_type = \"numeric\",\n  field_label = \"reverse coded bfi2slessactivescl\"\n)\n\n\nbfi2suncaringscl_new_row &lt;- data.frame(\n  field_name = \"bfi2suncaringscl_reverse\",\n  form_name = \"the_big_five_inventory_bfi2s\",\n  field_type = \"numeric\",\n  field_label = \"reverse coded bfi2suncaringscl\"\n)\n\nbfi2srudescl_new_row &lt;- data.frame(\n  field_name = \"bfi2srudescl_reverse\",\n  form_name = \"the_big_five_inventory_bfi2s\",\n  field_type = \"numeric\",\n  field_label = \"reverse coded bfi2srudescl\"\n)\n\n\nbfi2sfaultwithothersscl_new_row &lt;- data.frame(\n  field_name = \"bfi2sfaultwithothersscl_reverse\",\n  form_name = \"the_big_five_inventory_bfi2s\",\n  field_type = \"numeric\",\n  field_label = \"reverse coded bfi2sfaultwithothersscl\"\n)\n\n\nbfi2sdisorganizedscl_new_row &lt;- data.frame(\n  field_name = \"bfi2sdisorganizedscl_reverse\",\n  form_name = \"the_big_five_inventory_bfi2s\",\n  field_type = \"numeric\",\n  field_label = \"reverse coded bfi2sdisorganizedscl\"\n)\n\nbfi2sdifficultstartscl_new_row &lt;- data.frame(\n  field_name = \"bfi2sdifficultstartscl_reverse\",\n  form_name = \"the_big_five_inventory_bfi2s\",\n  field_type = \"numeric\",\n  field_label = \"reverse coded bfi2sdifficultstartscl\"\n)\n\n\nbfi2scarelessscl_new_row &lt;- data.frame(\n  field_name = \"bfi2scarelessscl_reverse\",\n  form_name = \"the_big_five_inventory_bfi2s\",\n  field_type = \"numeric\",\n  field_label = \"reverse coded bfi2scarelessscl\"\n)\n\n\nbfi2srelaxedscl_new_row &lt;- data.frame(\n  field_name = \"bfi2srelaxedscl_reverse\",\n  form_name = \"the_big_five_inventory_bfi2s\",\n  field_type = \"numeric\",\n  field_label = \"reverse coded bfi2srelaxedscl\"\n)\n\n\nbfi2ssecurescl_new_row &lt;- data.frame(\n  field_name = \"bfi2ssecurescl_reverse\",\n  form_name = \"the_big_five_inventory_bfi2s\",\n  field_type = \"numeric\",\n  field_label = \"reverse coded bfi2ssecurescl\"\n)\n\n\nbfi2sstableemotionscl_new_row &lt;- data.frame(\n  field_name = \"bfi2sstableemotionscl_reverse\",\n  form_name = \"the_big_five_inventory_bfi2s\",\n  field_type = \"numeric\",\n  field_label = \"reverse coded bfi2sstableemotionscl\"\n)\n\n\nbfi2sfewartinterestscl_reverse_new_row &lt;- data.frame(\n  field_name = \"bfi2sfewartinterestscl_reverse\",\n  form_name = \"the_big_five_inventory_bfi2s\",\n  field_type = \"numeric\",\n  field_label = \"reverse coded bfi2sfewartinterestscl\"\n)\n\nbfi2sllittleinterestscl_reverse_new_row &lt;- data.frame(\n  field_name = \"bfi2sllittleinterestscl_reverse\",\n  form_name = \"the_big_five_inventory_bfi2s\",\n  field_type = \"numeric\",\n  field_label = \"reverse coded bfi2sllittleinterestscl\"\n)\n\nbfi2slittlecreativityscl_reverse_new_row &lt;- data.frame(\n  field_name = \"bfi2slittlecreativityscl_reverse\",\n  form_name = \"the_big_five_inventory_bfi2s\",\n  field_type = \"numeric\",\n  field_label = \"reverse coded bfi2slittlecreativityscl\"\n)\n\n\n# adding rows\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!extra_score_new_row,\n    .after = match(\"bfi2slittlecreativityscl\", psy_soc_dict$field_name)\n  )\n\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!agree_score_new_row,\n    .after = match(\"bfi2slittlecreativityscl\", psy_soc_dict$field_name)\n  )\n\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!cons_score_new_row,\n    .after = match(\"bfi2slittlecreativityscl\", psy_soc_dict$field_name)\n  )\n\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!emo_score_new_row,\n    .after = match(\"bfi2slittlecreativityscl\", psy_soc_dict$field_name)\n  )\n\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!open_score_new_row,\n    .after = match(\"bfi2slittlecreativityscl\", psy_soc_dict$field_name)\n  )\n\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!bfi2squietscl_new_row,\n    .after = match(\"bfi2slittlecreativityscl\", psy_soc_dict$field_name)\n  )\n\n\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!bfi2stakechargescl_new_row,\n    .after = match(\"bfi2slittlecreativityscl\", psy_soc_dict$field_name)\n  )\n\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!bfi2slessactivescl_new_row,\n    .after = match(\"bfi2slittlecreativityscl\", psy_soc_dict$field_name)\n  )\n\n\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!bfi2suncaringscl_new_row,\n    .after = match(\"bfi2slittlecreativityscl\", psy_soc_dict$field_name)\n  )\n\n\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!bfi2srudescl_new_row,\n    .after = match(\"bfi2slittlecreativityscl\", psy_soc_dict$field_name)\n  )\n\n\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!bfi2sfaultwithothersscl_new_row,\n    .after = match(\"bfi2slittlecreativityscl\", psy_soc_dict$field_name)\n  )\n\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!bfi2sdisorganizedscl_new_row,\n    .after = match(\"bfi2slittlecreativityscl\", psy_soc_dict$field_name)\n  )\n\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!bfi2sdifficultstartscl_new_row,\n    .after = match(\"bfi2slittlecreativityscl\", psy_soc_dict$field_name)\n  )\n\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!bfi2scarelessscl_new_row,\n    .after = match(\"bfi2slittlecreativityscl\", psy_soc_dict$field_name)\n  )\n\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!bfi2srelaxedscl_new_row,\n    .after = match(\"bfi2slittlecreativityscl\", psy_soc_dict$field_name)\n  )\n\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!bfi2ssecurescl_new_row,\n    .after = match(\"bfi2slittlecreativityscl\", psy_soc_dict$field_name)\n  )\n\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!bfi2sstableemotionscl_new_row,\n    .after = match(\"bfi2slittlecreativityscl\", psy_soc_dict$field_name)\n  )\n\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!bfi2sfewartinterestscl_reverse_new_row,\n    .after = match(\"bfi2slittlecreativityscl\", psy_soc_dict$field_name)\n  )\n\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!bfi2sllittleinterestscl_reverse_new_row,\n    .after = match(\"bfi2slittlecreativityscl\", psy_soc_dict$field_name)\n  )\n\n\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!bfi2slittlecreativityscl_reverse_new_row,\n    .after = match(\"bfi2slittlecreativityscl\", psy_soc_dict$field_name)\n  )\n\n\n\nD.2.16.8 Save:\nSave “bfi” and updated data dictionary as .csv files in the folder named “reformatted_bfi”\n\nwrite_csv(\n  bfi,\n  file = here::here(\n    \"data\",\n    \"Psychosocial\",\n    \"Reformatted\",\n    \"reformatted_bfi.csv\"\n  )\n)\nwrite_csv(\n  psy_soc_dict,\n  file = here::here(\n    \"data\",\n    \"Psychosocial\",\n    \"Reformatted\",\n    \"updated_psy_soc_dictionary.csv\"\n  )\n)\n\n\n\n\nD.2.17 Danish Thoracic Surgery Questionnaire v0.2\nThe Danish Thoracic Surgery Questionnaire comprises 17 items to assess functional impairment experienced post thoracotomy. each item is rated on a scale of 0 to 4, where 0 indicates no impairment due to pain and 4 indicates complete impairement due to pain. There is an additional indicator “I never do this activity” for each item. The total score is calculated as the sum of all seventeen items[Ringsted et al. (2013)](Bayman, 2017)\n\nRingsted, T. K., Wildgaard, K., Kreiner, S., & Kehlet, H. (2013). Pain-related Impairment of Daily Activities After Thoracic Surgery. The Clinical Journal of Pain, 29(9), 791–799. https://doi.org/10.1097/ajp.0b013e318278d4e2\n\nBayman, E. O. (2017). Pain-Related Limitations in Daily Activities Following Thoracic Surgery in a United States Population. Pain Physician, 3(20;3), E367–E378. https://doi.org/10.36076/ppj.2017.e378\n\nD.2.17.1 Read in Data:\nRead in psy_soc1 dataframe and select field names from the The Danish Thoracic Surgery Questionnaire data and keep completed forms. Keeping completed forms will subset to the thoracotomy cohort by default, we will call “dts”\n\ndts &lt;- applyFilter(\"dts\", danish_thoracic_surgery_questionnaire_v02_complete)\n\n\n\nD.2.17.2 Missing Data:\nMissing data pattern in dts.\n\ngg_miss_upset(\n  dts,\n  nsets = n_var_miss(dts),\n  order.by = \"degree\",\n  point.size = 1,\n  line.size = 0.25,\n  text.scale = c(0.5)\n)\n\n\n\n\n\n\n\n\nHandling missing data:\nIn case of missing values, a total score can be calculated if responses to 13 of 17 items are available (0.29 x 17 = 4.93). The missing responses are first replaced with the average score of the completed items and then a total score is calculated by adding the scores for all the 17 items(refer to section 1.c).\nWe will create a variable “dts_diff” and assign a value of 1 if there is a response to more than or equal to 13 of 17 DTS items and 0 if there is a response to less than 13 of 17 DTS items.\n\ndts_vector &lt;- c(\n  \"dtsrunningscl\",\n  \"dtscarryingscl\",\n  \"dtswashingscl\",\n  \"dtscleaningscl\",\n  \"dtswalkingscl\",\n  \"dtsstairsscl\",\n  \"dtskneelingscl\",\n  \"dtsstandingscl\",\n  \"dtsoutofbedscl\",\n  \"dtsswimmingscl\",\n  \"dtscyclingscl\",\n  \"dtsdrivingscl\",\n  \"dtslyingopsidescl\",\n  \"dtscoughingscl\",\n  \"dtssittingscl\",\n  \"dtswatchtvscl\",\n  \"dtssleepscl\"\n)\n\ndts &lt;- dts %&gt;%\n  mutate(dts_not_na = rowSums(!is.na(.[, dts_vector]))) %&gt;%\n  mutate(\n    dts_diff = case_when(\n      dts_not_na &gt;= 13 ~ 1,\n      TRUE ~ 0\n    )\n  ) %&gt;%\n  as_tibble() %&gt;%\n  mutate(dts_diff = as.factor(dts_diff))\n\nWe will now replace missing values with the rounded mean of remaining items if dts_diff = 1 i.e if 13 of 17 items are available and calculate the total score by taking a sum of all the items. We will exclude responses indicated by a “96” i.e. “I never do this activity” from all calculations.\n\ndts &lt;- dts %&gt;%\n  mutate(\n    raw_dts_score = rowSums(\n      select(., all_of(dts_vector)) * (select(., all_of(dts_vector)) != 96),\n      na.rm = TRUE\n    )\n  ) %&gt;%\n  mutate(\n    mean_dts = case_when(\n      dts_diff == 1 ~\n        round(rowMeans(\n          select(., all_of(dts_vector)) * (select(., all_of(dts_vector)) != 96),\n          na.rm = TRUE\n        ))\n    )\n  ) %&gt;%\n  mutate(across(all_of(dts_vector), ~ if_else(is.na(.), mean_dts, .))) %&gt;%\n  mutate(\n    imputed_dts_score = case_when(\n      dts_diff == 1 ~\n        rowSums(\n          select(., all_of(dts_vector)) * (select(., all_of(dts_vector)) != 96),\n          na.rm = TRUE\n        )\n    )\n  )\n\nCheck missingness pattern after imputation\n\ngg_miss_upset(\n  dts %&gt;%\n    select(-imputed_dts_score, -mean_dts),\n  nsets = n_var_miss(dts),\n  order.by = \"degree\",\n  point.size = 1,\n  line.size = 0.25,\n  text.scale = c(0.5)\n)\n\n\n\n\n\n\n\n\nCheck distributions of DTS scores before (raw_dts_score) and after imputation (imputed_dts_score)\n\ndts_plot &lt;- dts %&gt;%\n  filter(between(dts_not_na, 13, 17)) %&gt;%\n  select(guid, raw_dts_score, imputed_dts_score) %&gt;%\n  pivot_longer(\n    cols = c(\"raw_dts_score\", \"imputed_dts_score\"),\n    values_to = \"score\",\n    names_to = \"score_name\"\n  )\n\nggplot(dts_plot, aes(x = score_name, y = score, fill = score_name)) +\n  geom_violin(alpha = .25)\n\n\n\n\n\n\n\n\nRemove intermediate field names not needed\n\ndts &lt;- dts %&gt;%\n  select(-dts_not_na, -mean_dts, raw_dts_score)\n\n\n\nD.2.17.3 New field name(s):\nAdd the field names “dts_diff” and “imputed_dts_score”to the data dictionary\n\n# Create field names\ndts_diff_new_row &lt;- data.frame(\n  field_name = \"dts_diff\",\n  form_name = \"danish_thoracic_surgery_questionnaire_v02\",\n  field_type = \"factor\",\n  select_choices_or_calculations = \"1, if there is a response to more than or equal to 13 of 17 DTS items|0, if there is a response to less than 13 of 16 DTS items\"\n)\n\ndts_score_new_row &lt;- data.frame(\n  field_name = \"imputed_dts_score\",\n  form_name = \"danish_thoracic_surgery_questionnaire_v02\",\n  field_type = \"numeric\",\n  field_label = \"A higher score indicates a higher degree of functional impairment due to pain\",\n  field_note = \"The missing responses are first replaced with the average score of the completed items and then a total score is calculated by adding the scores for all the items, responses indicated by 96 were excluded from the total score\"\n)\n\n# adding fabq_diff\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!dts_diff_new_row,\n    .after = match(\"dtssleepscl\", psy_soc_dict$field_name)\n  )\n\n# imputed fabq score\n\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!dts_score_new_row,\n    .after = match(\"dtssleepscl\", psy_soc_dict$field_name)\n  )\n\n\n\nD.2.17.4 Save:\nSave “dts” and updated data dictionary as .csv files in the folder named “reformatted_dts”\n\nwrite_csv(\n  dts,\n  file = here::here(\n    \"data\",\n    \"Psychosocial\",\n    \"Reformatted\",\n    \"reformatted_dts.csv\"\n  )\n)\nwrite_csv(\n  psy_soc_dict,\n  file = here::here(\n    \"data\",\n    \"Psychosocial\",\n    \"Reformatted\",\n    \"updated_psy_soc_dictionary.csv\"\n  )\n)\n\n\n\n\nD.2.18 Rapid Assessment of Physical Activity v1.0 (RAPA)\nThe Rapid Assessment of Physical Activity Questionnaire comprises 9 items to assess physical activity in subject over 50 years of age. The first 7 items measure aerobic activity and the last 2 items measure strength/flexibility. Each item has a yes/no response (Topolski et al., 2006). Here we well compute aerobic activity score based on the highest affirmative response.\n\nTopolski, T. D., LoGerfo, J., Patrick, D. L., Williams, B., Walwick, J., & Patrick, M. M. B. (2006). The rapid assessment of physical activity (RAPA) among older adults. Preventing Chronic Disease, 3(4), A118.\n\nD.2.18.1 Read in Data:\nRead in psy_soc1 dataframe and select field names from the RAPA and keep completed forms, we will call “rapa”\n\nrapa &lt;- applyFilter(\n  \"rapa\",\n  rapid_assessment_of_physical_activity_v10_rapa_complete\n) %&gt;%\n  retype()\n\nMissing values cannot be imputed, we well compute aerobic activity score based on the highest affirmative response.\n\nrapa &lt;- rapa %&gt;%\n  mutate(\n    rapa_rarly1 = case_when(\n      rapa_rarly == 1 ~ 1,\n      TRUE ~ rapa_rarly\n    ),\n    rapa_light1 = case_when(\n      rapa_light == 1 ~ 2,\n      TRUE ~ rapa_light\n    ),\n    rapa_lightweekly1 = case_when(\n      rapa_lightweekly == 1 ~ 3,\n      TRUE ~ rapa_lightweekly\n    ),\n    rapa_mod1 = case_when(\n      rapa_mod == 1 ~ 4,\n      TRUE ~ rapa_mod\n    ),\n    rapa_vig1 = case_when(\n      rapa_vig == 1 ~ 4,\n      TRUE ~ rapa_vig\n    ),\n    rapa_modweekly1 = case_when(\n      rapa_modweekly == 1 ~ 5,\n      TRUE ~ rapa_modweekly\n    ),\n    rapa_vigweekly1 = case_when(\n      rapa_vigweekly == 1 ~ 5,\n      TRUE ~ rapa_vigweekly\n    ),\n    rapa_aerobic_score = pmax(\n      rapa_rarly1,\n      rapa_light1,\n      rapa_lightweekly1,\n      rapa_mod1,\n      rapa_vig1,\n      rapa_modweekly1,\n      rapa_vigweekly1,\n      na.rm = TRUE\n    )\n  ) %&gt;%\n  mutate(\n    rapa_aerobic_category = case_when(\n      rapa_aerobic_score == 1 ~ \"sedentary\",\n      rapa_aerobic_score == 2 ~ \"underactive\",\n      rapa_aerobic_score == 3 ~ \"underactive_regular-light_activities\",\n      rapa_aerobic_score == 4 ~ \"underactive_regular\",\n      rapa_aerobic_score == 5 ~ \"active\",\n      rapa_aerobic_score == 0 ~ \"answered_no_to_all_aerobic_items\",\n      TRUE ~ NA\n    )\n  ) %&gt;%\n  mutate(rapa_aerobic_category = as.factor(rapa_aerobic_category))\n\nWe will create a variable “rapa_aerobic_missing” and assign a value of 1 if “rapa_aerobic_score” is missing and 0 if “rapa_aerobic_score” is available\n\nrapa &lt;- rapa %&gt;%\n  mutate(\n    rapa_aerobic_missing = case_when(is.na(rapa_aerobic_score) ~ 1, TRUE ~ 0)\n  )\n\nCheck number of missing aerobic score\n\ntable(rapa$rapa_aerobic_missing)\n\n\n   0    1 \n1360    2 \n\n\n\n\nD.2.18.2 New field name(s)\nAdd the field names “rapa_aerobic_score” and “rapa_aerobic_missing” to the data dictionary\n\n# Create field names\naerobic_score_new_row &lt;- data.frame(\n  field_name = \"rapa_aerobic_score\",\n  form_name = \"rapid_assessment_of_physical_activity_v10_rapa\",\n  field_type = \"numeric\",\n  select_choices_or_calculations = \"0, if answered_no_to_all_aerobic_itemse|1,Sedentary|2,Underactive|3, Underactive_regular-light_activities|4,Underactive_regular|5,Active\"\n)\n\naerobic_category_new_row &lt;- data.frame(\n  field_name = \"rapa_aerobic_category\",\n  form_name = \"rapid_assessment_of_physical_activity_v10_rapa\",\n  field_type = \"Factor\",\n  select_choices_or_calculations = \"if answered_no_to_all_aerobic_itemse|Sedentary|Underactive|Underactive_regular-light_activities|Underactive_regular|Active\"\n)\n\naerobic_missing_new_row &lt;- data.frame(\n  field_name = \"rapa_aerobic_missing\",\n  form_name = \"rapid_assessment_of_physical_activity_v10_rapa\",\n  field_type = \"numeric\",\n  select_choices_or_calculations = \"1 if rapa_aerobic_score is missing|0, if rapa_aerobic_score is not missing\"\n)\n#################\n\nrapa1_new_row &lt;- data.frame(\n  field_name = \"rapa_rarly1\",\n  form_name = \"rapid_assessment_of_physical_activity_v10_rapa\",\n  field_type = \"numeric\",\n  field_label = \" recoded as 1 if subject's highest affirmative response for aerobic activity related  questions\"\n)\n\nrapa2_new_row &lt;- data.frame(\n  field_name = \"rapa_light1\",\n  form_name = \"rapid_assessment_of_physical_activity_v10_rapa\",\n  field_type = \"numeric\",\n  field_label = \"recoded as 2 if subject's highest affirmative response for aerobic activity related  questions\"\n)\n\nrapa3_new_row &lt;- data.frame(\n  field_name = \"rapa_lightweekly1\",\n  form_name = \"rapid_assessment_of_physical_activity_v10_rapa\",\n  field_type = \"numeric\",\n  field_label = \"recoded as 3 if subject's highest affirmative response for aerobic activity related  questions\"\n)\n\nrapa4_new_row &lt;- data.frame(\n  field_name = \"rapa_mod1\",\n  form_name = \"rapid_assessment_of_physical_activity_v10_rapa\",\n  field_type = \"numeric\",\n  field_label = \"recoded as 4 if subject's highest affirmative response for aerobic activity related  questions\"\n)\n\nrapa5_new_row &lt;- data.frame(\n  field_name = \"rapa_vig1\",\n  form_name = \"rapid_assessment_of_physical_activity_v10_rapa\",\n  field_type = \"numeric\",\n  field_label = \"recoded as 4 if subject's highest affirmative response for aerobic activity related questions\"\n)\n\nrapa6_new_row &lt;- data.frame(\n  field_name = \"rapa_modweekly1\",\n  form_name = \"rapid_assessment_of_physical_activity_v10_rapa\",\n  field_type = \"numeric\",\n  field_label = \"recoded as 5 if subject's highest affirmative response for aerobic activity related  questions\"\n)\n\nrapa7_new_row &lt;- data.frame(\n  field_name = \"rapa_vigweekly1\",\n  form_name = \"rapid_assessment_of_physical_activity_v10_rapa\",\n  field_type = \"numeric\",\n  field_label = \"recoded as 5 if subject's highest affirmative response for aerobic activity related  questions\"\n)\n\n\n####\n# adding rows\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!aerobic_score_new_row,\n    .after = match(\"rapa_2score\", psy_soc_dict$field_name)\n  )\n\n\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!aerobic_category_new_row,\n    .after = match(\"rapa_2score\", psy_soc_dict$field_name)\n  )\n\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!aerobic_missing_new_row,\n    .after = match(\"rapa_2score\", psy_soc_dict$field_name)\n  )\n\n\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!rapa1_new_row,\n    .after = match(\"rapa_2score\", psy_soc_dict$field_name)\n  )\n\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!rapa2_new_row,\n    .after = match(\"rapa_2score\", psy_soc_dict$field_name)\n  )\n\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!rapa3_new_row,\n    .after = match(\"rapa_2score\", psy_soc_dict$field_name)\n  )\n\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!rapa4_new_row,\n    .after = match(\"rapa_2score\", psy_soc_dict$field_name)\n  )\n\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!rapa5_new_row,\n    .after = match(\"rapa_2score\", psy_soc_dict$field_name)\n  )\n\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!rapa6_new_row,\n    .after = match(\"rapa_2score\", psy_soc_dict$field_name)\n  )\n\npsy_soc_dict &lt;- psy_soc_dict %&gt;%\n  add_row(\n    !!!rapa7_new_row,\n    .after = match(\"rapa_2score\", psy_soc_dict$field_name)\n  )\n\n\n\nD.2.18.3 Save:\nSave “rapa” and updated data dictionary as .csv files in the folder named “reformatted_rapa”\n\nwrite_csv(\n  rapa,\n  file = here::here(\n    \"data\",\n    \"Psychosocial\",\n    \"Reformatted\",\n    \"reformatted_rapa.csv\"\n  )\n)\nwrite_csv(\n  psy_soc_dict,\n  file = here::here(\n    \"data\",\n    \"Psychosocial\",\n    \"Reformatted\",\n    \"updated_psy_soc_dictionary.csv\"\n  )\n)",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>D</span>  <span class='chapter-title'>Psychosocial Data Imputation and Biomarker calculations</span>"
    ]
  },
  {
    "objectID": "biospecimenCRF_quality_checks_and_reformat.html",
    "href": "biospecimenCRF_quality_checks_and_reformat.html",
    "title": "Appendix E — Biospecimen Collection CRF Data Quality Checks",
    "section": "",
    "text": "E.1 Read in Data and write functions\nThis document goes over quality checks for the Biospecimen Collection Case Report Form (CRF). The headings in the sidebar help the user navigate to their desired content.",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>E</span>  <span class='chapter-title'>Biospecimen Collection CRF Data Quality Checks</span>"
    ]
  },
  {
    "objectID": "biospecimenCRF_quality_checks_and_reformat.html#read-in-data-and-write-functions",
    "href": "biospecimenCRF_quality_checks_and_reformat.html#read-in-data-and-write-functions",
    "title": "Appendix E — Biospecimen Collection CRF Data Quality Checks",
    "section": "",
    "text": "E.1.1 Load Libraries\n\nlibrary(shiny)\nlibrary(forcats)\nlibrary(tidyverse)\nlibrary(here)\nlibrary(hablar)\nlibrary(janitor)\nlibrary(gt)\n\n\n\nE.1.2 Function\nWrite a function to remove columns where all rows have NA, this is will remove duplicate columns for the the Thoracotomy/TKA cohort\n\nnot_all_na &lt;- function(x) any(!is.na(x))",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>E</span>  <span class='chapter-title'>Biospecimen Collection CRF Data Quality Checks</span>"
    ]
  },
  {
    "objectID": "biospecimenCRF_quality_checks_and_reformat.html#crf-quality-checks",
    "href": "biospecimenCRF_quality_checks_and_reformat.html#crf-quality-checks",
    "title": "Appendix E — Biospecimen Collection CRF Data Quality Checks",
    "section": "E.2 CRF Quality checks",
    "text": "E.2 CRF Quality checks\n\nE.2.1 Biospecimen collection Form\nRead in Biospecimen collection data, We will call this bio\n\nbio &lt;- read_csv(here(\"data\", \"blood-draw\", \"blood-draw-2024-11-06.csv\"))\n\nRemove test records\n\ntest_records &lt;- c(\n  \"10000\",\n  \"15000\",\n  \"20000\",\n  \"25000\",\n  \"40000\",\n  \"50000\",\n  \"60000\",\n  \"70000\",\n  \"80000\",\n  \"90000\",\n  \"100000\",\n  \"110000\",\n  \"120000\"\n)\n\nbio &lt;- bio %&gt;%\n  filter(!record_id %in% test_records)\n\nCreate a column for cohort type called “cohort”\n\nbio &lt;- bio %&gt;%\n  mutate(\n    cohort = case_when(\n      record_id &gt;= 10000 & record_id &lt; 15000 | record_id &gt;= 25000 ~ \"TKA\",\n      TRUE ~ \"Thoracic\"\n    )\n  )\n\n\n\nE.2.2 Data Dictionary\nRead in data dictionary and remove duplicate field names\n\nbio_dict &lt;- read_csv(here(\n  \"data\",\n  \"blood-draw\",\n  \"blood-draw-Data-Dictionary-2024-11-06.csv\"\n)) %&gt;%\n  distinct(field_name, .keep_all = TRUE)\n\n\n\nE.2.3 New field name(s)\nAdd the field name “cohort” to the data dictionary\n\n# Create field names\ncohort_new_row &lt;- data.frame(\n  field_name = \"cohort\",\n  field_type = \"Character\",\n  field_note = \"Type of surgical cohort\",\n  select_choices_or_calculations = \"TKA,Thoracic\"\n)\n\n# Add the new row after the last row\n\nbio_dict &lt;- bio_dict %&gt;%\n  slice(1:nrow(.)) %&gt;%\n  add_row(.after = nrow(.), !!!cohort_new_row)\n\nThe redcap_repeat_instance should be the same for the blood draw and current medications form. ML and BA confirmed that the following record_ids have a redcap_repeat_instance mismatch at baseline.\nTKA\n\nThoracic\n\nProposed solution for data release 2.0: For the IDs above, we compared the time stamps of the Biospecimen collection Form CRF(s) and the Current Medications Form(s), and retained the Current Medications Form(s) with the time stamp matching or close to the Biospecimen collection Form CRF(s) dates.\n\nbio &lt;- bio %&gt;%\n  filter(\n    !(record_id == 10507 &\n      redcap_repeat_instrument == \"current_medications_v02\" &\n      redcap_repeat_instance == 2)\n  ) %&gt;%\n  filter(\n    !(record_id == 20326 &\n      redcap_repeat_instrument == \"current_medications_v02\" &\n      redcap_repeat_instance == 2)\n  ) %&gt;%\n  mutate(\n    redcap_repeat_instance = case_when(\n      record_id == 25172 &\n        redcap_repeat_instrument == \"current_medications_v02\" &\n        redcap_repeat_instance == 1 ~\n        2,\n      TRUE ~ redcap_repeat_instance\n    )\n  ) %&gt;%\n  mutate(\n    redcap_repeat_instance = case_when(\n      record_id == 25204 &\n        redcap_repeat_instrument == \"current_medications_v02\" &\n        redcap_repeat_instance == 1 ~\n        2,\n      TRUE ~ redcap_repeat_instance\n    )\n  ) %&gt;%\n  filter(\n    !(record_id == 25212 &\n      redcap_repeat_instrument == \"current_medications_v02\" &\n      redcap_repeat_instance == 1 |\n      redcap_repeat_instance == 3)\n  ) %&gt;%\n  mutate(\n    redcap_repeat_instance = case_when(\n      record_id == 25239 &\n        redcap_repeat_instrument == \"current_medications_v02\" &\n        redcap_repeat_instance == 1 ~\n        2,\n      TRUE ~ redcap_repeat_instance\n    )\n  ) %&gt;%\n  filter(\n    !(record_id == 25094 &\n      redcap_repeat_instrument == \"current_medications_v02\" &\n      redcap_repeat_instance == 1)\n  ) %&gt;%\n  mutate(\n    redcap_repeat_instance = case_when(\n      record_id == 25094 &\n        redcap_repeat_instrument == \"current_medications_v02\" &\n        redcap_repeat_instance == 2 ~\n        1,\n      TRUE ~ redcap_repeat_instance\n    )\n  ) %&gt;%\n  mutate(\n    redcap_repeat_instance = case_when(\n      record_id == 25108 &\n        redcap_repeat_instrument == \"current_medications_v02\" &\n        redcap_repeat_instance == 2 ~\n        3,\n      TRUE ~ redcap_repeat_instance\n    )\n  )\n\n\n\nE.2.4 TKA cohort Biospecimen collection form\n\ntka_bio &lt;- bio %&gt;%\n  select(\n    record_id,\n    guid,\n    redcap_data_access_group,\n    redcap_event_name,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    starts_with(\"bscp\"),\n    blood_sample_collection_and_processing_crf_complete,\n    cohort\n  )\n\nkeep subjects from the TKA cohort, with the most recent baseline visit.\n\ntka_bio &lt;- tka_bio %&gt;%\n  filter(cohort == \"TKA\") %&gt;%\n  filter(\n    redcap_repeat_instrument == \"blood_sample_collection_and_processing_crf\"\n  ) %&gt;%\n  filter(\n    blood_sample_collection_and_processing_crf_complete == 2 &\n      !is.na(redcap_repeat_instance)\n  ) %&gt;%\n  group_by(record_id, redcap_event_name) %&gt;%\n  top_n(1, redcap_repeat_instance) %&gt;%\n  ungroup() %&gt;%\n  select(where(not_all_na))\n\nRemove subjects that haven’t come in for a visit yet i.e. No blood draw time available and ‘No blood obtained’ marked)\n\nbrdata1 &lt;- tka_bio %&gt;%\n  filter(\n    bscp_sample_obtained___1 == 0 &\n      blood_sample_collection_and_processing_crf_complete == 2\n  )\n\n\nE.2.4.1 Flag 1:\nCheck if there is missing info on hours since last drink.\n\nbrflag1 &lt;- brdata1 %&gt;%\n  filter(is.na(bscp_hrs_since_water)) %&gt;%\n  add_column(error_type = \"Missing info on hours since last drink\") %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nE.2.4.2 Flag 2:\nCheck if there is missing information on hours since last food.\n\nbrflag2 &lt;- brdata1 %&gt;%\n  filter(is.na(bscp_hrs_since_food)) %&gt;%\n  add_column(error_type = \"Missing information on hours since last food\") %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nE.2.4.3 Flag 3:\nCheck if there is missing information on hours since last caffeine intake in subjects who consume caffeine.\n\nbrflag3 &lt;- brdata1 %&gt;%\n  filter(is.na(bscp_hrs_since_cafstim) & bscp_caff_cups_amt != 4) %&gt;%\n  add_column(\n    error_type = \"Missing information on hours since last caffeine\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nE.2.4.4 Flag 4:\nCheck if there is missing information the amount of caffeine.\n\nbrflag4 &lt;- brdata1 %&gt;%\n  filter(is.na(bscp_caff_cups_amt)) %&gt;%\n  add_column(error_type = \"Missing information on the amount of caffeine\") %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nE.2.4.5 Flag 5:\nCheck if there is missing information on vaccination.\n\nbrflag5 &lt;- brdata1 %&gt;%\n  filter(is.na(bscp_any_vacc)) %&gt;%\n  add_column(error_type = \"Missing information on vaccination\") %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nE.2.4.6 Create Biospecimen collection form error report for the TKA cohort.\n\n# Specify the common prefix\nbr_error &lt;- \"brflag\"\n\n# Find data frames in the global environment with the specified prefix\nbr_list &lt;- mget(ls(pattern = paste0(\"^\", br_error)))\n\n# Combine the data frames using bind_rows\nbr_report &lt;- bind_rows(br_list) %&gt;%\n  pivot_wider(names_from = \"error_type\", values_from = \"errors\") %&gt;%\n  mutate_all(~ replace_na(., \"\"))\n\n\nbr_report %&gt;%\n  gt() %&gt;%\n  tab_header(\n    title = md(\"**TKA Biospecimen collection form Error Report**\")\n  ) %&gt;%\n  tab_options(\n    table.font.size = px(12),\n    column_labels.font.size = px(12)\n  ) %&gt;%\n  tab_style(\n    style = list(cell_fill(color = \"#F4F4F4\")),\n    locations = cells_body(columns = record_id)\n  )\n\n\n\n\n\n\n\nTKA Biospecimen collection form Error Report\n\n\nrecord_id\nredcap_data_access_group\nredcap_repeat_instrument\nredcap_repeat_instance\nMissing info on hours since last drink\nMissing information on hours since last food\nMissing information on hours since last caffeine\nMissing information on the amount of caffeine\nMissing information on vaccination\n\n\n\n\n10066\nuchicago\nblood_sample_collection_and_processing_crf\n1\nerror\nerror\n\nerror\n\n\n\n10083\nuchicago\nblood_sample_collection_and_processing_crf\n1\nerror\nerror\n\n\n\n\n\n10098\nuchicago\nblood_sample_collection_and_processing_crf\n1\nerror\nerror\n\nerror\n\n\n\n10170\nnorthshore\nblood_sample_collection_and_processing_crf\n1\nerror\nerror\n\nerror\nerror\n\n\n10202\nnorthshore\nblood_sample_collection_and_processing_crf\n1\nerror\nerror\n\nerror\nerror\n\n\n10329\nuchicago\nblood_sample_collection_and_processing_crf\n1\nerror\nerror\n\nerror\nerror\n\n\n10506\nuchicago\nblood_sample_collection_and_processing_crf\n1\nerror\n\n\n\n\n\n\n10594\nnorthshore\nblood_sample_collection_and_processing_crf\n1\nerror\n\n\n\n\n\n\n10618\nrush_university_me\nblood_sample_collection_and_processing_crf\n1\nerror\nerror\n\nerror\nerror\n\n\n10644\nuchicago\nblood_sample_collection_and_processing_crf\n1\nerror\nerror\n\nerror\nerror\n\n\n10703\nuchicago\nblood_sample_collection_and_processing_crf\n1\nerror\nerror\n\n\n\n\n\n10775\nuchicago\nblood_sample_collection_and_processing_crf\n1\nerror\nerror\n\nerror\nerror\n\n\n25048\nuniversity_of_mich\nblood_sample_collection_and_processing_crf\n1\nerror\nerror\n\nerror\nerror\n\n\n25061\nuniversity_of_mich\nblood_sample_collection_and_processing_crf\n1\nerror\n\n\n\n\n\n\n25275\nuniversity_of_mich\nblood_sample_collection_and_processing_crf\n1\nerror\n\nerror\n\n\n\n\n10042\nnorthshore\nblood_sample_collection_and_processing_crf\n1\n\n\nerror\n\n\n\n\n10055\nuchicago\nblood_sample_collection_and_processing_crf\n1\n\n\nerror\n\n\n\n\n10239\nrush_university_me\nblood_sample_collection_and_processing_crf\n1\n\n\nerror\n\n\n\n\n25020\nuniversity_of_mich\nblood_sample_collection_and_processing_crf\n1\n\n\nerror\n\n\n\n\n10016\nrush_university_me\nblood_sample_collection_and_processing_crf\n1\n\n\n\nerror\n\n\n\n10029\nrush_university_me\nblood_sample_collection_and_processing_crf\n1\n\n\n\nerror\nerror\n\n\n10232\nrush_university_me\nblood_sample_collection_and_processing_crf\n1\n\n\n\nerror\nerror\n\n\n10339\nrush_university_me\nblood_sample_collection_and_processing_crf\n1\n\n\n\nerror\nerror\n\n\n10589\nuchicago\nblood_sample_collection_and_processing_crf\n1\n\n\n\nerror\nerror\n\n\n10038\nrush_university_me\nblood_sample_collection_and_processing_crf\n1\n\n\n\n\nerror\n\n\n10127\nrush_university_me\nblood_sample_collection_and_processing_crf\n1\n\n\n\n\nerror\n\n\n10562\nrush_university_me\nblood_sample_collection_and_processing_crf\n1\n\n\n\n\nerror\n\n\n10565\nnorthshore\nblood_sample_collection_and_processing_crf\n1\n\n\n\n\nerror\n\n\n10702\nrush_university_me\nblood_sample_collection_and_processing_crf\n1\n\n\n\n\nerror\n\n\n10838\nnorthshore\nblood_sample_collection_and_processing_crf\n1\n\n\n\n\nerror\n\n\n10882\nnorthshore\nblood_sample_collection_and_processing_crf\n1\n\n\n\n\nerror\n\n\n25014\nuniversity_of_mich\nblood_sample_collection_and_processing_crf\n1\n\n\n\n\nerror\n\n\n25055\nuniversity_of_mich\nblood_sample_collection_and_processing_crf\n1\n\n\n\n\nerror\n\n\n\n\n\n\n\n\n\nE.2.4.7 Save:\nSave “tka_bio” and data dictionary as .csv files in the folder named “Reformatted”\n\nwrite_csv(\n  tka_bio,\n  file = here::here(\n    \"data\",\n    \"blood-draw\",\n    \"Reformatted\",\n    \"reformatted_tka_bio.csv\"\n  )\n)\n\nwrite_csv(\n  bio_dict,\n  file = here::here(\"data\", \"blood-draw\", \"Reformatted\", \"updated_bio_dict.csv\")\n)\n\n\n\n\nE.2.5 Thoracotomy Cohort Biospecimen Collection Form:\n\nthor_bio &lt;- bio %&gt;%\n  select(\n    record_id,\n    guid,\n    redcap_data_access_group,\n    redcap_event_name,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    starts_with(\"bscp\"),\n    blood_sample_collection_and_processing_crf_complete,\n    cohort\n  )\n\nkeep subjects from the Thoracotomy cohort, with the most recent baseline visit.\n\nthor_bio &lt;- thor_bio %&gt;%\n  filter(cohort == \"Thoracic\") %&gt;%\n  filter(\n    redcap_repeat_instrument == \"blood_sample_collection_and_processing_crf\"\n  ) %&gt;%\n  filter(\n    blood_sample_collection_and_processing_crf_complete == 2 &\n      !is.na(redcap_repeat_instance)\n  ) %&gt;%\n  group_by(record_id, redcap_event_name) %&gt;%\n  top_n(1, redcap_repeat_instance) %&gt;%\n  ungroup() %&gt;%\n  select(where(not_all_na))\n\nRemove subjects that haven’t come in for a visit yet i.e. No blood draw time available and ‘No blood obtained’ marked\n\ntbrdata1 &lt;- thor_bio %&gt;%\n  filter(\n    bscp_sample_obtained___1 == 0 &\n      blood_sample_collection_and_processing_crf_complete == 2\n  )\n\n\nE.2.5.1 Flag 1:\nCheck if there is missing information on hours since last drink.\n\ntbrflag1 &lt;- tbrdata1 %&gt;%\n  filter(is.na(bscp_hrs_since_water)) %&gt;%\n  add_column(error_type = \"Missing information on hours since last drink\") %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nE.2.5.2 Flag 2:\nCheck if there is missing information on hours since last food.\n\ntbrflag2 &lt;- tbrdata1 %&gt;%\n  filter(is.na(bscp_hrs_since_food)) %&gt;%\n  add_column(error_type = \"Missing information on hours since last food\") %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nE.2.5.3 Flag 3:\nCheck if there is missing information on hours since last caffeine intake in subjects who consume caffeine.\n\ntbrflag3 &lt;- tbrdata1 %&gt;%\n  filter(is.na(bscp_hrs_since_cafstim) & bscp_caff_cups_amt != 4) %&gt;%\n  add_column(\n    error_type = \"Missing information on hours since last caffeine\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nE.2.5.4 Flag 4:\nCheck if there is missing information on the amount of caffeine.\n\ntbrflag4 &lt;- tbrdata1 %&gt;%\n  filter(is.na(bscp_caff_cups_amt)) %&gt;%\n  add_column(error_type = \"Missing information on the amount of caffeine\") %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nE.2.5.5 Flag 5:\nCheck if there is missing information on vaccination.\n\ntbrflag5 &lt;- tbrdata1 %&gt;%\n  filter(is.na(bscp_any_vacc)) %&gt;%\n  add_column(error_type = \"Missing information on vaccination\") %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nE.2.5.6 Create Biospecimen collection form error report for the Thoracotomy cohort.\n\n# Specify the common prefix\ntbr_error &lt;- \"tbrflag\"\n\n# Find data frames in the global environment with the specified prefix\ntbr_list &lt;- mget(ls(pattern = paste0(\"^\", tbr_error)))\n\n# Combine the data frames using bind_rows\ntbr_report &lt;- bind_rows(tbr_list) %&gt;%\n  pivot_wider(names_from = \"error_type\", values_from = \"errors\") %&gt;%\n  mutate_all(~ replace_na(., \"\"))\n\n\ntbr_report %&gt;%\n  gt() %&gt;%\n  tab_header(\n    title = md(\n      \"**Thoracotomy Cohort Biospecimen collection form Error Report**\"\n    )\n  ) %&gt;%\n  tab_options(\n    table.font.size = px(12),\n    column_labels.font.size = px(12)\n  ) %&gt;%\n  tab_style(\n    style = list(cell_fill(color = \"#F4F4F4\")),\n    locations = cells_body(columns = record_id)\n  )\n\n\n\n\n\n\n\nThoracotomy Cohort Biospecimen collection form Error Report\n\n\nrecord_id\nredcap_data_access_group\nredcap_repeat_instrument\nredcap_repeat_instance\nMissing information on hours since last drink\nMissing information on hours since last food\nMissing information on hours since last caffeine\nMissing information on the amount of caffeine\nMissing information on vaccination\n\n\n\n\n20042\nuniversity_of_mich\nblood_sample_collection_and_processing_crf\n1\nerror\n\n\n\n\n\n\n20115\nuniversity_of_mich\nblood_sample_collection_and_processing_crf\n1\nerror\n\n\n\n\n\n\n20292\nuniversity_of_mich\nblood_sample_collection_and_processing_crf\n1\nerror\nerror\n\nerror\nerror\n\n\n20013\nuniversity_of_mich\nblood_sample_collection_and_processing_crf\n1\n\n\nerror\n\n\n\n\n20061\nuniversity_of_mich\nblood_sample_collection_and_processing_crf\n1\n\n\nerror\n\n\n\n\n20081\nuniversity_of_mich\nblood_sample_collection_and_processing_crf\n1\n\n\nerror\n\n\n\n\n20117\nuniversity_of_mich\nblood_sample_collection_and_processing_crf\n1\n\n\nerror\n\n\n\n\n20125\nuniversity_of_mich\nblood_sample_collection_and_processing_crf\n1\n\n\nerror\n\n\n\n\n20240\nuniversity_of_mich\nblood_sample_collection_and_processing_crf\n1\n\n\nerror\n\n\n\n\n20078\nuniversity_of_mich\nblood_sample_collection_and_processing_crf\n1\n\n\n\nerror\n\n\n\n20121\nuniversity_of_mich\nblood_sample_collection_and_processing_crf\n1\n\n\n\n\nerror\n\n\n20189\nuniversity_of_mich\nblood_sample_collection_and_processing_crf\n1\n\n\n\n\nerror\n\n\n20275\nuniversity_of_mich\nblood_sample_collection_and_processing_crf\n1\n\n\n\n\nerror\n\n\n\n\n\n\n\n\n\nE.2.5.7 Save:\nSave “thor_bio” and data dictionary as .csv files in the folder named “Reformatted”\n\nwrite_csv(\n  thor_bio,\n  file = here::here(\n    \"data\",\n    \"blood-draw\",\n    \"Reformatted\",\n    \"reformatted_thor_bio.csv\"\n  )\n)\n\nwrite_csv(\n  bio_dict,\n  file = here::here(\"data\", \"blood-draw\", \"Reformatted\", \"updated_bio_dict.csv\")\n)\n\n\n\n\nE.2.6 TKA cohort Current Medications v_02 form:\n\ntka_meds &lt;- bio %&gt;%\n  select(\n    record_id,\n    guid,\n    redcap_data_access_group,\n    redcap_event_name,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    starts_with(\"cmc\"),\n    current_medications_v02_complete,\n    cohort\n  )\n\nkeep subjects from the TKA cohort, with the most recent baseline visit.\n\ntka_meds &lt;- tka_meds %&gt;%\n  filter(cohort == \"TKA\") %&gt;%\n  filter(redcap_repeat_instrument == \"current_medications_v02\") %&gt;%\n  filter(\n    current_medications_v02_complete == 2 & !is.na(redcap_repeat_instance)\n  ) %&gt;%\n  group_by(record_id, redcap_event_name) %&gt;%\n  top_n(1, redcap_repeat_instance) %&gt;%\n  ungroup() %&gt;%\n  select(where(not_all_na))\n\n\nE.2.6.1 Save:\nSave “tka_meds” and data dictionary as .csv files in the folder named “Reformatted”\n\nwrite_csv(\n  tka_meds,\n  file = here::here(\n    \"data\",\n    \"blood-draw\",\n    \"Reformatted\",\n    \"reformatted_tka_meds.csv\"\n  )\n)\n\n\n\n\nE.2.7 Thoracotomy cohort Current Medications v_02 form:\n\nthor_meds &lt;- bio %&gt;%\n  select(\n    record_id,\n    guid,\n    redcap_data_access_group,\n    redcap_event_name,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    starts_with(\"cmc\"),\n    current_medications_v02_complete,\n    cohort\n  )\n\nkeep subjects from the TKA cohort, with the most recent baseline visit.\n\nthor_meds &lt;- thor_meds %&gt;%\n  filter(cohort == \"Thoracic\") %&gt;%\n  filter(redcap_repeat_instrument == \"current_medications_v02\") %&gt;%\n  filter(\n    current_medications_v02_complete == 2 & !is.na(redcap_repeat_instance)\n  ) %&gt;%\n  group_by(record_id, redcap_event_name) %&gt;%\n  top_n(1, redcap_repeat_instance) %&gt;%\n  ungroup() %&gt;%\n  select(where(not_all_na))\n\n\nE.2.7.1 Save:\nSave “thor_meds” and data dictionary as .csv files in the folder named “Reformatted”\n\nwrite_csv(\n  thor_meds,\n  file = here::here(\n    \"data\",\n    \"blood-draw\",\n    \"Reformatted\",\n    \"reformatted_thor_meds.csv\"\n  )\n)",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>E</span>  <span class='chapter-title'>Biospecimen Collection CRF Data Quality Checks</span>"
    ]
  },
  {
    "objectID": "FuntionalCRF_data_quality_checks_and_reformat.html",
    "href": "FuntionalCRF_data_quality_checks_and_reformat.html",
    "title": "Appendix F — Functional CRF Data Quality Checks",
    "section": "",
    "text": "F.1 Read in Data and write functions\nThis document goes over quality checks for each the Functional Testing Case Report Form (CRF). The headings in the sidebar help the user navigate to their desired content.",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>F</span>  <span class='chapter-title'>Functional CRF Data Quality Checks</span>"
    ]
  },
  {
    "objectID": "FuntionalCRF_data_quality_checks_and_reformat.html#read-in-data-and-write-functions",
    "href": "FuntionalCRF_data_quality_checks_and_reformat.html#read-in-data-and-write-functions",
    "title": "Appendix F — Functional CRF Data Quality Checks",
    "section": "",
    "text": "F.1.1 Load Libraries\n\nlibrary(shiny)\nlibrary(forcats)\nlibrary(tidyverse)\nlibrary(here)\nlibrary(hablar)\nlibrary(janitor)\nlibrary(gt)\n\n\n\nF.1.2 Function\nWrite a function to remove columns where all rows have NA, this is will remove duplicate columns for the the Thoracotomy/TKA cohort\n\nnot_all_na &lt;- function(x) any(!is.na(x))",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>F</span>  <span class='chapter-title'>Functional CRF Data Quality Checks</span>"
    ]
  },
  {
    "objectID": "FuntionalCRF_data_quality_checks_and_reformat.html#crf-quality-checks",
    "href": "FuntionalCRF_data_quality_checks_and_reformat.html#crf-quality-checks",
    "title": "Appendix F — Functional CRF Data Quality Checks",
    "section": "F.2 CRF Quality checks",
    "text": "F.2 CRF Quality checks\n\nF.2.1 functional-testing Assessment Form\n\n\nF.2.2 Read in data\nWe will call this func\n\n# read_csv function results in parsing errors, we will use read.csv instead\nfunc &lt;- read.csv(here(\"data\", \"functional-testing\", \"functional-testing-2024-11-06.csv\")) %&gt;%\n  retype()\n\nRemove test records\n\ntest_records &lt;- c(\"10000\", \"15000\", \"20000\", \"25000\", \"40000\", \"50000\", \"60000\", \"70000\", \"80000\", \"90000\", \"100000\", \"110000\", \"120000\")\n\nfunc &lt;- func %&gt;%\n  filter(!record_id %in% test_records)\n\nCreate a column for cohort type called “cohort”\n\nfunc &lt;- func %&gt;%\n  mutate(cohort = case_when(record_id &gt;= 10000 & record_id &lt; 15000 | record_id &gt;= 25000 ~ \"TKA\", TRUE ~ \"Thoracic\"))\n\n\n\nF.2.3 Data Dictionary\nRead in data dictionary and remove duplicate field names\n\nfunc_dict &lt;- read_csv(here(\"data\", \"functional-testing\", \"functional-testing-Data-Dictionary-2024-11-06.csv\")) %&gt;%\n  distinct(field_name, .keep_all = TRUE)\n\n\n\nF.2.4 New field name(s):\nAdd the field name “cohort” to the data dictionary\n\n# Create field names\ncohort_new_row &lt;- data.frame(\n  field_name = \"cohort\",\n  field_type = \"Character\",\n  field_note = \"Type of surgical cohort\",\n  select_choices_or_calculations = \"TKA,Thoracic\"\n)\n\n# Add the new row after the last row\n\nfunc_dict &lt;- func_dict %&gt;%\n  slice(1:nrow(.)) %&gt;%\n  add_row(.after = nrow(.), !!!cohort_new_row)\n\n\n\nF.2.5 TKA Functional Assessment\n\ntka_func &lt;- func %&gt;%\n  select(record_id, guid, redcap_data_access_group, redcap_event_name, redcap_repeat_instrument, redcap_repeat_instance, starts_with(\"walk\"), starts_with(\"tsts\"), functional_testing_complete, cohort)\n\n\ntka_func &lt;- tka_func %&gt;%\n  filter(cohort == \"TKA\") %&gt;%\n  filter(redcap_repeat_instrument == \"functional_testing\") %&gt;%\n  filter(functional_testing_complete == 2 & !is.na(redcap_repeat_instance)) %&gt;%\n  group_by(record_id, redcap_event_name) %&gt;%\n  top_n(1, redcap_repeat_instance) %&gt;%\n  ungroup() %&gt;%\n  select(where(not_all_na))\n\nKeep records of subjects who completed the test.\n\nfrdata3 &lt;- tka_func %&gt;%\n  filter(walk10completeyn == 1 & functional_testing_complete == 2)\n\n\nF.2.5.1 10m Walk Test:\n\nF.2.5.1.1 Flag 1:\nCheck for discrepancy or missing values in the first and the second initial pain ratings.\n\nferror1 &lt;- frdata3 %&gt;%\n  mutate(init_pain_diff = walk10initialpainscl - walk10initialpainscl1) %&gt;%\n  filter(init_pain_diff != 0 | is.na(init_pain_diff)) %&gt;%\n  add_column(error_type = \"Walk test:Discrepancy or missing values in the first and the second initial pain ratings\") %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(record_id, redcap_data_access_group, redcap_repeat_instrument, redcap_repeat_instance, error_type, errors)\n\n\n\nF.2.5.1.2 Flag 2:\nCheck for discrepancy or missing values in the first and the second final pain ratings.\n\nferror2 &lt;- frdata3 %&gt;%\n  mutate(final_pain_diff = walk10finalpainscl - walk10finalpainscl1) %&gt;%\n  filter(final_pain_diff != 0 | is.na(final_pain_diff)) %&gt;%\n  add_column(error_type = \"Walk test:Discrepancy or missing values in the first and the second initial pain ratings\") %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(record_id, redcap_data_access_group, redcap_repeat_instrument, redcap_repeat_instance, error_type, errors)\n\n\n\nF.2.5.1.3 Flag 3:\nCheck for missing values or discrepancy between the first and the second walk time.\n\nferror3 &lt;- frdata3 %&gt;%\n  retype() %&gt;%\n  mutate(walk_time_diff = walk10time - walk10time1) %&gt;%\n  filter(walk_time_diff != 0 | is.na(walk_time_diff)) %&gt;%\n  add_column(error_type = \"Walk test:Missing values or discrepancy between the first and the second walk time\") %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(record_id, redcap_data_access_group, redcap_repeat_instrument, redcap_repeat_instance, error_type, errors)\n\n\n\nF.2.5.1.4 Flag 4:\nCheck if the reason for test not completed was not specified.\n\nferror4 &lt;- tka_func %&gt;%\n  filter(walk10completeyn == 0) %&gt;%\n  filter(is.na(walk10incompletereason)) %&gt;%\n  add_column(error_type = \"Walk test:If the reason for test not completed was marked off\") %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(record_id, redcap_data_access_group, redcap_repeat_instrument, redcap_repeat_instance, error_type, errors)\n\n\n\nF.2.5.1.5 Flag 5:\nCheck for records with missing values for any assistance if the walk test was completed.\n\nferror5 &lt;- frdata3 %&gt;%\n  filter(walk10completeyn == 1) %&gt;%\n  filter(is.na(walk10assistyn)) %&gt;%\n  add_column(error_type = \"Walk test:missing values for any assistance if the walk test was completed\") %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(record_id, redcap_data_access_group, redcap_repeat_instrument, redcap_repeat_instance, error_type, errors)\n\n\n\nF.2.5.1.6 Flag 6:\nFor subjects who used any assistance during the walk test, check for records with type of assistance left “unchecked”.\n\nferror6 &lt;- frdata3 %&gt;%\n  filter(walk10assistyn == 1) %&gt;%\n  filter(walk10assist_cane___1 == 0 & walk10assist_crutch___1 == 0 & walk10assist_perssuppt___1 == 0 & walk10assist_other___1 == 0 & walk10assist_walkder___1 == 0) %&gt;%\n  add_column(error_type = \"Walk test:type of assistance unchecked\") %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(record_id, redcap_data_access_group, redcap_repeat_instrument, redcap_repeat_instance, error_type, errors)\n\n\n\n\nF.2.5.2 5 times sit to stand test (5tsts)\n\nF.2.5.2.1 Flag 7:\nCheck for missing bp values if 5tsts was completed.\n\nfrdata.sit &lt;- tka_func\n\n\nferror.bp &lt;- frdata.sit %&gt;%\n  filter(tstscompleteyn == 1 & is.na(tstsbpscreen)) %&gt;%\n  add_column(error_type = \"5tsts:missing bp values if 5tsts was completed\") %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(record_id, redcap_data_access_group, redcap_repeat_instrument, redcap_repeat_instance, error_type, errors)\n\nkeep records for subjects who completed the test.\n\nfrdata.sit1 &lt;- frdata.sit %&gt;%\n  filter(tstscompleteyn == 1 & functional_testing_complete == 2)\n\n\n\nF.2.5.2.2 Flag 8:\nCheck for discrepancy or missing values in the first and the second initial pain rating.\n\nferror1.sit &lt;- frdata.sit1 %&gt;%\n  mutate(init_pain_diff.sit = tstsprepainscl - tstsprepainscl1) %&gt;%\n  filter(init_pain_diff.sit != 0 | is.na(init_pain_diff.sit)) %&gt;%\n  add_column(error_type = \"5tsts:discrepancy or missing values for the first and the second initial pain rating \") %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(record_id, redcap_data_access_group, redcap_repeat_instrument, redcap_repeat_instance, error_type, errors)\n\n\n\nF.2.5.2.3 Flag 9:\nCheck for discrepancy or missing values in the first and the second final pain rating.\n\nferror2.sit &lt;- frdata.sit1 %&gt;%\n  mutate(final_pain_diff.sit = tstspostpainscl - tstspostpainscl1) %&gt;%\n  filter(final_pain_diff.sit != 0 | is.na(final_pain_diff.sit)) %&gt;%\n  add_column(error_type = \"5tsts:discrepancy or missing values for the first and the second final pain rating \") %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(record_id, redcap_data_access_group, redcap_repeat_instrument, redcap_repeat_instance, error_type, errors)\n\n\n\nF.2.5.2.4 Flag 10:\nCheck for discrepancy or missing values the first and the second activity time.\n\nferror3.sit &lt;- frdata.sit1 %&gt;%\n  retype() %&gt;%\n  mutate(sit_time_diff = tststime - tststime1) %&gt;%\n  filter(sit_time_diff != 0 | is.na(sit_time_diff)) %&gt;%\n  add_column(error_type = \"5tsts:discrepancy or missing values the first and the second activity time\") %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(record_id, redcap_data_access_group, redcap_repeat_instrument, redcap_repeat_instance, error_type, errors)\n\n\n\nF.2.5.2.5 Flag 11:\nCheck if the reason for test not completed was not specified.\n\nferror4.sit &lt;- frdata.sit %&gt;%\n  filter(tstscompleteyn == 0) %&gt;%\n  filter(is.na(tstsnonreasonyn)) %&gt;%\n  add_column(error_type = \"5tsts:if the reason for test not completed was not specified\") %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(record_id, redcap_data_access_group, redcap_repeat_instrument, redcap_repeat_instance, error_type, errors)\n\n\n\nF.2.5.2.6 Flag 12:\nCheck if the test was not completed but was Initiated, and the number of reps completed (n/5) were not specified)\n\nferror5.sit &lt;- frdata.sit %&gt;%\n  filter(tstscompleteyn == 0) %&gt;%\n  filter(tstsnonreasonyn == 1) %&gt;%\n  filter(is.na(tstsnumbrepsyn)) %&gt;%\n  add_column(error_type = \"5tsts:If the test was not completed but was Initiated, and the number of reps completed (n/5) were not specified\") %&gt;%\n  add_column(errors = \"none\") %&gt;%\n  select(record_id, redcap_data_access_group, redcap_repeat_instrument, redcap_repeat_instance, error_type, errors)\n\n\n\nF.2.5.2.7 Flag 13:\nCheck for records with missing values for any assistance if the test was completed.\n\nferror6.sit &lt;- frdata.sit1 %&gt;%\n  filter(tstscompleteyn == 1) %&gt;%\n  filter(is.na(tstsassistyn)) %&gt;%\n  add_column(error_type = \"5tsts:missing values for any assistance if the test was completed\") %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(record_id, redcap_data_access_group, redcap_repeat_instrument, redcap_repeat_instance, error_type, errors)\n\n\n\nF.2.5.2.8 Flag 14:\nFor subjects who used any assistance during the walk test, check for records with type of assistance left “unchecked”.\n\nferror7.sit &lt;- frdata.sit1 %&gt;%\n  filter(tstsassistyn == 1) %&gt;%\n  filter(tstsassist_1___1 == 0 & tstsassist_2___1 == 0) %&gt;%\n  add_column(error_type = \"5tsts:type of assistance unchecked\") %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(record_id, redcap_data_access_group, redcap_repeat_instrument, redcap_repeat_instance, error_type, errors)\n\n\n\nF.2.5.2.9 Biomarkers for the TKA cohort\n\nF.2.5.2.9.1 Movement Evoked Pain (MEP):\nMEP refers to pain that occurs or is worsened by movement ((Berardi et al., 2022). MEP can not be computed if any of the pain ratings are missing.\n\nBerardi, G., Frey-Law, L., Sluka, K. A., Bayman, E. O., Coffey, C. S., Ecklund, D., Vance, C. G. T., Dailey, D. L., Burns, J., Buvanendran, A., McCarthy, R. J., Jacobs, J., Zhou, X. J., Wixson, R., Balach, T., Brummett, C. M., Clauw, D., Colquhoun, D., Harte, S. E., … Wandner, L. D. (2022). Multi-site observational study to assess biomarkers for susceptibility or resilience to chronic pain: The acute to chronic pain signatures (A2CPS) study protocol. Frontiers in Medicine, 9. https://doi.org/10.3389/fmed.2022.849214\n\n\nF.2.5.2.9.2 10m Walk Test MEP:\nMEP 10m walk test= Final pain rating - Initial pain rating\n\ntka_func &lt;- tka_func %&gt;%\n  mutate(mep_walk = walk10finalpainscl - walk10initialpainscl)\n\n\n\nF.2.5.2.9.3 5TSTS Test MEP:\nMEP 5TSTS test = Final pain rating - Initial pain rating\n\ntka_func &lt;- tka_func %&gt;%\n  mutate(mep_5tsts = tstspostpainscl - tstsprepainscl)\n\n\n\n\nF.2.5.2.10 New field name(s):\nAdd field names for the computed biomarkers to the Functional Testing data dictionary\n\n# Create field names\nwalk_mep_new_row &lt;- data.frame(\n  field_name = \"mep_walk\",\n  field_type = \"numeric\",\n  field_note = \"Final pain rating - initial pain rating (10m walk test) \"\n)\n\ntsts_mep_new_row &lt;- data.frame(\n  field_name = \"mep_5tsts\",\n  field_type = \"numeric\",\n  field_note = \"Final pain rating - initial pain rating (5TSTS test)\"\n)\n\n\n\n\n# Add the new row after the last row\n\nfunc_dict &lt;- func_dict %&gt;%\n  slice(1:nrow(.)) %&gt;%\n  add_row(.after = nrow(.), !!!walk_mep_new_row) %&gt;%\n  add_row(.after = nrow(.), !!!tsts_mep_new_row)\n\n\n\nF.2.5.2.11 Create functional assessment error report for the TKA cohort.\n\n# Specify the common prefix\nfunc_error &lt;- \"ferror\"\n\n# Find data frames in the global environment with the specified prefix\nfunc_list &lt;- mget(ls(pattern = paste0(\"^\", func_error)))\n\n# Combine the data frames using bind_rows\ntka_func_report &lt;- bind_rows(func_list) %&gt;%\n  pivot_wider(names_from = \"error_type\", values_from = \"errors\") %&gt;%\n  mutate_all(~ replace_na(., \"\"))\n\n\ntka_func_report %&gt;%\n  gt() %&gt;%\n  tab_header(\n    title = md(\"**TKA Functional Assessment Error Report**\")\n  ) %&gt;%\n  tab_options(\n    table.font.size = px(12),\n    column_labels.font.size = px(12)\n  ) %&gt;%\n  tab_style(\n    style = list(cell_fill(color = \"#F4F4F4\")),\n    locations = cells_body(columns = record_id)\n  )\n\n\n\n\n\n\n\nTKA Functional Assessment Error Report\n\n\nrecord_id\nredcap_data_access_group\nredcap_repeat_instrument\nredcap_repeat_instance\n5tsts:missing bp values if 5tsts was completed\nWalk test:Discrepancy or missing values in the first and the second initial pain ratings\n5tsts:discrepancy or missing values for the first and the second initial pain rating\n5tsts:discrepancy or missing values for the first and the second final pain rating\nWalk test:Missing values or discrepancy between the first and the second walk time\n5tsts:discrepancy or missing values the first and the second activity time\nWalk test:missing values for any assistance if the walk test was completed\n5tsts:missing values for any assistance if the test was completed\n5tsts:type of assistance unchecked\n\n\n\n\n10135\nuchicago\nfunctional_testing\n1\nerror\n\n\n\n\n\n\n\n\n\n\n10308\nuchicago\nfunctional_testing\n1\nerror\n\n\n\n\nerror\n\n\n\n\n\n10341\nuchicago\nfunctional_testing\n1\nerror\n\n\n\n\n\n\n\n\n\n\n25014\nuniversity_of_mich\nfunctional_testing\n1\nerror\n\n\n\n\n\n\n\n\n\n\n25048\nuniversity_of_mich\nfunctional_testing\n1\nerror\n\n\n\n\n\n\n\n\n\n\n25051\nuniversity_of_mich\nfunctional_testing\n1\nerror\n\n\n\n\n\n\n\n\n\n\n25053\nuniversity_of_mich\nfunctional_testing\n1\nerror\n\n\n\n\n\n\nerror\n\n\n\n25081\nuniversity_of_mich\nfunctional_testing\n1\nerror\n\n\n\n\n\n\n\n\n\n\n25090\nuniversity_of_mich\nfunctional_testing\n2\nerror\n\n\n\nerror\n\n\n\n\n\n\n25095\nuniversity_of_mich\nfunctional_testing\n1\nerror\n\n\n\n\n\n\n\n\n\n\n25158\nuniversity_of_mich\nfunctional_testing\n1\nerror\n\n\n\n\n\n\n\n\n\n\n25166\nuniversity_of_mich\nfunctional_testing\n1\nerror\n\n\n\n\n\n\n\n\n\n\n25171\nuniversity_of_mich\nfunctional_testing\n2\nerror\n\n\n\n\n\n\n\n\n\n\n25224\nuniversity_of_mich\nfunctional_testing\n1\nerror\n\n\n\n\n\n\n\n\n\n\n10055\nuchicago\nfunctional_testing\n1\n\nerror\n\n\n\n\n\n\n\n\n\n10363\nuchicago\nfunctional_testing\n1\n\nerror\n\n\nerror\n\n\n\n\n\n\n10696\nuchicago\nfunctional_testing\n1\n\nerror\n\n\nerror\n\n\n\n\n\n\n10040\nuchicago\nfunctional_testing\n1\n\n\nerror\nerror\nerror\n\n\n\n\n\n\n10147\nuchicago\nfunctional_testing\n1\n\n\nerror\n\n\n\n\n\n\n\n\n10688\nnorthshore\nfunctional_testing\n1\n\n\nerror\nerror\n\nerror\n\n\n\n\n\n10598\nuchicago\nfunctional_testing\n1\n\n\n\n\nerror\n\n\n\n\n\n\n25141\nuniversity_of_mich\nfunctional_testing\n1\n\n\n\n\nerror\n\n\n\n\n\n\n10321\nuchicago\nfunctional_testing\n1\n\n\n\n\n\nerror\n\n\n\n\n\n10436\nuchicago\nfunctional_testing\n1\n\n\n\n\n\nerror\n\n\n\n\n\n25108\nuniversity_of_mich\nfunctional_testing\n2\n\n\n\n\n\n\nerror\n\n\n\n\n25204\nuniversity_of_mich\nfunctional_testing\n1\n\n\n\n\n\n\n\nerror\n\n\n\n25013\nuniversity_of_mich\nfunctional_testing\n1\n\n\n\n\n\n\n\n\nerror\n\n\n\n\n\n\n\n\n\nF.2.5.2.12 Save:\nSave “tka_func” and data dictionary as .csv files in the folder named “reformatted_functional”\n\nwrite_csv(tka_func, file = here::here(\"data\", \"functional-testing\", \"Reformatted\", \"reformatted_tka_func.csv\"))\n\nwrite_csv(func_dict, file = here::here(\"data\", \"functional-testing\", \"Reformatted\", \"updated_func_dict.csv\"))\n\n\n\n\n\nF.2.6 Thoracotomy cohort Functional Assessment:\n\nthor_func &lt;- func %&gt;%\n  select(record_id, guid, redcap_data_access_group, redcap_event_name, redcap_repeat_instrument, redcap_repeat_instance, starts_with(\"ftdbc\"), functional_testing_mcc2_v01_complete, cohort)\n\n\nthor_func &lt;- thor_func %&gt;%\n  filter(cohort == \"Thoracic\") %&gt;%\n  filter(redcap_repeat_instrument == \"functional_testing_mcc2_v01\") %&gt;%\n  filter(functional_testing_mcc2_v01_complete == 2 & !is.na(redcap_repeat_instance)) %&gt;%\n  group_by(record_id, redcap_event_name) %&gt;%\n  top_n(1, redcap_repeat_instance) %&gt;%\n  ungroup() %&gt;%\n  select(where(not_all_na))\n\nKeep records of subjects who completed the test.\n\nm2frfunc3 &lt;- thor_func %&gt;%\n  filter(ftdbctestcmpltyn == 1)\n\n\nF.2.6.0.1 Flag 1:\nCheck for discrepancy or missing values in the first and the second initial pain ratings.\n\nm2frerror1 &lt;- m2frfunc3 %&gt;%\n  mutate(init_pain_diff = ftdbcdeepbrthinitscl - ftdbcdeepbrthinitscl2) %&gt;%\n  filter(init_pain_diff != 0 | is.na(init_pain_diff)) %&gt;%\n  add_column(error_type = \"Deep breathing & coughing:Discrepancy or missing values in the first and the second initial pain ratings\") %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(record_id, redcap_data_access_group, redcap_repeat_instrument, redcap_repeat_instance, error_type, errors)\n\n\n\nF.2.6.0.2 Flag 2:\nCheck for discrepancy or missing values in the first and the second final pain ratings.\n\nm2frerror2 &lt;- m2frfunc3 %&gt;%\n  mutate(final_pain_diff = ftdbcdeepbrthfinalscl - ftdbcdeepbrthfinalscl2) %&gt;%\n  filter(final_pain_diff != 0 | is.na(final_pain_diff)) %&gt;%\n  add_column(error_type = \"Deep breathing & coughing:Discrepancy or missing values in the first and the second initial pain ratings\") %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(record_id, redcap_data_access_group, redcap_repeat_instrument, redcap_repeat_instance, error_type, errors)\n\n\n\nF.2.6.0.3 Flag 3:\nCheck for missing values or discrepancy between the first and the second cough pain.\n\nm2frerror3 &lt;- m2frfunc3 %&gt;%\n  mutate(cough_diff = ftdbccoughfinalscl - ftdbccoughfinalscl2) %&gt;%\n  filter(cough_diff != 0 | is.na(cough_diff)) %&gt;%\n  add_column(error_type = \"Deep breathing & coughing: Missing values or discrepancy between the first and the second cough pain\") %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(record_id, redcap_data_access_group, redcap_repeat_instrument, redcap_repeat_instance, error_type, errors)\n\n\n\nF.2.6.0.4 Flag 4:\nCheck if the reason for test not completed was not specified.\n\nm2frerror4 &lt;- thor_func %&gt;%\n  filter(ftdbctestcmpltyn == 0) %&gt;%\n  filter(is.na(ftdbctestcmpltno)) %&gt;%\n  add_column(error_type = \"If the reason for test not completed was not specified\") %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(record_id, redcap_data_access_group, redcap_repeat_instrument, redcap_repeat_instance, error_type, errors)\n\n\n\nF.2.6.0.5 Flag 5:\nCheck if the “functional_testing_mcc2_v01_complete” is missing but the test completion status is available.\n\nm2frerror5 &lt;- thor_func %&gt;%\n  filter(!is.na(ftdbctestcmpltyn)) %&gt;%\n  filter(is.na(functional_testing_mcc2_v01_complete)) %&gt;%\n  add_column(error_type = \"missing functional_testing_mcc2_v01_complete\") %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(record_id, redcap_data_access_group, redcap_repeat_instrument, redcap_repeat_instance, error_type, errors)\n\n\n\nF.2.6.0.6 Create functional assessment error report for the Thoracotomy cohort.\n\n# Specify the common prefix\nm2func_error &lt;- \"m2frerror\"\n\n# Find data frames in the global environment with the specified prefix\nm2func_list &lt;- mget(ls(pattern = paste0(\"^\", m2func_error)))\n\n# Combine the data frames using bind_rows\nthor_func_report &lt;- bind_rows(m2func_list) %&gt;%\n  pivot_wider(names_from = \"error_type\", values_from = \"errors\") %&gt;%\n  mutate_all(~ replace_na(., \"\"))\n\n\nthor_func_report %&gt;%\n  gt() %&gt;%\n  tab_header(\n    title = md(\"**Thoracotomy Cohort Functional Assessment Error Report: No Errors**\")\n  ) %&gt;%\n  tab_options(\n    table.font.size = px(12),\n    column_labels.font.size = px(12)\n  ) %&gt;%\n  tab_style(\n    style = list(cell_fill(color = \"#F4F4F4\")),\n    locations = cells_body(columns = record_id)\n  )\n\n\n\n\n\n\n\nThoracotomy Cohort Functional Assessment Error Report: No Errors\n\n\nrecord_id\nredcap_data_access_group\nredcap_repeat_instrument\nredcap_repeat_instance\n\n\n\n\n\n\n\n\n\n\n\nF.2.6.0.7 Biomarkers for the Thoraic cohort:\nPost baseline data is needed to compute MEP for the thoracic cohort, hence could not be computed.\n\n\nF.2.6.0.8 Save:\nSave “thor_func” and data dictionary as .csv files in the folder named “reformatted_functional”\n\nwrite_csv(thor_func, file = here::here(\"data\", \"functional-testing\", \"Reformatted\", \"reformatted_thor_func.csv\"))\nwrite_csv(func_dict, file = here::here(\"data\", \"functional-testing\", \"Reformatted\", \"updated_func_dict.csv\"))",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>F</span>  <span class='chapter-title'>Functional CRF Data Quality Checks</span>"
    ]
  },
  {
    "objectID": "ImagingCRF_data_quality_checks_and_reformat.html",
    "href": "ImagingCRF_data_quality_checks_and_reformat.html",
    "title": "Appendix G — Imaging CRF Data Quality Checks",
    "section": "",
    "text": "G.1 Read in Data and write functions\nThis document goes over quality checks for the Imaging Case Report Form (CRF). The headings in the sidebar help the user navigate to their desired content.",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>G</span>  <span class='chapter-title'>Imaging CRF Data Quality Checks</span>"
    ]
  },
  {
    "objectID": "ImagingCRF_data_quality_checks_and_reformat.html#read-in-data-and-write-functions",
    "href": "ImagingCRF_data_quality_checks_and_reformat.html#read-in-data-and-write-functions",
    "title": "Appendix G — Imaging CRF Data Quality Checks",
    "section": "",
    "text": "G.1.1 Load Libraries\n\nlibrary(shiny)\nlibrary(forcats)\nlibrary(tidyverse)\nlibrary(here)\nlibrary(hablar)\nlibrary(janitor)\nlibrary(gt)\n\n\n\nG.1.2 Function\nWrite a function to remove columns where all rows have NA, this is will remove duplicate columns for the the Thoracotomy/TKA cohort\n\nnot_all_na &lt;- function(x) any(!is.na(x))",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>G</span>  <span class='chapter-title'>Imaging CRF Data Quality Checks</span>"
    ]
  },
  {
    "objectID": "ImagingCRF_data_quality_checks_and_reformat.html#crf-quality-checks",
    "href": "ImagingCRF_data_quality_checks_and_reformat.html#crf-quality-checks",
    "title": "Appendix G — Imaging CRF Data Quality Checks",
    "section": "G.2 CRF Quality checks",
    "text": "G.2 CRF Quality checks\n\nG.2.1 Imaging Form\n\nA2CPS: Site Manual of Procedures v3.0 (pg 207)\nRead in Imaging data, We will call this img\n\nimg &lt;- read_csv(here(\"data\", \"imaging\", \"imaging-2024-11-06.csv\"))\n\nWe will read in QST data since the information on cuff contraindication is recorded in the QST data. We will later merge field names related to cuff contraindication with the imaging data.\n\n# read_csv function results in parsing errors, we will use read.csv instead\ntka_img_qst &lt;- read.csv(here(\"data\", \"QST\", \"qst-2024-11-06.csv\")) %&gt;%\n  filter(redcap_repeat_instrument == \"qst_mcc1_v03\") %&gt;%\n  select(record_id, redcap_event_name, redcap_data_access_group, redcap_repeat_instrument, redcap_repeat_instance, fmricuffcontrayn, fmricuffcalfpressure, fmricuffcalfpressure2, qst_mcc1_v03_complete) %&gt;%\n  filter(qst_mcc1_v03_complete == 2 & !is.na(redcap_repeat_instance)) %&gt;%\n  group_by(record_id, redcap_event_name) %&gt;%\n  top_n(1, redcap_repeat_instance) %&gt;%\n  ungroup() %&gt;%\n  select(where(not_all_na))\n\nWe will also read in “mask” data and call this “mask.” This data contains information on whether the baseline visit occurred before or after the question related to mask use was implemented. Where “yes” indicates that the baseline visit occurred after the question related to mask use was implemented and “no” indicates that the baseline visit occurred before the question related to mask use was implemented.\n\nmask &lt;- read_csv(here(\"data\", \"imaging\", \"mask.csv\"))\n\nRemove test records\n\ntest_records &lt;- c(\"10000\", \"15000\", \"20000\", \"25000\", \"40000\", \"50000\", \"60000\", \"70000\", \"80000\", \"90000\", \"100000\", \"110000\", \"120000\")\n\nimg &lt;- img %&gt;%\n  filter(!record_id %in% test_records)\n\nCreate a column for cohort type called “cohort”\n\nimg &lt;- img %&gt;%\n  mutate(cohort = case_when(record_id &gt;= 10000 & record_id &lt; 15000 | record_id &gt;= 25000 ~ \"TKA\", TRUE ~ \"Thoracic\"))\n\n\n\nG.2.2 Data Dictionary\nRead in data dictionary and remove duplicate field names\n\nimg_dict &lt;- read_csv(here(\"data\", \"imaging\", \"imaging-Data-Dictionary-2024-11-06.csv\")) %&gt;% distinct(field_name, .keep_all = TRUE)\n\n\n\nG.2.3 New field name(s):\nAdd the field name “cohort” and “after_mask” to the data dictionary\n\n# Create field names\ncohort_new_row &lt;- data.frame(\n  field_name = \"cohort\",\n  field_type = \"Character\",\n  field_note = \"Type of surgical cohort\",\n  select_choices_or_calculations = \"TKA,Thoracic\"\n)\n\n# Create field names\nmask_new_row &lt;- data.frame(\n  field_name = \"after_mask\",\n  field_type = \"Character\",\n  field_note = \"yes indicates that the baseline visit occurred after the question related to mask use was implemented and no indicates that the baseline visit occurred before the question related to mask use was implemented\",\n  select_choices_or_calculations = \"yes,no\"\n)\n\n# Add the new row after the last row\n\nimg_dict &lt;- img_dict %&gt;%\n  slice(1:nrow(.)) %&gt;%\n  add_row(.after = nrow(.), !!!cohort_new_row)\n\nimg_dict &lt;- img_dict %&gt;%\n  slice(1:nrow(.)) %&gt;%\n  add_row(.after = nrow(.), !!!mask_new_row)\n\nThe redcap_repeat_instance should be the same for the Imaging session and Imaging Items form. ML and BA confirmed that the following record_ids have a redcap_repeat_instance mismatch at baseline.\nTKA\n\nThoracic\n\nProposed solution for data release 2.0: For the IDs above, we compared the time stamps of the Imaging session CRF(s) and the Imaging Items form(s), and retained the Imaging items form(s) with the time stamp matching or close to the Imaging session CRF(s) dates.\n\nimg &lt;- img %&gt;%\n  filter(!(record_id == 10747 & redcap_repeat_instrument == \"imaging_items_v11\" & redcap_repeat_instance == 2)) %&gt;%\n  filter(!(record_id == 10796 & redcap_repeat_instrument == \"imaging_items_v11\" & redcap_repeat_instance == 2)) %&gt;%\n  filter(!(record_id == 25068 & redcap_repeat_instrument == \"imaging_items_v11\" & redcap_repeat_instance == 2)) %&gt;%\n  filter(!(record_id == 25079 & redcap_repeat_instrument == \"imaging_items_v11\" & redcap_repeat_instance == 2)) %&gt;%\n  filter(!(record_id == 25080 & redcap_repeat_instrument == \"imaging_items_v11\" & redcap_repeat_instance == 2)) %&gt;%\n  filter(!(record_id == 25090 & redcap_repeat_instrument == \"imaging_items_v11\" & redcap_repeat_instance == 2)) %&gt;%\n  filter(!(record_id == 25122 & redcap_repeat_instrument == \"imaging_items_v11\" & redcap_repeat_instance == 2 | redcap_repeat_instance == 3)) %&gt;%\n  filter(!(record_id == 25161 & redcap_repeat_instrument == \"imaging_items_v11\" & redcap_repeat_instance == 2)) %&gt;%\n  filter(!(record_id == 25171 & redcap_repeat_instrument == \"imaging_items_v11\" & redcap_repeat_instance == 2)) %&gt;%\n  filter(!(record_id == 25216 & redcap_repeat_instrument == \"imaging_items_v11\" & redcap_repeat_instance == 2)) %&gt;%\n  filter(!(record_id == 20226 & redcap_repeat_instrument == \"imaging_items_v01\" & redcap_repeat_instance == 2)) %&gt;%\n  filter(!(record_id == 20302 & redcap_repeat_instrument == \"imaging_items_v01\" & redcap_repeat_instance == 2)) %&gt;%\n  filter(!(record_id == 20144 & redcap_repeat_instrument == \"imaging_items_v01\" & redcap_repeat_instance == 2))\n\n\n\nG.2.4 TKA Cohort Imaging\n\ntka_img &lt;- img %&gt;%\n  select(record_id, guid, redcap_data_access_group, redcap_event_name, redcap_repeat_instrument, redcap_repeat_instance, starts_with(\"fmri\"), imaging_mcc1_v09_complete, cohort)\n\nkeep subjects from the TKA cohort, with the most recent baseline visit and merge with QST data.\n\ntka_img &lt;- tka_img %&gt;%\n  filter(cohort == \"TKA\") %&gt;%\n  filter(redcap_repeat_instrument == \"imaging_mcc1_v09\") %&gt;%\n  filter(imaging_mcc1_v09_complete == 2 & !is.na(redcap_repeat_instance)) %&gt;%\n  group_by(record_id, redcap_event_name) %&gt;%\n  top_n(1, redcap_repeat_instance) %&gt;%\n  ungroup() %&gt;%\n  select(where(not_all_na))\n\n\ntka_img &lt;- left_join(tka_img, tka_img_qst, by = intersect(names(tka_img), names(tka_img_qst)))\n\nkeep subjects marked as “Yes, all scans were completed” or “Yes, but only the scans indicated below were completed”\n\nirdf.complete &lt;- tka_img %&gt;%\n  filter(fmricuffcompletescl != 0 & imaging_mcc1_v09_complete == 2)\n\n\nG.2.4.0.1 Flag 1:\nIn subjects with cuff not contraindicated in the QST form, check if the cuff site was entered for subjects who underwent fMRI individualized pressure and/or fMRI standard pressure.\n\nirerror1 &lt;- irdf.complete %&gt;%\n  filter(fmricuffcompletescl == 1 | fmricuffcpyn == 1 | fmricuffipyn == 1) %&gt;%\n  filter(is.na(fmricuffleg) & fmricuffcontrayn != 1) %&gt;%\n  add_column(error_type = \"In subjects with cuff not contraindicated in the QST form, check if the cuff site was entered for subjects who underwent fMRI individualized pressure and/or fMRI standard pressure\") %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(record_id, redcap_data_access_group, redcap_repeat_instrument, redcap_repeat_instance, error_type, errors)\n\n\n\nG.2.4.0.2 Flag 2:\nIf some scans were completed, check if the type of completed scans were specified\n\nirerror2 &lt;- irdf.complete %&gt;%\n  filter(fmricuffcompletescl == 2 & (is.na(fmricufft1yn) | is.na(fmricuffdwiyn) | is.na(fmricuffrest1yn) |\n    is.na(fmricuffipyn) | is.na(fmricuffcpyn) | is.na(fmricuffrest2yn))) %&gt;%\n  add_column(error_type = \"some scans were completed but type was not specified\") %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(record_id, redcap_data_access_group, redcap_repeat_instrument, redcap_repeat_instance, error_type, errors)\n\n\n\nG.2.4.0.3 Flag 3:\nIn subjects marked as “Yes, all scans were completed” OR “Yes, but only the scans indicated below were completed” AND cuff was applied AND recalibration of pressure was needed, check for mismatch between recalibration pressures “fmricuffcalfpressurerecal” and “fmricuffcalfpressurerecal2” (pressure 2 double entry) or missing values.\n\nirerror3 &lt;- irdf.complete %&gt;%\n  filter(!is.na(fmricuffleg)) %&gt;%\n  filter(fmricuffcontrarecal == 1) %&gt;%\n  mutate(pressure_diff = fmricuffcalfpressurerecal - fmricuffcalfpressurerecal2) %&gt;%\n  filter(pressure_diff != 0 | is.na(pressure_diff)) %&gt;%\n  select(record_id, redcap_event_name, redcap_data_access_group, redcap_repeat_instrument, redcap_repeat_instance, fmricuffcompletescl, redcap_event_name, fmricuffcontrarecal, fmricuffleg, fmricuffcalfpressurerecal, fmricuffcalfpressurerecal2) %&gt;%\n  add_column(error_type = \"Mismatch between recalibration pressures or missing values\") %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(record_id, redcap_data_access_group, redcap_repeat_instrument, redcap_repeat_instance, error_type, errors)\n\n\n\nG.2.4.0.4 Flag 4:\nT1 Scan:\nIn subjects with T1 scanning, check if the quality of the T1 scan was rated on the first scan or the repeated scan.\n\nirerror4 &lt;- irdf.complete %&gt;%\n  filter(fmricuffcompletescl == 1 | (fmricuffcompletescl == 2 & !is.na(fmricufft1yn) & fmricufft1yn == 1)) %&gt;%\n  filter(is.na(fmricufft1techrating) | fmricufft1repeated == 1 & is.na(fmricufft1techrating2)) %&gt;%\n  select(record_id, redcap_event_name, redcap_data_access_group, redcap_repeat_instrument, redcap_repeat_instance, fmricuffcompletescl, redcap_event_name, fmricuffcontrarecal, fmricuffleg, fmricuffcalfpressurerecal, fmricuffcalfpressurerecal2) %&gt;%\n  add_column(error_type = \"T1 scan quality not rated\") %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(record_id, redcap_data_access_group, redcap_repeat_instrument, redcap_repeat_instance, error_type, errors)\n\n\n\nG.2.4.0.5 Flag 5:\nBefore first resting state:\nIn subjects with resting-state scan performed, check if there were missing values for surgical site pain or if there was a mismatch between entries for surgical site pain.\n\nirerror5 &lt;- irdf.complete %&gt;%\n  filter(fmricuffcompletescl == 1 | (fmricuffcompletescl == 2 & !is.na(fmricuffrest1yn) & fmricuffrest1yn == 1)) %&gt;%\n  mutate(surg.pain.diff1 = fmricuffrestpainss - fmricuffrestpainss2) %&gt;%\n  filter(surg.pain.diff1 != 0 | is.na(surg.pain.diff1)) %&gt;%\n  as_tibble() %&gt;%\n  add_column(error_type = \"Before resting-state scan performed: Check if there were missing values for surgical site pain or if there was a mismatch between entries for surgical site pain\") %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(record_id, redcap_data_access_group, redcap_repeat_instrument, redcap_repeat_instance, error_type, errors)\n\n\n\nG.2.4.0.6 Flag 6:\nBefore first resting state:\nIn subjects with resting-state scan performed, check if there were missing values for overall body pain or if there was a mismatch between entries for overall body pain.\n\nirerror6 &lt;- irdf.complete %&gt;%\n  filter(fmricuffcompletescl == 1 | (fmricuffcompletescl == 2 & !is.na(fmricuffrest1yn) & fmricuffrest1yn == 1)) %&gt;%\n  mutate(all.pain.diff1 = fmricuffrestpainovrall - fmricuffrestpainovrall2) %&gt;%\n  filter(all.pain.diff1 != 0 | is.na(all.pain.diff1)) %&gt;%\n  as_tibble() %&gt;%\n  add_column(error_type = \"Before resting-state scan performed, check if there were missing values for overall body pain or was a mismatch between entries for overall body pain\") %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(record_id, redcap_data_access_group, redcap_repeat_instrument, redcap_repeat_instance, error_type, errors)\n\n\n\nG.2.4.0.7 Flag 7:\nAfter first resting fMRI scan:\nIn subjects with resting-state scan performed, check if there were missing values for surgical site pain or was a mismatch between entries for surgical site pain.\n\nirerror7 &lt;- irdf.complete %&gt;%\n  filter(fmricuffcompletescl == 1 | (fmricuffcompletescl == 2 & !is.na(fmricuffrest1yn) & fmricuffrest1yn == 1)) %&gt;%\n  mutate(surg.pain.diff2 = fmricuffcurrpainaftfirstscanss - fmricuffcurrpainaftfirstscanss2) %&gt;%\n  filter(surg.pain.diff2 != 0 | is.na(surg.pain.diff2)) %&gt;%\n  as_tibble() %&gt;%\n  add_column(error_type = \"After first resting-state scan performed, check if there were missing values for surgical site pain or was a mismatch between entries for surgical site pain\") %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(record_id, redcap_data_access_group, redcap_repeat_instrument, redcap_repeat_instance, error_type, errors)\n\n\n\nG.2.4.0.8 Flag 8:\nAfter first resting fMRI scan:\nCheck if there were missing values for overall body pain or if there was a mismatch between entries for overall body pain.\n\nirerror8 &lt;- irdf.complete %&gt;%\n  filter(fmricuffcompletescl == 1 | (fmricuffcompletescl == 2 & !is.na(fmricuffrest1yn) & fmricuffrest1yn == 1)) %&gt;%\n  mutate(all.pain.diff2 = fmricuffcurrpainaftfirstscanovrall - fmricuffcurrpainaftfirstscanovrall2) %&gt;%\n  filter(all.pain.diff2 != 0 | is.na(all.pain.diff2)) %&gt;%\n  as_tibble() %&gt;%\n  add_column(error_type = \"After resting-state scan performed, check if there were missing values for overall body pain or if there was a mismatch between entries for overall body pain\") %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(record_id, redcap_data_access_group, redcap_repeat_instrument, redcap_repeat_instance, error_type, errors)\n\n\n\nG.2.4.0.9 Flag 9:\nAfter first resting fMRI scan:\nCheck if baseline cuff pain was missing in subjects with fMRI individualized and standard pressures performed (if standard and personalized/individualized were not performed, it is assumed that cuff was C/I)\n\nirerror9 &lt;- irdf.complete %&gt;%\n  filter(fmricuffcompletescl == 1 | (fmricuffcompletescl == 2 & !is.na(fmricuffrest1yn) & fmricuffrest1yn == 1)) %&gt;%\n  filter(fmricuffipyn == 1 & fmricuffcpyn == 1) %&gt;%\n  mutate(cuff.pain.diff1 = fmricuffcurrpainaftfirstscancp - fmricuffcurrpainaftfirstscancp2) %&gt;%\n  filter(cuff.pain.diff1 != 0 | is.na(cuff.pain.diff1)) %&gt;%\n  add_column(error_type = \"Check if baseline cuff pain was missing in subjects with fMRI individualized and standard pressures performed\") %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(record_id, redcap_data_access_group, redcap_repeat_instrument, redcap_repeat_instance, error_type, errors)\n\n\n\nG.2.4.0.10 Flag 10:\nAfter first cuff fMRI scan (personalized cuff pressure):\nCheck if there are missing values or mismatch between cuff pain at the beginning of the scan.\n\nirerror10 &lt;- irdf.complete %&gt;%\n  filter(fmricuffcompletescl == 1 | (fmricuffcompletescl == 2 & !is.na(fmricuffipyn) & fmricuffipyn == 1)) %&gt;%\n  mutate(cuff.begin.diff1 = fmricuffpainbegin - fmricuffpainbegin2) %&gt;%\n  filter(cuff.begin.diff1 != 0 | is.na(cuff.begin.diff1)) %&gt;%\n  add_column(error_type = \"After first cuff fMRI scan (personalized cuff pressure):check if there are missing values or mismatch between cuff pain at the beginning of the scan\") %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(record_id, redcap_data_access_group, redcap_repeat_instrument, redcap_repeat_instance, error_type, errors)\n\n\n\nG.2.4.0.11 Flag 11:\nAfter first cuff fMRI scan (personalized cuff pressure):\nCheck if there are missing values or mismatch between cuff pain during mid scan.\n\nirerror11 &lt;- irdf.complete %&gt;%\n  filter(fmricuffcompletescl == 1 | (fmricuffcompletescl == 2 & !is.na(fmricuffipyn) & fmricuffipyn == 1)) %&gt;%\n  mutate(cuff.mid.diff1 = fmricuffpainmid - fmricuffpainmid2) %&gt;%\n  filter(cuff.mid.diff1 != 0 | is.na(cuff.mid.diff1)) %&gt;%\n  as_tibble() %&gt;%\n  add_column(error_type = \"After first cuff fMRI scan (personalized cuff pressure):check if there are missing values or mismatch during mid scan\") %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(record_id, redcap_data_access_group, redcap_repeat_instrument, redcap_repeat_instance, error_type, errors)\n\n\n\nG.2.4.0.12 Flag 12:\nAfter first cuff fMRI scan (personalized cuff pressure):\nCheck if there are missing values or mismatch between cuff pain at the end of the scan.\n\nirerror12 &lt;- irdf.complete %&gt;%\n  filter(fmricuffcompletescl == 1 | (!is.na(fmricuffipyn) & fmricuffipyn == 1)) %&gt;%\n  mutate(cuff.end.diff1 = fmricuffpainend - fmricuffpainend2) %&gt;%\n  filter(cuff.end.diff1 != 0 | is.na(cuff.end.diff1)) %&gt;%\n  add_column(error_type = \"After first cuff fMRI scan (personalized cuff pressure):check if there are missing values or mismatch between cuff pain at the end of the scan\") %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(record_id, redcap_data_access_group, redcap_repeat_instrument, redcap_repeat_instance, error_type, errors)\n\n\n\nG.2.4.0.13 Flag 13:\nAfter second cuff fMRI scan (constant 120 mmHg pressure):\nCheck if there are missing values or mismatch between cuff pain at the beginning of the scan.\n\nirerror13 &lt;- irdf.complete %&gt;%\n  filter(fmricuffcompletescl == 1 | (!is.na(fmricuffcpyn) & fmricuffcpyn == 1)) %&gt;%\n  mutate(cuff.begin.diff2 = fmricuffpaincpbegin - fmricuffpaincpbegin2) %&gt;%\n  filter(cuff.begin.diff2 != 0 | is.na(cuff.begin.diff2)) %&gt;%\n  add_column(error_type = \"After second cuff fMRI scan (constant 120 mmHg pressure):Check if there are missing values or mismatch between cuff pain at the beginning of the scan\") %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(record_id, redcap_data_access_group, redcap_repeat_instrument, redcap_repeat_instance, error_type, errors)\n\n\n\nG.2.4.0.14 Flag 14:\nAfter second cuff fMRI scan (constant 120 mmHg pressure):\nCheck if there are missing values or mismatch between cuff pain during mid scan.\n\nirerror14 &lt;- irdf.complete %&gt;%\n  filter(fmricuffcompletescl == 1 | (!is.na(fmricuffcpyn) & fmricuffcpyn == 1)) %&gt;%\n  mutate(cuff.mid.diff2 = fmricuffpaincpmid - fmricuffpaincpmid2) %&gt;%\n  filter(cuff.mid.diff2 != 0 | is.na(cuff.mid.diff2)) %&gt;%\n  add_column(error_type = \"After second cuff fMRI scan (constant 120 mmHg pressure):Check if there are missing values or mismatch between cuff pain during mid scan\") %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(record_id, redcap_data_access_group, redcap_repeat_instrument, redcap_repeat_instance, error_type, errors)\n\n\n\nG.2.4.0.15 Flag 15:\nAfter second cuff fMRI scan (constant 120 mmHg pressure):\nCheck if there are missing values or mismatch between cuff pain at the end of the scan.\n\nirerror15 &lt;- irdf.complete %&gt;%\n  filter(fmricuffcompletescl == 1 | (!is.na(fmricuffcpyn) & fmricuffcpyn == 1)) %&gt;%\n  mutate(cuff.end.diff2 = fmricuffpaincpend - fmricuffpaincpend2) %&gt;%\n  filter(cuff.end.diff2 != 0 | is.na(cuff.end.diff2)) %&gt;%\n  as_tibble() %&gt;%\n  add_column(error_type = \"After second cuff fMRI scan (constant 120 mmHg pressure):Check if there are missing values or mismatch between cuff pain at the end of the scan\") %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(record_id, redcap_data_access_group, redcap_repeat_instrument, redcap_repeat_instance, error_type, errors)\n\n\n\nG.2.4.0.16 Flag 16:\nAfter last resting fMRI scan:\nCheck if there are missing values or mismatch between residual cuff pain at the beginning of the scan:\n\nirerror16 &lt;- irdf.complete %&gt;%\n  filter(fmricuffcompletescl == 1 | (!is.na(fmricuffcpyn) & fmricuffcpyn == 1 & fmricuffrest2yn == 1) | (!is.na(fmricuffipyn) & fmricuffipyn == 1 & fmricuffrest2yn == 1)) %&gt;%\n  mutate(rest.cuff.begin.diff1 = fmricuffpainrestscanbegin - fmricuffpainrestscanbegin2) %&gt;%\n  filter(rest.cuff.begin.diff1 != 0 | is.na(rest.cuff.begin.diff1)) %&gt;%\n  add_column(error_type = \"After last resting fMRI scan: Check if there are missing values or mismatch between residual cuff pain at the beginning of the scan\") %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(record_id, redcap_data_access_group, redcap_repeat_instrument, redcap_repeat_instance, error_type, errors)\n\n\n\nG.2.4.0.17 Flag 17:\nAfter last resting fMRI scan:\nCheck if there are missing values or mismatch between residual cuff pain during mid scan\n\nirerror17 &lt;- irdf.complete %&gt;%\n  filter(fmricuffcompletescl == 1 | (!is.na(fmricuffcpyn) & fmricuffcpyn == 1 & fmricuffrest2yn == 1) | (!is.na(fmricuffipyn) & fmricuffipyn == 1 & fmricuffrest2yn == 1)) %&gt;%\n  mutate(rest.cuff.mid.diff1 = fmricuffpainrestscanmid - fmricuffpainrestscanmid2) %&gt;%\n  filter(rest.cuff.mid.diff1 != 0 | is.na(rest.cuff.mid.diff1)) %&gt;%\n  add_column(error_type = \"After last resting fMRI scan: Check if there are missing values or mismatch between residual cuff pain during mid scan\") %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(record_id, redcap_data_access_group, redcap_repeat_instrument, redcap_repeat_instance, error_type, errors)\n\n\n\nG.2.4.0.18 Flag 18:\nAfter last resting fMRI scan:\nCheck if there are missing values or mismatch between residual cuff pain at the end of the scan:\n\nirerror18 &lt;- irdf.complete %&gt;%\n  filter(fmricuffcompletescl == 1 | (!is.na(fmricuffcpyn) & fmricuffcpyn == 1 & fmricuffrest2yn == 1) | (!is.na(fmricuffipyn) & fmricuffipyn == 1 & fmricuffrest2yn == 1)) %&gt;%\n  mutate(rest.cuff.end.diff1 = fmricuffpainrestscanend - fmricuffpainrestscanend2) %&gt;%\n  filter(rest.cuff.end.diff1 != 0 | is.na(rest.cuff.end.diff1)) %&gt;%\n  add_column(error_type = \"After last resting fMRI scan: Check if there are missing values or mismatch between residual cuff pain at the end of the scan\") %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(record_id, redcap_data_access_group, redcap_repeat_instrument, redcap_repeat_instance, error_type, errors)\n\n\n\nG.2.4.0.19 Flag 19:\nAfter last resting fMRI scan:\nCheck if there are missing values or mismatch between surgical site pain\n\nirerror19 &lt;- irdf.complete %&gt;%\n  filter((!is.na(fmricuffrest2yn) & fmricuffrest2yn == 1) | fmricuffcompletescl == 1) %&gt;%\n  mutate(surg.diff3 = fmricuffpainaftlastscanss - fmricuffpainaftlastscanss2) %&gt;%\n  filter(surg.diff3 != 0 | is.na(surg.diff3)) %&gt;%\n  add_column(error_type = \"After last resting fMRI scan: Check if there are missing values or mismatch between surgical site pain\") %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(record_id, redcap_data_access_group, redcap_repeat_instrument, redcap_repeat_instance, error_type, errors)\n\n\n\nG.2.4.0.20 Flag 20:\nAfter last resting fMRI scan: Check if there are missing values or mismatch between overall body pain.\n\nirerror20 &lt;- irdf.complete %&gt;%\n  filter((!is.na(fmricuffrest2yn) & fmricuffrest2yn == 1) | fmricuffcompletescl == 1) %&gt;%\n  mutate(body.diff3 = fmricuffpainaftlastscanany - fmricuffpainaftlastscanany2) %&gt;%\n  filter(body.diff3 != 0 | is.na(body.diff3)) %&gt;%\n  add_column(error_type = \"After last resting fMRI scan:Check if there are missing values or mismatch between overall body pain\") %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(record_id, redcap_data_access_group, redcap_repeat_instrument, redcap_repeat_instance, error_type, errors)\n\n\n\nG.2.4.0.21 Flag 21:\nIf a visit is marked complete and DICOM files were uploaded, check if “Test Completed” (fmricuffcompletescl) is missing.\n\nirerror21 &lt;- tka_img %&gt;%\n  filter(imaging_mcc1_v09_complete == 2) %&gt;%\n  filter(is.na(fmricuffcompletescl)) %&gt;%\n  filter(fmricuffdicuploaded == 1) %&gt;%\n  as_tibble() %&gt;%\n  add_column(error_type = \"IF a visit is marked complete and DICOM files were uploaded, check if  Test Completed (fmricuffcompletescl) is missing\") %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(record_id, redcap_data_access_group, redcap_repeat_instrument, redcap_repeat_instance, error_type, errors)\n\n\n\nG.2.4.0.22 Flag 22\nCheck if any of the scans were completed but information on “mask worn” was missing. We will first merge with the “mask” data to account for visits that occurred before the question related to make use was implemented.\n\ntka_img &lt;- left_join(tka_img, mask, by = intersect(names(tka_img), names(mask)))\n\nirerror22 &lt;- tka_img %&gt;%\n  filter(imaging_mcc1_v09_complete == 2) %&gt;%\n  filter(fmricuffcompletescl == 1 | fmricufft1yn == 1 | fmricuffdwiyn == 1 | fmricuffrest1yn == 1 |\n    fmricuffipyn == 1 | fmricuffcpyn == 1 | fmricuffrest2yn == 1) %&gt;%\n  filter(is.na(fmri_face_mask)) %&gt;%\n  add_column(error_type = \"Check if any of the scans were completed but information on mask worn was missing\") %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  filter(after_mask == \"yes\") %&gt;%\n  select(record_id, redcap_data_access_group, redcap_repeat_instrument, redcap_repeat_instance, error_type, errors)\n\n\n\nG.2.4.0.23 Create Imaging error report for the TKA cohort.\n\n# Specify common prefix\nm1img_error &lt;- \"irerror\"\n\n# Find data frames in the global environment with the specified prefix\nm1img_list &lt;- mget(ls(pattern = paste0(\"^\", m1img_error)))\n\n# Combine the data frames using bind_rows\nm1img_report &lt;- bind_rows(m1img_list) %&gt;%\n  pivot_wider(names_from = \"error_type\", values_from = \"errors\") %&gt;%\n  mutate_all(~ replace_na(., \"\"))\n\n\nm1img_report %&gt;%\n  gt() %&gt;%\n  tab_header(\n    title = md(\"**TKA Imaging Error Report**\")\n  ) %&gt;%\n  tab_options(\n    table.font.size = px(12),\n    column_labels.font.size = px(12)\n  ) %&gt;%\n  tab_style(\n    style = list(cell_fill(color = \"#F4F4F4\")),\n    locations = cells_body(columns = record_id)\n  )\n\n\n\n\n\n\n\nTKA Imaging Error Report\n\n\nrecord_id\nredcap_data_access_group\nredcap_repeat_instrument\nredcap_repeat_instance\nAfter first cuff fMRI scan (personalized cuff pressure):check if there are missing values or mismatch between cuff pain at the beginning of the scan\nAfter first cuff fMRI scan (personalized cuff pressure):check if there are missing values or mismatch during mid scan\nAfter first cuff fMRI scan (personalized cuff pressure):check if there are missing values or mismatch between cuff pain at the end of the scan\nAfter second cuff fMRI scan (constant 120 mmHg pressure):Check if there are missing values or mismatch between cuff pain at the beginning of the scan\nAfter second cuff fMRI scan (constant 120 mmHg pressure):Check if there are missing values or mismatch between cuff pain during mid scan\nAfter second cuff fMRI scan (constant 120 mmHg pressure):Check if there are missing values or mismatch between cuff pain at the end of the scan\nAfter last resting fMRI scan: Check if there are missing values or mismatch between residual cuff pain at the beginning of the scan\nAfter last resting fMRI scan: Check if there are missing values or mismatch between residual cuff pain during mid scan\nAfter last resting fMRI scan: Check if there are missing values or mismatch between residual cuff pain at the end of the scan\nAfter last resting fMRI scan: Check if there are missing values or mismatch between surgical site pain\nAfter last resting fMRI scan:Check if there are missing values or mismatch between overall body pain\nCheck if any of the scans were completed but information on mask worn was missing\nT1 scan quality not rated\nBefore resting-state scan performed: Check if there were missing values for surgical site pain or if there was a mismatch between entries for surgical site pain\nBefore resting-state scan performed, check if there were missing values for overall body pain or was a mismatch between entries for overall body pain\nAfter first resting-state scan performed, check if there were missing values for surgical site pain or was a mismatch between entries for surgical site pain\nAfter resting-state scan performed, check if there were missing values for overall body pain or if there was a mismatch between entries for overall body pain\n\n\n\n\n10135\nuchicago\nimaging_mcc1_v09\n1\nerror\nerror\nerror\n\n\n\n\n\n\n\n\n\nerror\nerror\nerror\nerror\nerror\n\n\n10506\nuchicago\nimaging_mcc1_v09\n1\nerror\nerror\nerror\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n25048\nuniversity_of_mich\nimaging_mcc1_v09\n1\nerror\nerror\nerror\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n10182\nnorthshore\nimaging_mcc1_v09\n1\n\nerror\nerror\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n10428\nnorthshore\nimaging_mcc1_v09\n1\n\nerror\nerror\n\nerror\nerror\n\n\n\n\n\n\n\n\n\n\n\n\n\n10789\nuchicago\nimaging_mcc1_v09\n1\n\nerror\nerror\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n10095\nnorthshore\nimaging_mcc1_v09\n1\n\n\nerror\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n10513\nuchicago\nimaging_mcc1_v09\n1\n\n\n\nerror\nerror\nerror\n\n\n\n\n\n\n\n\n\n\n\n\n\n10732\nuchicago\nimaging_mcc1_v09\n1\n\n\n\n\nerror\nerror\n\n\n\n\n\n\n\n\n\n\n\n\n\n10350\nuchicago\nimaging_mcc1_v09\n1\n\n\n\n\n\n\nerror\nerror\nerror\nerror\nerror\n\n\n\n\n\n\n\n\n25029\nuniversity_of_mich\nimaging_mcc1_v09\n1\n\n\n\n\n\n\nerror\nerror\nerror\nerror\nerror\n\n\n\n\n\n\n\n\n10416\nuchicago\nimaging_mcc1_v09\n1\n\n\n\n\n\n\n\n\n\n\n\nerror\n\n\n\n\n\n\n\n10809\nrush_university_me\nimaging_mcc1_v09\n1\n\n\n\n\n\n\n\n\n\n\n\nerror\nerror\nerror\nerror\nerror\nerror\n\n\n25009\nuniversity_of_mich\nimaging_mcc1_v09\n1\n\n\n\n\n\n\n\n\n\n\n\nerror\n\n\n\n\n\n\n\n25059\nuniversity_of_mich\nimaging_mcc1_v09\n1\n\n\n\n\n\n\n\n\n\n\n\nerror\n\n\n\n\n\n\n\n25068\nuniversity_of_mich\nimaging_mcc1_v09\n1\n\n\n\n\n\n\n\n\n\n\n\nerror\n\n\n\n\n\n\n\n25099\nuniversity_of_mich\nimaging_mcc1_v09\n1\n\n\n\n\n\n\n\n\n\n\n\nerror\n\n\n\n\n\n\n\n25120\nuniversity_of_mich\nimaging_mcc1_v09\n1\n\n\n\n\n\n\n\n\n\n\n\nerror\n\n\n\n\n\n\n\n10067\nuchicago\nimaging_mcc1_v09\n1\n\n\n\n\n\n\n\n\n\n\n\n\nerror\n\n\nerror\nerror\n\n\n10235\nuchicago\nimaging_mcc1_v09\n1\n\n\n\n\n\n\n\n\n\n\n\n\nerror\n\n\n\n\n\n\n10237\nuchicago\nimaging_mcc1_v09\n1\n\n\n\n\n\n\n\n\n\n\n\n\nerror\n\n\n\n\n\n\n10282\nrush_university_me\nimaging_mcc1_v09\n1\n\n\n\n\n\n\n\n\n\n\n\n\nerror\n\n\n\n\n\n\n10423\nuchicago\nimaging_mcc1_v09\n1\n\n\n\n\n\n\n\n\n\n\n\n\nerror\n\n\n\n\n\n\n10706\nuchicago\nimaging_mcc1_v09\n1\n\n\n\n\n\n\n\n\n\n\n\n\nerror\n\n\n\n\n\n\n10591\nuchicago\nimaging_mcc1_v09\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\nerror\nerror\n\n\n\n\n10598\nuchicago\nimaging_mcc1_v09\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\nerror\nerror\n\n\n\n\n10610\nuchicago\nimaging_mcc1_v09\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\nerror\nerror\n\n\n\n\n25039\nuniversity_of_mich\nimaging_mcc1_v09\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\nerror\n\n\n\n\n\n10040\nuchicago\nimaging_mcc1_v09\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nerror\nerror\n\n\n10335\nuchicago\nimaging_mcc1_v09\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nerror\nerror\n\n\n10603\nuchicago\nimaging_mcc1_v09\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nerror\nerror\n\n\n25046\nuniversity_of_mich\nimaging_mcc1_v09\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nerror\n\n\n\n\n\n\n\n\n\nG.2.4.0.24 Save:\nSave “tka_img” and updated data dictionary as .csv filea in the folder named “reformatted_imaging”\n\nwrite_csv(tka_img, file = here::here(\"data\", \"imaging\", \"Reformatted\", \"reformatted_tka_img.csv\"))\n\nwrite_csv(img_dict, file = here::here(\"data\", \"imaging\", \"Reformatted\", \"updated_img_dict.csv\"))\n\n\n\n\nG.2.5 Thoracotomy Cohort Imaging\n\nthor_img &lt;- img %&gt;%\n  select(record_id, guid, redcap_data_access_group, redcap_event_name, redcap_repeat_instrument, redcap_repeat_instance, starts_with(\"fmri\"), imaging_mcc2_v01_complete, cohort)\n# read_csv function results in parsing errors, we will use read.csv instead\nthor_img_qst &lt;- read.csv(here(\"data\", \"QST\", \"qst-2024-11-06.csv\")) %&gt;%\n  filter(redcap_repeat_instrument == \"qst_mcc1_v03\" & !is.na(redcap_repeat_instance)) %&gt;%\n  select(record_id, redcap_event_name, redcap_data_access_group, redcap_repeat_instrument, redcap_repeat_instance, cuffpfmricontrainddomyn, cuffpfmricontraindyn, fmricuffcalfpressure, fmricuffcalfpressure2, qst_mcc1_v03_complete) %&gt;%\n  filter(qst_mcc1_v03_complete == 2) %&gt;%\n  group_by(record_id, redcap_event_name) %&gt;%\n  top_n(1, redcap_repeat_instance) %&gt;%\n  ungroup() %&gt;%\n  select(where(not_all_na))\n\nkeep subjects from the Thoracotomy cohort, with the most recent baseline visit and merge with QST data\n\nthor_img &lt;- thor_img %&gt;%\n  filter(cohort == \"Thoracic\") %&gt;%\n  filter(redcap_repeat_instrument == \"imaging_mcc2_v01\") %&gt;%\n  filter(imaging_mcc2_v01_complete == 2 & !is.na(redcap_repeat_instance)) %&gt;%\n  group_by(record_id, redcap_event_name) %&gt;%\n  top_n(1, redcap_repeat_instance) %&gt;%\n  ungroup() %&gt;%\n  select(where(not_all_na))\n\n\nthor_img &lt;- left_join(thor_img, thor_img_qst, by = intersect(names(thor_img), names(thor_img_qst)))\n\nkeep subjects marked as “Yes, all scans were completed” or “Yes, but only the scans indicated below were completed” for fmricuffcompletescl.\n\ntirdf.complete &lt;- thor_img %&gt;%\n  filter(fmricuffcompletescl != 0 & imaging_mcc2_v01_complete == 2)\n\n\nG.2.5.0.1 Flag 1:\nIn subjects with cuff not contraindicated in the QST form, check if cuff site was entered for subjects who underwent fMRI individualized pressure and/or fMRI standard pressure.\n\ntirerror1 &lt;- tirdf.complete %&gt;%\n  filter(fmricuffcompletescl == 1 | fmricuffspyn == 1 | fmricuffipyn == 1) %&gt;%\n  filter(is.na(fmricuffleg) & (cuffpfmricontrainddomyn != 1 | cuffpfmricontraindyn != 1)) %&gt;%\n  add_column(error_type = \"In subjects with cuff not contraindicated in the QST form, check if cuff site was entered for subjects who underwent fMRI individualized pressure and/or fMRI standard pressure\") %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(record_id, redcap_data_access_group, redcap_repeat_instrument, redcap_repeat_instance, error_type, errors)\n\n\n\nG.2.5.0.2 Flag 2:\nIf some scans were completed, check if the type of completed scans were specified\n\ntirerror2 &lt;- tirdf.complete %&gt;%\n  filter(fmricuffcompletescl == 2 & (is.na(fmricufft1yn) | is.na(fmricuffdwiyn) | is.na(fmricuffrest1yn) | is.na(fmricuffipyn) | is.na(fmricuffspyn) | is.na(fmricuffrest2yn))) %&gt;%\n  add_column(error_type = \"some scans were completed but type was not specified\") %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(record_id, redcap_data_access_group, redcap_repeat_instrument, redcap_repeat_instance, error_type, errors)\n\n\n\nG.2.5.0.3 Flag 3:\nIn subjects marked as “Yes, all scans were completed” OR “Yes, but only the scans indicated below were completed” AND cuff was applied AND recalibration of pressure was needed, check for mismatch between recalibration pressures “fmricuffcalfpressurerecal” and “fmricuffcalfpressurerecal2” (pressure 2 double entry) or missing values.\n\ntirerror3 &lt;- tirdf.complete %&gt;%\n  filter(!is.na(fmricuffleg)) %&gt;%\n  filter(fmricuffcontrarecal == 1) %&gt;%\n  mutate(pressure_diff = fmricuffcalfpressurerecal - fmricuffcalfpressurerecal2) %&gt;%\n  filter(pressure_diff != 0 | is.na(pressure_diff)) %&gt;%\n  select(record_id, redcap_event_name, redcap_data_access_group, redcap_repeat_instrument, redcap_repeat_instance, fmricuffcompletescl, redcap_event_name, fmricuffcontrarecal, fmricuffleg, fmricuffcalfpressurerecal, fmricuffcalfpressurerecal2) %&gt;%\n  add_column(error_type = \"Mismatch between recalibration pressures or missing values\") %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(record_id, redcap_data_access_group, redcap_repeat_instrument, redcap_repeat_instance, error_type, errors)\n\n\n\nG.2.5.0.4 Flag 4:\nT1 Scan:\nIn subjects with T1 scanning, check if the quality of the T1 scan was rated on the first scan or the repeated scan.\n\ntirerror4 &lt;- tirdf.complete %&gt;%\n  filter(fmricuffcompletescl == 1 | (fmricuffcompletescl == 2 & !is.na(fmricufft1yn) & fmricufft1yn == 1)) %&gt;%\n  filter(is.na(fmricufft1techrating) | fmricufft1repeated == 1 & is.na(fmricufft1techrating2)) %&gt;%\n  select(record_id, redcap_event_name, redcap_data_access_group, redcap_repeat_instrument, redcap_repeat_instance, fmricuffcompletescl, redcap_event_name, fmricuffcontrarecal, fmricuffleg, fmricuffcalfpressurerecal, fmricuffcalfpressurerecal2) %&gt;%\n  add_column(error_type = \"T1 scan quality not rated\") %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(record_id, redcap_data_access_group, redcap_repeat_instrument, redcap_repeat_instance, error_type, errors)\n\n\n\nG.2.5.0.5 Flag 5:\nBefore first resting state:\nIn subjects with resting-state scan performed, check if there were missing values for surgical site pain or if there was a mismatch between entries for surgical site pain.\n\ntirerror5 &lt;- tirdf.complete %&gt;%\n  filter(fmricuffcompletescl == 1 | (fmricuffcompletescl == 2 & !is.na(fmricuffrest1yn) & fmricuffrest1yn == 1)) %&gt;%\n  mutate(surg.pain.diff1 = fmricuffrestpainss - fmricuffrestpainss2) %&gt;%\n  filter(surg.pain.diff1 != 0 | is.na(surg.pain.diff1)) %&gt;%\n  as_tibble() %&gt;%\n  add_column(error_type = \"Before resting-state scan performed: Check if there were missing values for surgical site pain or if there was a mismatch between entries for surgical site pain\") %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(record_id, redcap_data_access_group, redcap_repeat_instrument, redcap_repeat_instance, error_type, errors)\n\n\n\nG.2.5.0.6 Flag 6:\nBefore first resting state:\nIn subjects with resting-state scan performed, check if there were missing values for overall body pain or if there was a mismatch between entries for overall body pain.\n\ntirerror6 &lt;- tirdf.complete %&gt;%\n  filter(fmricuffcompletescl == 1 | (fmricuffcompletescl == 2 & !is.na(fmricuffrest1yn) & fmricuffrest1yn == 1)) %&gt;%\n  mutate(all.pain.diff1 = fmricuffrestpainovrall - fmricuffrestpainovrall2) %&gt;%\n  filter(all.pain.diff1 != 0 | is.na(all.pain.diff1)) %&gt;%\n  as_tibble() %&gt;%\n  add_column(error_type = \"Before resting-state scan performed, check if there were missing values for overall body pain or was a mismatch between entries for overall body pain\") %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(record_id, redcap_data_access_group, redcap_repeat_instrument, redcap_repeat_instance, error_type, errors)\n\n\n\nG.2.5.0.7 Flag 7:\nAfter first resting fMRI scan:\nIn subjects with resting-state scan performed, check if there were missing values for surgical site pain or was a mismatch between entries for surgical site pain.\n\ntirerror7 &lt;- tirdf.complete %&gt;%\n  filter(fmricuffcompletescl == 1 | (fmricuffcompletescl == 2 & !is.na(fmricuffrest1yn) & fmricuffrest1yn == 1)) %&gt;%\n  mutate(surg.pain.diff2 = fmricuffcurrpainaftfirstscanss - fmricuffcurrpainaftfirstscanss2) %&gt;%\n  filter(surg.pain.diff2 != 0 | is.na(surg.pain.diff2)) %&gt;%\n  as_tibble() %&gt;%\n  add_column(error_type = \"After first resting-state scan performed, check if there were missing values for surgical site pain or was a mismatch between entries for surgical site pain\") %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(record_id, redcap_data_access_group, redcap_repeat_instrument, redcap_repeat_instance, error_type, errors)\n\n\n\nG.2.5.0.8 Flag 8:\nAfter first resting fMRI scan:\nCheck if there were missing values for overall body pain or if there was a mismatch between entries for overall body pain.\n\ntirerror8 &lt;- tirdf.complete %&gt;%\n  filter(fmricuffcompletescl == 1 | (fmricuffcompletescl == 2 & !is.na(fmricuffrest1yn) & fmricuffrest1yn == 1)) %&gt;%\n  mutate(all.pain.diff2 = fmricuffcurrpainaftfirstscanovrall - fmricuffcurrpainaftfirstscanovrall2) %&gt;%\n  filter(all.pain.diff2 != 0 | is.na(all.pain.diff2)) %&gt;%\n  as_tibble() %&gt;%\n  add_column(error_type = \"After resting-state scan performed, check if there were missing values for overall body pain or if was a mismatch between entries  for overall body pain\") %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(record_id, redcap_data_access_group, redcap_repeat_instrument, redcap_repeat_instance, error_type, errors)\n\n\n\nG.2.5.0.9 Flag 9:\nAfter first resting fMRI scan:\nCheck if baseline cuff pain was missing in subjects with fMRI individualized and standard pressures performed (if standard and personalized/individualized were not performed, it is assumed that cuff was C/I)\n\ntirerror9 &lt;- tirdf.complete %&gt;%\n  filter(fmricuffcompletescl == 1 | (fmricuffcompletescl == 2 & !is.na(fmricuffrest1yn) & fmricuffrest1yn == 1)) %&gt;%\n  filter(fmricuffipyn == 1 & fmricuffspyn == 1) %&gt;%\n  mutate(cuff.pain.diff1 = fmricuffcurrpainaftfirstscancuff - fmricuffcurrpainaftfirstscancuff2) %&gt;%\n  filter(cuff.pain.diff1 != 0 | is.na(cuff.pain.diff1)) %&gt;%\n  add_column(error_type = \"Check if baseline cuff pain was missing in subjects with fMRI individualized and standard pressures performed\") %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(record_id, redcap_data_access_group, redcap_repeat_instrument, redcap_repeat_instance, error_type, errors)\n\n\n\nG.2.5.0.10 Flag 10:\nAfter first cuff fMRI scan (personalized cuff pressure):\nCheck if there are missing values or mismatch between cuff pain at the beginning of the scan.\n\ntirerror10 &lt;- tirdf.complete %&gt;%\n  filter(fmricuffcompletescl == 1 | (fmricuffcompletescl == 2 & !is.na(fmricuffipyn) & fmricuffipyn == 1)) %&gt;%\n  mutate(cuff.begin.diff1 = fmricuffpainbegin - fmricuffpainbegin2) %&gt;%\n  filter(cuff.begin.diff1 != 0 | is.na(cuff.begin.diff1)) %&gt;%\n  add_column(error_type = \"After first cuff fMRI scan (personalized cuff pressure):check if there are missing values or mismatch between cuff pain at the beginning of the scan\") %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(record_id, redcap_data_access_group, redcap_repeat_instrument, redcap_repeat_instance, error_type, errors)\n\n\n\nG.2.5.0.11 Flag 11:\nAfter first cuff fMRI scan (personalized cuff pressure):\nCheck if there are missing values or mismatch between cuff pain during mid scan.\n\ntirerror11 &lt;- tirdf.complete %&gt;%\n  filter(fmricuffcompletescl == 1 | (fmricuffcompletescl == 2 & !is.na(fmricuffipyn) & fmricuffipyn == 1)) %&gt;%\n  mutate(cuff.mid.diff1 = fmricuffpainmid - fmricuffpainmid2) %&gt;%\n  filter(cuff.mid.diff1 != 0 | is.na(cuff.mid.diff1)) %&gt;%\n  as_tibble() %&gt;%\n  add_column(error_type = \"After first cuff fMRI scan (personalized cuff pressure):check if there are missing values or mismatch during mid scan\") %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(record_id, redcap_data_access_group, redcap_repeat_instrument, redcap_repeat_instance, error_type, errors)\n\n\n\nG.2.5.0.12 Flag 12:\nAfter first cuff fMRI scan (personalized cuff pressure):\nCheck if there are missing values or mismatch between cuff pain at the end of the scan.\n\ntirerror12 &lt;- tirdf.complete %&gt;%\n  filter(fmricuffcompletescl == 1 | (!is.na(fmricuffipyn) & fmricuffipyn == 1)) %&gt;%\n  mutate(cuff.end.diff1 = fmricuffpainend - fmricuffpainend2) %&gt;%\n  filter(cuff.end.diff1 != 0 | is.na(cuff.end.diff1)) %&gt;%\n  add_column(error_type = \"After first cuff fMRI scan (personalized cuff pressure):check if there are missing values or mismatch between cuff pain at the end of the scan\") %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(record_id, redcap_data_access_group, redcap_repeat_instrument, redcap_repeat_instance, error_type, errors)\n\n\n\nG.2.5.0.13 Flag 13:\nAfter second cuff fMRI scan (constant 120 mmHg pressure):\nCheck if there are missing values or mismatch between cuff pain at the beginning of the scan.\n\ntirerror13 &lt;- tirdf.complete %&gt;%\n  filter(fmricuffcompletescl == 1 | (!is.na(fmricuffspyn) & fmricuffspyn == 1)) %&gt;%\n  mutate(cuff.begin.diff2 = fmricuffpaincpbegin - fmricuffpaincpbegin2) %&gt;%\n  filter(cuff.begin.diff2 != 0 | is.na(cuff.begin.diff2)) %&gt;%\n  add_column(error_type = \"After second cuff fMRI scan (constant 120 mmHg pressure):Check if there are missing values or mismatch between cuff pain at the beginning of the scan\") %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(record_id, redcap_data_access_group, redcap_repeat_instrument, redcap_repeat_instance, error_type, errors)\n\n\n\nG.2.5.0.14 Flag 14:\nAfter second cuff fMRI scan (constant 120 mmHg pressure):\nCheck if there are missing values or mismatch between cuff pain during mid scan.\n\ntirerror14 &lt;- tirdf.complete %&gt;%\n  filter(fmricuffcompletescl == 1 | (!is.na(fmricuffspyn) & fmricuffspyn == 1)) %&gt;%\n  mutate(cuff.mid.diff2 = fmricuffpaincpmid - fmricuffpaincpmid2) %&gt;%\n  filter(cuff.mid.diff2 != 0 | is.na(cuff.mid.diff2)) %&gt;%\n  add_column(error_type = \"After second cuff fMRI scan (constant 120 mmHg pressure):Check if there are missing values or mismatch between cuff pain during mid scan\") %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(record_id, redcap_data_access_group, redcap_repeat_instrument, redcap_repeat_instance, error_type, errors)\n\n\n\nG.2.5.0.15 Flag 15:\nAfter second cuff fMRI scan (constant 120 mmHg pressure):\nCheck if there are missing values or mismatch between cuff pain at the end of the scan.\n\ntirerror15 &lt;- tirdf.complete %&gt;%\n  filter(fmricuffcompletescl == 1 | (!is.na(fmricuffspyn) & fmricuffspyn == 1)) %&gt;%\n  mutate(cuff.end.diff2 = fmricuffpaincpend - fmricuffpaincpend2) %&gt;%\n  filter(cuff.end.diff2 != 0 | is.na(cuff.end.diff2)) %&gt;%\n  as_tibble() %&gt;%\n  add_column(error_type = \"After second cuff fMRI scan (constant 120 mmHg pressure):Check if there are missing values or mismatch between cuff pain at the end of the scan\") %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(record_id, redcap_data_access_group, redcap_repeat_instrument, redcap_repeat_instance, error_type, errors)\n\n\n\nG.2.5.0.16 Flag 16:\nAfter last resting fMRI scan:\nCheck if there are missing values or mismatch between residual cuff pain at the beginning of the scan:\n\ntirerror16 &lt;- tirdf.complete %&gt;%\n  filter(fmricuffcompletescl == 1 | (!is.na(fmricuffspyn) & fmricuffspyn == 1 & fmricuffrest2yn == 1) | (!is.na(fmricuffipyn) & fmricuffipyn == 1 & fmricuffrest2yn == 1)) %&gt;%\n  mutate(rest.cuff.begin.diff1 = fmricuffpainrestscanbegin - fmricuffpainrestscanbegin2) %&gt;%\n  filter(rest.cuff.begin.diff1 != 0 | is.na(rest.cuff.begin.diff1)) %&gt;%\n  add_column(error_type = \"After last resting fMRI scan: Check if there are missing values or mismatch between residual cuff pain at the beginning of the scan\") %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(record_id, redcap_data_access_group, redcap_repeat_instrument, redcap_repeat_instance, error_type, errors)\n\n\n\nG.2.5.0.17 Flag 17:\nAfter last resting fMRI scan:\nCheck if there are missing values or mismatch between residual cuff pain during mid scan.\n\ntirerror17 &lt;- tirdf.complete %&gt;%\n  filter(fmricuffcompletescl == 1 | (!is.na(fmricuffspyn) & fmricuffspyn == 1 & fmricuffrest2yn == 1) | (!is.na(fmricuffipyn) & fmricuffipyn == 1 & fmricuffrest2yn == 1)) %&gt;%\n  mutate(rest.cuff.mid.diff1 = fmricuffpainrestscanmid - fmricuffpainrestscanmid2) %&gt;%\n  filter(rest.cuff.mid.diff1 != 0 | is.na(rest.cuff.mid.diff1)) %&gt;%\n  add_column(error_type = \"After last resting fMRI scan: Check if there are missing values or mismatch between residual cuff pain during mid scan\") %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(record_id, redcap_data_access_group, redcap_repeat_instrument, redcap_repeat_instance, error_type, errors)\n\n\n\nG.2.5.0.18 Flag 18:\nAfter last resting fMRI scan:\nCheck if there are missing values or mismatch between residual cuff pain at the end of the scan.\n\ntirerror18 &lt;- tirdf.complete %&gt;%\n  filter(fmricuffcompletescl == 1 | (!is.na(fmricuffspyn) & fmricuffspyn == 1 & fmricuffrest2yn == 1) | (!is.na(fmricuffipyn) & fmricuffipyn == 1 & fmricuffrest2yn == 1)) %&gt;%\n  mutate(rest.cuff.end.diff1 = fmricuffpainrestscanend - fmricuffpainrestscanend2) %&gt;%\n  filter(rest.cuff.end.diff1 != 0 | is.na(rest.cuff.end.diff1)) %&gt;%\n  add_column(error_type = \"After last resting fMRI scan: Check if there are missing values or mismatch between residual cuff pain at the end of the scan\") %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(record_id, redcap_data_access_group, redcap_repeat_instrument, redcap_repeat_instance, error_type, errors)\n\n\n\nG.2.5.0.19 Flag 19:\nAfter last resting fMRI scan:\nCheck if there are missing values or mismatch between surgical site pain\n\ntirerror19 &lt;- tirdf.complete %&gt;%\n  filter((!is.na(fmricuffrest2yn) & fmricuffrest2yn == 1) | fmricuffcompletescl == 1) %&gt;%\n  mutate(surg.diff3 = fmricuffpainaftlastscanss - fmricuffpainaftlastscanss2) %&gt;%\n  filter(surg.diff3 != 0 | is.na(surg.diff3)) %&gt;%\n  add_column(error_type = \"After last resting fMRI scan: Check if there are missing values or mismatch between surgical site pain\") %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(record_id, redcap_data_access_group, redcap_repeat_instrument, redcap_repeat_instance, error_type, errors)\n\n\n\nG.2.5.0.20 Flag 20:\nAfter last resting fMRI scan: Check if there are missing values or mismatch between overall body pain.\n\ntirerror20 &lt;- tirdf.complete %&gt;%\n  filter((!is.na(fmricuffrest2yn) & fmricuffrest2yn == 1) | fmricuffcompletescl == 1) %&gt;%\n  mutate(body.diff3 = fmricuffpainaftlastscanany - fmricuffpainaftlastscanany2) %&gt;%\n  filter(body.diff3 != 0 | is.na(body.diff3)) %&gt;%\n  add_column(error_type = \"After last resting fMRI scan:Check if there are missing values or mismatch between overall body pain\") %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(record_id, redcap_data_access_group, redcap_repeat_instrument, redcap_repeat_instance, error_type, errors)\n\n\n\nG.2.5.0.21 Flag 21:\nIF a visit is marked complete and DICOM files were uploaded, check if “Test Completed” (fmricuffcompletescl) is missing.\n\ntirerror21 &lt;- thor_img %&gt;%\n  filter(imaging_mcc2_v01_complete == 2) %&gt;%\n  filter(is.na(fmricuffcompletescl)) %&gt;%\n  filter(fmricuffdicuploaded == 1) %&gt;%\n  as_tibble() %&gt;%\n  add_column(error_type = \"If a visit is marked complete and DICOM files were uploaded, check if  Test Completed (fmricuffcompletescl) is missing\") %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(record_id, redcap_data_access_group, redcap_repeat_instrument, redcap_repeat_instance, error_type, errors)\n\n\n\nG.2.5.0.22 Flag 22\nCheck if any of the scans were completed but information on “mask worn” was missing. We will first merge with the “mask” data to account for visits that occurred before the question related to make use was implemented.\n\nthor_img &lt;- left_join(thor_img, mask, by = intersect(names(thor_img), names(mask)))\n\n\ntirerror22 &lt;- thor_img %&gt;%\n  filter(imaging_mcc2_v01_complete == 2) %&gt;%\n  filter(fmricuffcompletescl == 1 | fmricufft1yn == 1 | fmricuffdwiyn == 1 | fmricuffrest1yn == 1 |\n    fmricuffipyn == 1 | fmricuffspyn == 1 | fmricuffrest2yn == 1) %&gt;%\n  filter(is.na(fmri_face_mask)) %&gt;%\n  add_column(error_type = \"Check if any of the scans were completed but information on mask worn was missing\") %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  filter(after_mask == \"yes\") %&gt;%\n  select(record_id, redcap_data_access_group, redcap_repeat_instrument, redcap_repeat_instance, error_type, errors)\n\n\n\nG.2.5.0.23 Create Imaging error report for the Thoracotomy cohort.\n\n# Specify common prefix\nm2img_error &lt;- \"tirerror\"\n\n# Find data frames in the global environment with the specified prefix\nm2img_list &lt;- mget(ls(pattern = paste0(\"^\", m2img_error)))\n\n# Combine the data frames using bind_rows\nm2img_report &lt;- bind_rows(m2img_list) %&gt;%\n  pivot_wider(names_from = \"error_type\", values_from = \"errors\") %&gt;%\n  mutate_all(~ replace_na(., \"\"))\n\n\nm2img_report %&gt;%\n  gt() %&gt;%\n  tab_header(\n    title = md(\"**Thoracotomy Cohort Imaging Error Report**\")\n  ) %&gt;%\n  tab_options(\n    table.font.size = px(12),\n    column_labels.font.size = px(12)\n  ) %&gt;%\n  tab_style(\n    style = list(cell_fill(color = \"#F4F4F4\")),\n    locations = cells_body(columns = record_id)\n  )\n\n\n\n\n\n\n\nThoracotomy Cohort Imaging Error Report\n\n\nrecord_id\nredcap_data_access_group\nredcap_repeat_instrument\nredcap_repeat_instance\nAfter first cuff fMRI scan (personalized cuff pressure):check if there are missing values or mismatch during mid scan\nAfter first cuff fMRI scan (personalized cuff pressure):check if there are missing values or mismatch between cuff pain at the end of the scan\nAfter second cuff fMRI scan (constant 120 mmHg pressure):Check if there are missing values or mismatch between cuff pain at the beginning of the scan\nAfter second cuff fMRI scan (constant 120 mmHg pressure):Check if there are missing values or mismatch between cuff pain during mid scan\nAfter second cuff fMRI scan (constant 120 mmHg pressure):Check if there are missing values or mismatch between cuff pain at the end of the scan\nAfter last resting fMRI scan: Check if there are missing values or mismatch between residual cuff pain at the beginning of the scan\nAfter last resting fMRI scan: Check if there are missing values or mismatch between residual cuff pain during mid scan\nAfter last resting fMRI scan: Check if there are missing values or mismatch between residual cuff pain at the end of the scan\nAfter last resting fMRI scan:Check if there are missing values or mismatch between overall body pain\nCheck if any of the scans were completed but information on mask worn was missing\nT1 scan quality not rated\nAfter first resting-state scan performed, check if there were missing values for surgical site pain or was a mismatch between entries for surgical site pain\nAfter resting-state scan performed, check if there were missing values for overall body pain or if was a mismatch between entries for overall body pain\n\n\n\n\n20252\nuniversity_of_mich\nimaging_mcc2_v01\n1\nerror\nerror\n\n\n\nerror\nerror\n\n\n\n\n\n\n\n\n20018\nuniversity_of_mich\nimaging_mcc2_v01\n1\n\nerror\n\n\n\n\n\n\n\n\n\n\n\n\n\n20214\nspectrum_health\nimaging_mcc2_v01\n1\n\nerror\n\n\n\n\n\n\n\n\n\n\n\n\n\n20336\nuniversity_of_mich\nimaging_mcc2_v01\n1\n\nerror\n\n\n\n\n\n\n\n\n\n\n\n\n\n20016\nuniversity_of_mich\nimaging_mcc2_v01\n1\n\n\nerror\nerror\nerror\n\n\n\n\n\n\n\n\n\n\n20046\nuniversity_of_mich\nimaging_mcc2_v01\n1\n\n\n\n\nerror\n\n\n\n\n\n\n\n\n\n\n20004\nuniversity_of_mich\nimaging_mcc2_v01\n1\n\n\n\n\n\nerror\nerror\nerror\n\n\nerror\n\n\n\n\n20128\nuniversity_of_mich\nimaging_mcc2_v01\n1\n\n\n\n\n\n\n\n\nerror\nerror\n\n\n\n\n\n20043\nuniversity_of_mich\nimaging_mcc2_v01\n1\n\n\n\n\n\n\n\n\n\nerror\n\n\n\n\n\n20049\nuniversity_of_mich\nimaging_mcc2_v01\n1\n\n\n\n\n\n\n\n\n\nerror\n\n\n\n\n\n20175\nuniversity_of_mich\nimaging_mcc2_v01\n1\n\n\n\n\n\n\n\n\n\nerror\n\n\n\n\n\n20311\nuniversity_of_mich\nimaging_mcc2_v01\n1\n\n\n\n\n\n\n\n\n\nerror\n\n\n\n\n\n20317\nuniversity_of_mich\nimaging_mcc2_v01\n1\n\n\n\n\n\n\n\n\n\nerror\n\n\n\n\n\n20378\nspectrum_health\nimaging_mcc2_v01\n1\n\n\n\n\n\n\n\n\n\nerror\n\n\n\n\n\n20390\nspectrum_health\nimaging_mcc2_v01\n1\n\n\n\n\n\n\n\n\n\nerror\n\n\n\n\n\n20007\nuniversity_of_mich\nimaging_mcc2_v01\n1\n\n\n\n\n\n\n\n\n\n\nerror\n\n\n\n\n20153\nspectrum_health\nimaging_mcc2_v01\n1\n\n\n\n\n\n\n\n\n\n\nerror\n\n\n\n\n20319\nspectrum_health\nimaging_mcc2_v01\n1\n\n\n\n\n\n\n\n\n\n\nerror\n\n\n\n\n20130\nuniversity_of_mich\nimaging_mcc2_v01\n1\n\n\n\n\n\n\n\n\n\n\n\nerror\nerror\n\n\n\n\n\n\n\n\n\nG.2.5.0.24 Save:\nSave “thor_img” and data dictionary as .csv files in the folder named “reformatted_imaging”\n\nwrite_csv(thor_img, file = here::here(\"data\", \"imaging\", \"Reformatted\", \"reformatted_thor_img.csv\"))\n\nwrite_csv(img_dict, file = here::here(\"data\", \"imaging\", \"Reformatted\", \"updated_img_dict.csv\"))\n\n\n\n\nG.2.6 TKA cohort Imaging Items v1.1 form:\n\ntka_img_items &lt;- img %&gt;%\n  select(record_id, guid, redcap_data_access_group, redcap_event_name, redcap_repeat_instrument, redcap_repeat_instance, starts_with(\"img\"), imaging_items_v11_complete, cohort)\n\nkeep subjects from the TKA cohort, with the most recent baseline visit.\n\ntka_img_items &lt;- tka_img_items %&gt;%\n  filter(cohort == \"TKA\") %&gt;%\n  filter(redcap_repeat_instrument == \"imaging_items_v11\") %&gt;%\n  filter(imaging_items_v11_complete == 2 & !is.na(redcap_repeat_instance)) %&gt;%\n  group_by(record_id, redcap_event_name) %&gt;%\n  top_n(1, redcap_repeat_instance) %&gt;%\n  ungroup() %&gt;%\n  select(where(not_all_na))\n\n\nG.2.6.0.1 Save:\nSave “tka_img_items” and data dictionary as .csv files in the folder named “Reformatted”\n\nwrite_csv(tka_img_items, file = here::here(\"data\", \"imaging\", \"Reformatted\", \"reformatted_tka_img_items.csv\"))\n\n\n\n\nG.2.7 Thoracotomy cohort Imaging Items v1.1 form: form:\n\nthor_img_items &lt;- img %&gt;%\n  select(record_id, guid, redcap_data_access_group, redcap_event_name, redcap_repeat_instrument, redcap_repeat_instance, starts_with(\"img\"), imaging_items_v01_complete, cohort)\n\nkeep subjects from the TKA cohort, with the most recent baseline visit.\n\nthor_img_items &lt;- thor_img_items %&gt;%\n  filter(cohort == \"Thoracic\") %&gt;%\n  filter(redcap_repeat_instrument == \"imaging_items_v01\") %&gt;%\n  filter(imaging_items_v01_complete == 2 & !is.na(redcap_repeat_instance)) %&gt;%\n  group_by(record_id, redcap_event_name) %&gt;%\n  top_n(1, redcap_repeat_instance) %&gt;%\n  ungroup() %&gt;%\n  select(where(not_all_na))\n\n\nG.2.7.0.1 Save:\nSave “thor_meds” and data dictionary as .csv files in the folder named “Reformatted”\n\nwrite_csv(thor_img_items, file = here::here(\"data\", \"imaging\", \"Reformatted\", \"reformatted_thor_img_items.csv\"))",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>G</span>  <span class='chapter-title'>Imaging CRF Data Quality Checks</span>"
    ]
  },
  {
    "objectID": "QSTCRF_data_quality_checks_and_reformat.html",
    "href": "QSTCRF_data_quality_checks_and_reformat.html",
    "title": "Appendix H — QST CRF Data Quality Checks",
    "section": "",
    "text": "H.1 Read in Data and write functions\nThis document goes over quality checks for the QST Case Report Form (CRF). The headings in the sidebar help the user navigate to their desired content.",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>H</span>  <span class='chapter-title'>QST CRF Data Quality Checks</span>"
    ]
  },
  {
    "objectID": "QSTCRF_data_quality_checks_and_reformat.html#read-in-data-and-write-functions",
    "href": "QSTCRF_data_quality_checks_and_reformat.html#read-in-data-and-write-functions",
    "title": "Appendix H — QST CRF Data Quality Checks",
    "section": "",
    "text": "H.1.1 Load Libraries\n\nlibrary(shiny)\nlibrary(forcats)\nlibrary(tidyverse)\nlibrary(here)\nlibrary(hablar)\nlibrary(janitor)\nlibrary(gt)\n\n\n\nH.1.2 Function\nWrite a function to remove columns where all rows have NA, this is will remove duplicate columns for the the Thoracotomy/TKA cohort\n\nnot_all_na &lt;- function(x) any(!is.na(x))",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>H</span>  <span class='chapter-title'>QST CRF Data Quality Checks</span>"
    ]
  },
  {
    "objectID": "QSTCRF_data_quality_checks_and_reformat.html#crf-quality-checks",
    "href": "QSTCRF_data_quality_checks_and_reformat.html#crf-quality-checks",
    "title": "Appendix H — QST CRF Data Quality Checks",
    "section": "H.2 CRF Quality checks",
    "text": "H.2 CRF Quality checks\n\nH.2.1 Quantitative Sensory Testing (QST)\nRead in QST data, We will call this qst\n\nqst &lt;- read.csv(here(\"data\", \"qst\", \"qst-2024-11-06.csv\")) %&gt;%\n  retype()\n\nWe will also read in Imaging data since the information on recalibration is recorded in the Imaging CRF. We will later merge field names related to recalibration with the imaging data.\n\ntka_img_4_qst &lt;- read.csv(here(\"data\", \"imaging\", \"imaging-2024-11-06.csv\")) %&gt;%\n  filter(redcap_repeat_instrument == \"imaging_mcc1_v09\") %&gt;%\n  select(\n    record_id,\n    redcap_event_name,\n    redcap_data_access_group,\n    redcap_repeat_instance,\n    fmricuffcontrarecal,\n    fmricuffcalfpressurerecal,\n    fmricuffipyn,\n    fmricuffcompletescl,\n    imaging_mcc1_v09_complete\n  ) %&gt;%\n  filter(imaging_mcc1_v09_complete == 2 & !is.na(redcap_repeat_instance)) %&gt;%\n  group_by(record_id, redcap_event_name) %&gt;%\n  top_n(1, redcap_repeat_instance) %&gt;%\n  ungroup() %&gt;%\n  select(where(not_all_na))\n\nRemove test records\n\ntest_records &lt;- c(\n  \"10000\",\n  \"15000\",\n  \"20000\",\n  \"25000\",\n  \"40000\",\n  \"50000\",\n  \"60000\",\n  \"70000\",\n  \"80000\",\n  \"90000\",\n  \"100000\",\n  \"110000\",\n  \"120000\"\n)\n\nqst &lt;- qst %&gt;%\n  filter(!record_id %in% test_records)\n\nCreate a column for cohort type called “cohort”\n\nqst &lt;- qst %&gt;%\n  mutate(\n    cohort = case_when(\n      record_id &gt;= 10000 & record_id &lt; 15000 | record_id &gt;= 25000 ~ \"TKA\",\n      TRUE ~ \"Thoracic\"\n    )\n  )\n\n\n\nH.2.2 Data Dictionary\nRead in data dictionary and remove duplicate field names\n\nqst_dict &lt;- read_csv(here(\n  \"data\",\n  \"qst\",\n  \"qst-Data-Dictionary-2024-11-06.csv\"\n)) %&gt;%\n  distinct(field_name, .keep_all = TRUE)\n\n\n\nH.2.3 New field name(s):\nAdd the field name “cohort” to the data dictionary\n\n# Create field names\ncohort_new_row &lt;- data.frame(\n  field_name = \"cohort\",\n  field_type = \"Character\",\n  field_note = \"Type of surgical cohort\",\n  select_choices_or_calculations = \"TKA,Thoracic\"\n)\n\n\n# Add the new row after the last row\n\nqst_dict &lt;- qst_dict %&gt;%\n  slice(1:nrow(.)) %&gt;%\n  add_row(.after = nrow(.), !!!cohort_new_row)\n\n\n\nH.2.4 TKA QST\n\ntka_qst &lt;- qst\n\nkeep subjects from the TKA cohort, with the most recent baseline visit and merge with QST data.\n\ntka_qst &lt;- tka_qst %&gt;%\n  filter(cohort == \"TKA\") %&gt;%\n  filter(redcap_repeat_instrument == \"qst_mcc1_v03\") %&gt;%\n  filter(qst_mcc1_v03_complete == 2 & !is.na(redcap_repeat_instance)) %&gt;%\n  group_by(record_id, redcap_event_name) %&gt;%\n  top_n(1, redcap_repeat_instance) %&gt;%\n  ungroup() %&gt;%\n  select(where(not_all_na))\n\n\ntka_qst &lt;- left_join(\n  tka_qst,\n  tka_img_4_qst,\n  by = intersect(names(tka_qst), names(tka_img_4_qst))\n)\n\n\n\nH.2.5 Pressure Pain Thresholds (PPT)\nkeep subjects with completed QST and PPT test completed.\n\nqdata2 &lt;- tka_qst %&gt;%\n  filter(qst_mcc1_v03_complete == 2) %&gt;%\n  filter(pptcompleteyn == 2 | pptcompleteyn == 1 | pptcompleteyn == 3)\n\n\nH.2.5.0.1 Flag 1:\nCheck if the location of index site was entered [both sites =1 OR 3 = Index site (med/lat joint line)].\n\nqerror1 &lt;- qdata2 %&gt;%\n  filter(pptcompleteyn == 1 | pptcompleteyn == 3) %&gt;%\n  filter(is.na(pptpainlocation)) %&gt;%\n  add_column(error_type = \"Location of index site not entered\") %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.5.0.2 Flag 2:\nRemote site (contralateral deltoid)\nCheck for missing or mismatch in PPT ratings for Remote site.\nRepetition 1:\n\nqerror2 &lt;- qdata2 %&gt;%\n  filter(pptcompleteyn == 1 | pptcompleteyn == 2) %&gt;%\n  mutate(ppt_contr_diff1 = pptremote1val - pptremote1val1) %&gt;%\n  filter(ppt_contr_diff1 != 0 | is.na(ppt_contr_diff1)) %&gt;%\n  add_column(\n    error_type = \"PPT Repetition 1:Missing or mismatch in PPT ratings for Remote site\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.5.0.3 Flag 3:\nRepetition 2:\n\nqerror3 &lt;- qdata2 %&gt;%\n  filter(pptcompleteyn == 1 | pptcompleteyn == 2) %&gt;%\n  mutate(ppt_contr_diff2 = pptremote2val - pptremote2val1) %&gt;%\n  filter(ppt_contr_diff2 != 0 | is.na(ppt_contr_diff2)) %&gt;%\n  add_column(\n    error_type = \"PPT repetition 2:Missing or mismatch in PPT ratings for Remote site\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.5.0.4 Flag 4:\nRepetition 3:\n\nqerror4 &lt;- qdata2 %&gt;%\n  filter(pptcompleteyn == 1 | pptcompleteyn == 2) %&gt;%\n  mutate(ppt_contr_diff3 = pptremote3val - pptremote3val1) %&gt;%\n  filter(ppt_contr_diff3 != 0 | is.na(ppt_contr_diff3)) %&gt;%\n  add_column(\n    error_type = \"PPT repetition 3:Missing or mismatch in PPT ratings for Remote site\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.5.0.5 Flag 5:\nIndex site (med/lat joint line)\nCheck for missing or mismatch in PPT ratings for the index site.\nRepetition 1:\n\nqerror5 &lt;- qdata2 %&gt;%\n  filter(pptcompleteyn == 1 | pptcompleteyn == 3) %&gt;%\n  mutate(ppt_index_diff1 = pptindex1val - pptindex1val1) %&gt;%\n  filter(ppt_index_diff1 != 0 | is.na(ppt_index_diff1)) %&gt;%\n  add_column(\n    error_type = \"PPT Repetition 1:Missing or mismatch in PPT ratings for the index site\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.5.0.6 Flag 6:\nRepetition 2:\n\nqerror6 &lt;- qdata2 %&gt;%\n  filter(pptcompleteyn == 1 | pptcompleteyn == 3) %&gt;%\n  mutate(ppt_index_diff2 = pptindex2val - pptindex2val1) %&gt;%\n  filter(ppt_index_diff2 != 0 | is.na(ppt_index_diff2)) %&gt;%\n  add_column(\n    error_type = \"PPT Repetition 2:Missing or mismatch in PPT ratings for the index site\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.5.0.7 Flag 7:\nRepetition 3:\n\nqerror7 &lt;- qdata2 %&gt;%\n  filter(pptcompleteyn == 1 | pptcompleteyn == 3) %&gt;%\n  mutate(ppt_index_diff3 = pptindex3val - pptindex3val1) %&gt;%\n  filter(ppt_index_diff3 != 0 | is.na(ppt_index_diff3)) %&gt;%\n  add_column(\n    error_type = \"PPT Repetition 3:Missing or mismatch in PPT ratings for the index site\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.5.0.8 Flag 8:\nCheck if PPT was performed on remote site (pptcompleteyn == 2) but PPT information was filled out for the index site.\n\nqerror8 &lt;- qdata2 %&gt;%\n  filter(pptcompleteyn == 2) %&gt;%\n  mutate(\n    index1 = case_when(\n      (!is.na(pptindex1val) & !is.na(pptindex1val1)) |\n        (!is.na(pptindex2val) & !is.na(pptindex2val1)) |\n        (!is.na(pptindex3val) & !is.na(pptindex3val1)) ~\n        1,\n      TRUE ~ 0\n    )\n  ) %&gt;%\n  filter(index1 == 1) %&gt;%\n  add_column(\n    error_type = \"PPT: Remote site was checked but PPT information was filled out for the index site\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.5.0.9 Flag 9:\nCheck if PPT was performed on both sites (pptcompleteyn == 1) but PPT information was not filled out for the index site.\n\nqerror9 &lt;- qdata2 %&gt;%\n  filter(pptcompleteyn == 1) %&gt;%\n  mutate(\n    index2 = case_when(\n      (is.na(pptindex1val) & is.na(pptindex1val1)) |\n        (is.na(pptindex2val) & is.na(pptindex2val1)) |\n        (is.na(pptindex3val) & is.na(pptindex3val1)) ~\n        1,\n      TRUE ~ 0\n    )\n  ) %&gt;%\n  filter(index2 == 1) %&gt;%\n  add_column(\n    error_type = \"PPT: Both sites were checked but PPT information was not filled out for the index site\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.5.0.10 Flag 10:\nCheck if PPT was performed on the index site (pptcompleteyn == 3) but PPT information was filled out for the remote site\n\nqerror10 &lt;- qdata2 %&gt;%\n  filter(pptcompleteyn == 3) %&gt;%\n  mutate(\n    remote1 = case_when(\n      (!is.na(pptremote1val) & !is.na(pptremote1val1)) |\n        (!is.na(pptremote2val) & !is.na(pptremote2val1)) |\n        (!is.na(pptremote3val) & !is.na(pptremote3val1)) ~\n        1,\n      TRUE ~ 0\n    )\n  ) %&gt;%\n  filter(remote1 == 1) %&gt;%\n  add_column(\n    error_type = \"PPT: Index site was checked but PPT information was filled out for the remote site\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.5.0.11 Flag 11:\nCheck if PPT was performed on the both sites (pptcompleteyn == 1) but PPT information was not filled out for the remote site\n\nqerror11 &lt;- qdata2 %&gt;%\n  filter(pptcompleteyn == 1) %&gt;%\n  mutate(\n    remote2 = case_when(\n      (is.na(pptremote1val) & is.na(pptremote1val1)) |\n        (is.na(pptremote2val) & is.na(pptremote2val1)) |\n        (is.na(pptremote3val) & is.na(pptremote3val1)) ~\n        1,\n      TRUE ~ 0\n    )\n  ) %&gt;%\n  filter(remote2 == 1) %&gt;%\n  add_column(\n    error_type = \"PPT: Both sites were checked but PPT information was not filled out for the remote site\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.5.0.12 Flag 12:\nCheck if information was available to compute mean PPT values at the index site = primary data point (A2CPS: Site Manual of Procedures v3.0, pg. 154).\n\nqerror12 &lt;- qdata2 %&gt;%\n  filter((pptcompleteyn == 1 | pptcompleteyn == 3)) %&gt;%\n  rowwise() %&gt;%\n  mutate(mean1 = mean(c(pptindex1val, pptindex2val, pptindex3val))) %&gt;%\n  filter(is.na(mean1)) %&gt;%\n  add_column(\n    error_type = \"PPT: Not enough information was available to compute mean PPT values at the index site\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.5.0.13 Flag 13:\nCheck if information was available to compute mean PPT values at the remote site = secondary data point (A2CPS: Site Manual of Procedures v3.0, pg. 154).\n\nqerror13 &lt;- qdata2 %&gt;%\n  filter((pptcompleteyn == 1 | pptcompleteyn == 2)) %&gt;%\n  rowwise() %&gt;%\n  mutate(mean2 = mean(c(pptremote1val, pptremote2val, pptremote3val))) %&gt;%\n  filter(is.na(mean2)) %&gt;%\n  add_column(\n    error_type = \"PPT: Not enough information was available to compute mean PPT values at the remote site\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\n\nH.2.6 Temporal Summation (TS):\nKeep subjects with completed QST and TS test.\n\ntr.complete &lt;- tka_qst %&gt;%\n  filter(qst_mcc1_v03_complete == 2) %&gt;%\n  filter(tscompleted == 2 | tscompleted == 1 | tscompleted == 3)\n\nIf TS was completed for both sites then information on at least 1 repetition for both sites should be available.\nCreate a field name for each repetition (initial and final) and assign 1 if at least one repetition has information without mismatch errors or missingness.\n\ntka_ts_recoded &lt;- tr.complete %&gt;%\n  mutate(ts_contr_init1 = tsrep1initialpainrem - tsrep1initialpainrem_d) %&gt;%\n  mutate(ts_contr_fin1 = tsrep1finalpainrem - tsrep1finalpainrem_d) %&gt;%\n  mutate(ts_contr_init2 = tsrep2initialpainrem - tsrep2initialpainrem_d) %&gt;%\n  mutate(ts_contr_fin2 = tsrep2finalpainrem - tsrep2finalpainrem_d) %&gt;%\n  mutate(ts_contr_init3 = tsinitialpainremsclr3 - tsinitialpainremscl1r3) %&gt;%\n  mutate(ts_contr_fin3 = tsfinalpainremsclr3 - tsfinalpainremscl1r3) %&gt;%\n  mutate(\n    trrep1 = case_when(\n      (tscompleted == 1 | tscompleted == 2) &\n        ts_contr_init1 == 0 &\n        ts_contr_fin1 == 0 ~\n        1,\n      TRUE ~ 0\n    )\n  ) %&gt;%\n  mutate(\n    trrep2 = case_when(\n      (tscompleted == 1 | tscompleted == 2) &\n        ts_contr_init2 == 0 &\n        ts_contr_fin2 == 0 ~\n        1,\n      TRUE ~ 0\n    )\n  ) %&gt;%\n  mutate(\n    trrep3 = case_when(\n      (tscompleted == 1 | tscompleted == 2) &\n        ts_contr_init3 == 0 &\n        ts_contr_fin3 == 0 ~\n        1,\n      TRUE ~ 0\n    )\n  ) %&gt;%\n  mutate(ts_ind_init1 = tsrep1initialpainindex - tsrep1initialpainindex_d) %&gt;%\n  mutate(ts_ind_fin1 = tsrep1finalpainindex - tsrep1finalpainindex_d) %&gt;%\n  mutate(ts_ind_init2 = tsinitialpainindexsclr2 - tsinitialpainindexscl1r2) %&gt;%\n  mutate(ts_ind_fin2 = tsfinalpainindexsclr2 - tsfinalpainindexscl1r2) %&gt;%\n  mutate(ts_ind_init3 = tsinitialpainindexsclr3 - tsinitialpainindexscl1r3) %&gt;%\n  mutate(ts_ind_fin3 = tsfinalpainindexsclr3 - tsfinalpainindexscl1r3) %&gt;%\n  mutate(\n    indrep1 = case_when(\n      (tscompleted == 1 | tscompleted == 3) &\n        ts_ind_init1 == 0 &\n        ts_ind_fin1 == 0 ~\n        1,\n      TRUE ~ 0\n    )\n  ) %&gt;%\n  mutate(\n    indrep2 = case_when(\n      (tscompleted == 1 | tscompleted == 3) &\n        ts_ind_init2 == 0 &\n        ts_ind_fin2 == 0 ~\n        1,\n      TRUE ~ 0\n    )\n  ) %&gt;%\n  mutate(\n    indrep3 = case_when(\n      (tscompleted == 1 | tscompleted == 3) &\n        ts_ind_init3 == 0 &\n        ts_ind_fin3 == 0 ~\n        1,\n      TRUE ~ 0\n    )\n  ) %&gt;%\n  mutate(\n    one_rem = case_when(trrep1 == 1 | trrep2 == 1 | trrep3 ~ 1, TRUE ~ 0)\n  ) %&gt;%\n  mutate(\n    one_ind = case_when(indrep1 == 1 | indrep2 == 1 | indrep3 ~ 1, TRUE ~ 0)\n  ) %&gt;%\n  mutate(one_rep = case_when(one_rem == 1 & one_ind == 1 ~ 1, TRUE ~ 0))\n\n\nH.2.6.0.1 Flag 14:\nCheck if TS was completed for both sites and at least 1 repetition for both sites had no mismatch errors or missing data.\n\nqerror14 &lt;- tka_ts_recoded %&gt;%\n  filter(tscompleted == 1 & one_rep == 0) %&gt;%\n  add_column(\n    error_type = \"TS:TS was completed for both sites and at least 1 repetition for both sites had no mismatch errors or missing data\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.6.0.2 Flag 15:\nCheck if TS was completed for the remote site and at least 1 repetition had no mismatch errors or missing data.\n\nqerror15 &lt;- tka_ts_recoded %&gt;%\n  filter(tscompleted == 2 & one_rem == 0) %&gt;%\n  add_column(\n    error_type = \"TS:TS was completed for the remote site and at least 1 repetition had no mismatch errors or missing data\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.6.0.3 Flag 16:\nCheck if TS was completed for the index site and at least 1 repetition had no mismatch errors or missing data.\n\nqerror16 &lt;- tka_ts_recoded %&gt;%\n  filter(tscompleted == 3 & one_ind == 0) %&gt;%\n  add_column(\n    error_type = \"TS:TS was completed for the index site and at least 1 repetition had no mismatch errors or missing data\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.6.0.4 Flag 17\nCheck for missing after sensation at 15 secs if TS Remote site (contralateral deltoid) was completed\n\nqerror17 &lt;- tr.complete %&gt;%\n  filter(tscompleted == 1 | tscompleted == 2) %&gt;%\n  filter(is.na(tsfinalpainremafts15)) %&gt;%\n  add_column(\n    error_type = \"TS: Missing after sensation at 15 secs if TS Remote site (contralateral deltoid) was completed\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.6.0.5 Flag 18\nCheck for missing after sensation at 30 secs if TS Remote site (contralateral deltoid) was completed\n\nqerror18 &lt;- tr.complete %&gt;%\n  filter(tscompleted == 1 | tscompleted == 2) %&gt;%\n  filter(is.na(tsfinalpainremafts30)) %&gt;%\n  add_column(\n    error_type = \"TS: Missing after sensation at 30 secs if TS Remote site (contralateral deltoid) was completed\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.6.0.6 Flag 19\nCheck for missing after sensation at 15 secs if TS Index site (med/lat knee) was completed\n\nqerror19 &lt;- tr.complete %&gt;%\n  filter(tscompleted == 1 | tscompleted == 3) %&gt;%\n  filter(is.na(tsfinalpainindafts15)) %&gt;%\n  add_column(\n    error_type = \"TS: Missing after sensation at 15 secs if TS Index site (med/lat knee) was completed\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.6.0.7 Flag 20\nCheck for missing after sensation at 30 secs if TS Index site (med/lat knee) was completed\n\nqerror20 &lt;- tr.complete %&gt;%\n  filter(tscompleted == 1 | tscompleted == 3) %&gt;%\n  filter(is.na(tsfinalpainindafts30)) %&gt;%\n  add_column(\n    error_type = \"TS: Missing after sensation at 30 secs if TS Index site (med/lat knee) was completed\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.6.0.8 Flag 21:\nCheck if TS was performed on the remote site but pain ratings were filled out for the index site.\n\nqerror19 &lt;- tr.complete %&gt;%\n  filter(tscompleted == 2 & tscompleted != 3) %&gt;%\n  mutate(\n    ts.index1 = case_when(\n      (!is.na(tsrep1initialpainindex) & !is.na(tsrep1initialpainindex_d)) |\n        (!is.na(tsrep1finalpainindex) & !is.na(tsrep1finalpainindex_d)) |\n        (!is.na(tsinitialpainindexsclr2) & !is.na(tsinitialpainindexscl1r2)) |\n        (!is.na(tsfinalpainindexsclr2) & !is.na(tsfinalpainindexscl1r2)) |\n        (!is.na(tsinitialpainindexsclr3) & !is.na(tsinitialpainindexscl1r3)) |\n        (!is.na(tsfinalpainindexsclr3) & !is.na(tsfinalpainindexscl1r3)) ~\n        1,\n      TRUE ~ 0\n    )\n  ) %&gt;%\n  filter(ts.index1 == 1) %&gt;%\n  add_column(\n    error_type = \"TS:Remote site was checked but pain ratings were filled out for the index site\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.6.0.9 Flag 22:\nCheck if TS was performed on both sites but pain ratings were not filled out for the index site.\n\nqerror22 &lt;- tr.complete %&gt;%\n  filter(tscompleted == 1) %&gt;%\n  mutate(\n    ts.bothindex1 = case_when(\n      is.na(tsrep1initialpainindex) &\n        is.na(tsrep1initialpainindex_d) &\n        is.na(tsrep1finalpainindex) &\n        is.na(tsrep1finalpainindex_d) &\n        is.na(tsinitialpainindexsclr2) &\n        is.na(tsinitialpainindexscl1r2) &\n        is.na(tsfinalpainindexsclr2) &\n        is.na(tsfinalpainindexscl1r2) &\n        is.na(tsinitialpainindexsclr3) &\n        is.na(tsinitialpainindexscl1r3) &\n        is.na(tsfinalpainindexsclr3) &\n        is.na(tsfinalpainindexscl1r3) ~\n        1,\n      TRUE ~ 0\n    )\n  ) %&gt;%\n  filter(ts.bothindex1 == 1) %&gt;%\n  add_column(\n    error_type = \"TS:Both sites were checked but pain ratings were not filled out for the index site\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.6.0.10 Flag 23:\nCheck if TS was performed on both sites but pain ratings were not filled out for the remote.\n\nqerror23 &lt;- tr.complete %&gt;%\n  filter(tscompleted == 1) %&gt;%\n  mutate(\n    ts.bothrem1 = case_when(\n      is.na(tsrep1initialpainrem) &\n        is.na(tsrep1initialpainrem_d) &\n        is.na(tsrep1finalpainrem) &\n        is.na(tsrep1finalpainrem_d) &\n        is.na(tsrep2initialpainrem) &\n        is.na(tsrep2initialpainrem_d) &\n        is.na(tsrep2finalpainrem) &\n        is.na(tsrep2finalpainrem_d) &\n        is.na(tsinitialpainremsclr3) &\n        is.na(tsinitialpainremscl1r3) &\n        is.na(tsfinalpainremsclr3) &\n        is.na(tsfinalpainremscl1r3) ~\n        1,\n      TRUE ~ 0\n    )\n  ) %&gt;%\n  filter(ts.bothrem1 == 1) %&gt;%\n  add_column(\n    error_type = \"TS:Both sites were checked but pain ratings were not filled out for the remote site\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.6.0.11 Flag 24:\nCheck if TS was performed on the index site but pain ratings were filled out for the remote site.\n\nqerror22 &lt;- tr.complete %&gt;%\n  filter(tscompleted == 3 & tscompleted != 2) %&gt;%\n  mutate(\n    ts.remote1 = case_when(\n      (!is.na(tsrep1initialpainrem) & !is.na(tsrep1initialpainrem_d)) |\n        (!is.na(tsrep1finalpainrem) & !is.na(tsrep1finalpainrem_d)) |\n        (!is.na(tsrep2initialpainrem) & !is.na(tsrep2initialpainrem_d)) |\n        (!is.na(tsrep2finalpainrem) & !is.na(tsrep2finalpainrem_d)) |\n        (!is.na(tsinitialpainremsclr3) & !is.na(tsinitialpainremscl1r3)) |\n        (!is.na(tsfinalpainremsclr3) & !is.na(tsfinalpainremscl1r3)) ~\n        1,\n      TRUE ~ 0\n    )\n  ) %&gt;%\n  filter(ts.remote1 == 1) %&gt;%\n  add_column(\n    error_type = \"TS:index site was checked but pain ratings were filled out for the remote site\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.6.0.12 Flag 25\nCheck if information was available to compute primary outcome: Mean of 3 MTS Difference scores computed (Max – initial), (A2CPS: Site Manual of Procedures v3.0, pg. 156). This is conditional on having 3 repetitions, if a record has &lt; 3 repetitions, it will be flagged.\nPrimary outcome for the Index site.\n\nqerror25 &lt;- tr.complete %&gt;%\n  filter(tscompleted == 1 | tscompleted == 3) %&gt;%\n  mutate(\n    max.rep1.index = pmax(tsrep1finalpainindex, tsrep1initialpainindex)\n  ) %&gt;%\n  mutate(diff.rep1.index = max.rep1.index - tsrep1initialpainindex) %&gt;%\n  mutate(\n    max.rep2.index = pmax(tsfinalpainindexsclr2, tsinitialpainindexsclr2)\n  ) %&gt;%\n  mutate(diff.rep2.index = max.rep2.index - tsinitialpainindexsclr2) %&gt;%\n  mutate(\n    max.rep3.index = pmax(tsfinalpainindexsclr3, tsinitialpainindexsclr3)\n  ) %&gt;%\n  mutate(diff.rep3.index = max.rep3.index - tsinitialpainindexsclr3) %&gt;%\n  mutate(diff.rep1.index = as.numeric(diff.rep1.index)) %&gt;%\n  mutate(diff.rep2.index = as.numeric(diff.rep2.index)) %&gt;%\n  mutate(diff.rep3.index = as.numeric(diff.rep3.index)) %&gt;%\n  rowwise() %&gt;%\n  mutate(\n    mean.index = mean(c(diff.rep1.index, diff.rep2.index, diff.rep3.index))\n  ) %&gt;%\n  filter(is.na(mean.index)) %&gt;%\n  add_column(\n    error_type = \"TS: Not enough information was available to compute primary outcome for the index site\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.6.0.13 Flag 26\nPrimary outcome for the Remote site.\n\nqerror26 &lt;- tr.complete %&gt;%\n  filter(tscompleted == 1 | tscompleted == 2) %&gt;%\n  mutate(max.rep1.remote = pmax(tsrep1initialpainrem, tsrep1finalpainrem)) %&gt;%\n  mutate(diff.rep1.remote = max.rep1.remote - tsrep1initialpainrem) %&gt;%\n  mutate(max.rep2.remote = pmax(tsrep2initialpainrem, tsrep2finalpainrem)) %&gt;%\n  mutate(diff.rep2.remote = max.rep2.remote - tsrep2initialpainrem) %&gt;%\n  mutate(max.rep3.remote = pmax(tsinitialpainremsclr3, tsfinalpainremsclr3)) %&gt;%\n  mutate(diff.rep3.remote = max.rep3.remote - tsinitialpainremsclr3) %&gt;%\n  mutate(diff.rep1.remote = as.numeric(diff.rep1.remote)) %&gt;%\n  mutate(diff.rep2.remote = as.numeric(diff.rep2.remote)) %&gt;%\n  mutate(diff.rep3.remote = as.numeric(diff.rep3.remote)) %&gt;%\n  rowwise() %&gt;%\n  mutate(\n    mean.remote = mean(c(diff.rep1.remote, diff.rep2.remote, diff.rep3.remote))\n  ) %&gt;%\n  filter(is.na(mean.remote)) %&gt;%\n  add_column(\n    error_type = \"TS: Not enough information was available to compute primary outcome for the remote site\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.6.0.14 Flag 27\nCheck if information was available to compute secondary outcome: “Mean of 3 Wind-up ratios (WUR) computed ([Max +1]/ [initial +1]). (1 added to handle possibility of zero initial pain rating in denominator).” (A2CPS: Site Manual of Procedures v3.0, pg. 156). This is conditional on having 3 repetitions, if a record has &lt; 3 repetitions, it will be flagged\nSecondary outcome for the index site\n\nqerror27 &lt;- tr.complete %&gt;%\n  filter(tscompleted == 1 | tscompleted == 3) %&gt;%\n  mutate(\n    max.rep1.index1 = 1 + (pmax(tsrep1finalpainindex, tsrep1initialpainindex))\n  ) %&gt;%\n  mutate(init.rep1.index1 = 1 + (tsrep1initialpainindex)) %&gt;%\n  mutate(div.rep1.index1 = max.rep1.index1 / init.rep1.index1) %&gt;%\n  mutate(\n    max.rep2.index1 = 1 + (pmax(tsfinalpainindexsclr2, tsinitialpainindexsclr2))\n  ) %&gt;%\n  mutate(init.rep2.index1 = 1 + (tsinitialpainindexsclr2)) %&gt;%\n  mutate(div.rep2.index1 = max.rep2.index1 / init.rep2.index1) %&gt;%\n  mutate(\n    max.rep3.index1 = 1 + (pmax(tsfinalpainindexsclr3, tsinitialpainindexsclr3))\n  ) %&gt;%\n  mutate(init.rep3.index1 = 1 + (tsinitialpainindexsclr3)) %&gt;%\n  mutate(div.rep3.index1 = max.rep3.index1 / init.rep3.index1) %&gt;%\n  rowwise() %&gt;%\n  mutate(\n    mean.sec.index = mean(c(div.rep1.index1, div.rep2.index1, div.rep3.index1))\n  ) %&gt;%\n  filter(is.na(mean.sec.index)) %&gt;%\n  add_column(\n    error_type = \"TS: Not enough information was available to compute secondary outcome for the index site\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.6.0.15 Flag 28\nSecondary outcome for the Remote site.\n\nqerror28 &lt;- tr.complete %&gt;%\n  filter(tscompleted == 1 | tscompleted == 2) %&gt;%\n  mutate(\n    max.rep1.remote1 = 1 + (pmax(tsrep1initialpainrem, tsrep1finalpainrem))\n  ) %&gt;%\n  mutate(init.rep1.remote1 = 1 + (tsrep1initialpainrem)) %&gt;%\n  mutate(div.rep1.remote1 = max.rep1.remote1 / init.rep1.remote1) %&gt;%\n  mutate(\n    max.rep2.remote1 = 1 + (pmax(tsrep2initialpainrem, tsrep2finalpainrem))\n  ) %&gt;%\n  mutate(init.rep2.remote1 = 1 + (tsrep2initialpainrem)) %&gt;%\n  mutate(div.rep2.remote1 = max.rep2.remote1 / init.rep2.remote1) %&gt;%\n  mutate(\n    max.rep3.remote1 = 1 + (pmax(tsinitialpainremsclr3, tsfinalpainremsclr3))\n  ) %&gt;%\n  mutate(init.rep3.remote1 = 1 + (tsinitialpainremsclr3)) %&gt;%\n  mutate(div.rep3.remote1 = max.rep3.remote1 / init.rep3.remote1) %&gt;%\n  rowwise() %&gt;%\n  mutate(\n    mean.sec.remote = mean(c(\n      div.rep1.remote1,\n      div.rep2.remote1,\n      div.rep3.remote1\n    ))\n  ) %&gt;%\n  filter(is.na(mean.sec.remote)) %&gt;%\n  add_column(\n    error_type = \"TS: Not enough information was available to compute secondary outcome for the remote site\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\n\nH.2.7 Conditioned Pain Modulation (CPM):\nKeep records with “CPM test completed”\n\ntrcpm.complete &lt;- tka_qst %&gt;%\n  filter(qst_mcc1_v03_complete == 2) %&gt;%\n  filter(!is.na(cpmcompleteyn) & cpmcompleteyn != 0)\n\n\nH.2.7.0.1 Flag 29:\nCheck if water temperature was not checked:\n\nqerror29 &lt;- trcpm.complete %&gt;%\n  filter(cpmcoldwatertempc != 1) %&gt;%\n  add_column(error_type = \"CPM: Water temperature not checked\") %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.7.0.2 Flag 30:\nCheck for missing or mismatch in cold water pain ratings at 30 seconds.\n\nqerror30 &lt;- trcpm.complete %&gt;%\n  filter(\n    cpmbathrangeyn == 1 | (cpmbathrangeyn == 2 & cpmoutrangetime &gt;= 30)\n  ) %&gt;%\n  mutate(diff_30 = cpmcoldwaterpain30sscl - cpmcoldwaterpain30sscl1) %&gt;%\n  filter(diff_30 != 0 | is.na(diff_30)) %&gt;%\n  add_column(\n    error_type = \"CPM: Missing or mismatch in cold water pain ratings at 30 sec\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.7.0.3 Flag 31:\nCheck for missing or mismatch in cold water pain ratings at 60 seconds.\n\nqerror31 &lt;- trcpm.complete %&gt;%\n  filter(\n    cpmbathrangeyn == 1 | (cpmbathrangeyn == 2 & cpmoutrangetime &gt;= 60)\n  ) %&gt;%\n  mutate(diff_60 = cpmcoldwaterpain60sscl - cpmcoldwaterpain60sscl1) %&gt;%\n  filter(diff_60 != 0 | is.na(diff_60)) %&gt;%\n  add_column(\n    error_type = \"CPM: Missing or mismatch in cold water pain ratings at 60 sec\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.7.0.4 Flag 32:\nCheck for missing or mismatch in PPT ratings for Remote site (repetition 1).\n\nqerror32 &lt;- trcpm.complete %&gt;%\n  mutate(diff_cpm1 = cpmppt1val - cpmppt1val1) %&gt;%\n  filter(diff_cpm1 != 0 | is.na(diff_cpm1)) %&gt;%\n  add_column(\n    error_type = \"CPM PPT Rep1:Missing or mismatch in PPT ratings for Remote site\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.7.0.5 Flag 33:\nCheck for missing or mismatch in PPT ratings for Remote site (repetition 2).\n\nqerror33 &lt;- trcpm.complete %&gt;%\n  mutate(diff_cpm2 = cpmppt2val - cpmppt2val1) %&gt;%\n  filter(diff_cpm2 != 0 | is.na(diff_cpm2)) %&gt;%\n  add_column(\n    error_type = \"CPM PPT Rep2:Missing or mismatch in PPT ratings for Remote site\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.7.0.6 Flag 34:\nCheck for missing or mismatch in PPT ratings for Remote site (repetition 3).\n\nqerror34 &lt;- trcpm.complete %&gt;%\n  mutate(diff_cpm3 = cpmppt3val - cpmppt3val1) %&gt;%\n  filter(diff_cpm3 != 0 | is.na(diff_cpm3)) %&gt;%\n  add_column(\n    error_type = \"CPM PPT Rep3:Missing or mismatch in PPT ratings for Remote site\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.7.0.7 Flag 35:\nCheck if information was available to compute primary outcome (A2CPS: Site Manual of Procedures v3.0, pg. 159) i.e. [(pre hand immersion PPT-post immersion PPT)/pre immersion PPT] *100\n\nqerror35 &lt;- trcpm.complete %&gt;%\n  filter(pptcompleteyn == 1 | pptcompleteyn == 2) %&gt;%\n  rowwise() %&gt;%\n  mutate(mean_pre = mean(c(pptremote1val, pptremote2val, pptremote3val))) %&gt;%\n  rowwise() %&gt;%\n  mutate(mean_post = mean(c(cpmppt1val, cpmppt2val, cpmppt3val))) %&gt;%\n  mutate(cpm_change = ((mean_pre - mean_post) / mean_pre) * 100) %&gt;%\n  filter(is.na(cpm_change)) %&gt;%\n  add_column(\n    error_type = \"CPM: Not enough information to compute   primary outcome\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.7.0.8 Flag 36:\nCheck if information was available to compute secondary outcome (A2CPS: Site Manual of Procedures v3.0, pg. 159) i.e. CPM difference score computed as pre hand immersion PPT-post immersion PPT\n\nqerror36 &lt;- trcpm.complete %&gt;%\n  filter(pptcompleteyn == 1 | pptcompleteyn == 2) %&gt;%\n  rowwise() %&gt;%\n  mutate(mean_pre = mean(c(pptremote1val, pptremote2val, pptremote3val))) %&gt;%\n  rowwise() %&gt;%\n  mutate(mean_post = mean(c(cpmppt1val, cpmppt2val, cpmppt3val))) %&gt;%\n  mutate(cpm_diff = mean_pre - mean_post) %&gt;%\n  filter(is.na(cpm_diff)) %&gt;%\n  add_column(\n    error_type = \"CPM: Not enough information to compute   secondary outcome\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.7.0.9 Flag 37:\nCheck If personalized pressure was performed during imaging and there were missing values for cuff Pressure to achieve 4/10 pain outside of scanner during QST as well as missing values for recalibration pressure during imaging.\n\nqerror37 &lt;- tka_qst %&gt;%\n  mutate(\n    no.qst = case_when(\n      is.na(fmricuffcalfpressurerecal) & is.na(fmricuffcalfpressure) ~ 1,\n      TRUE ~ 0\n    )\n  ) %&gt;%\n  mutate(\n    personal.cuff = case_when(\n      fmricuffcompletescl == 1 | fmricuffipyn == 1 ~ 1,\n      TRUE ~ 0\n    )\n  ) %&gt;%\n  filter(personal.cuff == 1 & no.qst == 1) %&gt;%\n  add_column(\n    error_type = \"QST: Missing values for cuff Pressure to achieve 4/10 pain outside of scanner during QST  as well as missing values for recalibration pressure during imaging\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.7.0.10 QST Biomarkers\n\nH.2.7.0.10.1 PPT Biomarkers:\nMean PPT values at the index site = primary data point (A2CPS: Site Manual of Procedures v3.0, pg. 154).\n\nprimary_ppt_tka &lt;- qdata2 %&gt;%\n  filter((pptcompleteyn == 1 | pptcompleteyn == 3)) %&gt;%\n  rowwise() %&gt;%\n  mutate(mean1 = mean(c(pptindex1val, pptindex2val, pptindex3val))) %&gt;%\n  rename(primary_ppt_tka = mean1) %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    primary_ppt_tka\n  )\n\nMean PPT values at the remote site = secondary data point (A2CPS: Site Manual of Procedures v3.0, pg. 154).\n\nsecondary_ppt_tka &lt;- qdata2 %&gt;%\n  filter((pptcompleteyn == 1 | pptcompleteyn == 2)) %&gt;%\n  rowwise() %&gt;%\n  mutate(mean2 = mean(c(pptremote1val, pptremote2val, pptremote3val))) %&gt;%\n  rename(secondary_ppt_tka = mean2) %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    secondary_ppt_tka\n  )\n\n\n\nH.2.7.0.10.2 TS Biomarkers:\nPrimary outcome: Mean of 3 MTS Difference scores computed (Max – initial), (A2CPS: Site Manual of Procedures v3.0, pg. 156). This is conditional on having 3 repetitions.\nPrimary outcome for the Index site.\n\nprimary_ts_index_tka &lt;- tr.complete %&gt;%\n  filter(tscompleted == 1 | tscompleted == 3) %&gt;%\n  mutate(\n    max.rep1.index = pmax(tsrep1finalpainindex, tsrep1initialpainindex)\n  ) %&gt;%\n  mutate(diff.rep1.index = max.rep1.index - tsrep1initialpainindex) %&gt;%\n  mutate(\n    max.rep2.index = pmax(tsfinalpainindexsclr2, tsinitialpainindexsclr2)\n  ) %&gt;%\n  mutate(diff.rep2.index = max.rep2.index - tsinitialpainindexsclr2) %&gt;%\n  mutate(\n    max.rep3.index = pmax(tsfinalpainindexsclr3, tsinitialpainindexsclr3)\n  ) %&gt;%\n  mutate(diff.rep3.index = max.rep3.index - tsinitialpainindexsclr3) %&gt;%\n  mutate(diff.rep1.index = as.numeric(diff.rep1.index)) %&gt;%\n  mutate(diff.rep2.index = as.numeric(diff.rep2.index)) %&gt;%\n  mutate(diff.rep3.index = as.numeric(diff.rep3.index)) %&gt;%\n  rowwise() %&gt;%\n  mutate(\n    mean.index = mean(c(diff.rep1.index, diff.rep2.index, diff.rep3.index))\n  ) %&gt;%\n  rename(primary_ts_index_tka = mean.index) %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    primary_ts_index_tka\n  )\n\nPrimary outcome for the Remote site.\n\nprimary_ts_remote_tka &lt;- tr.complete %&gt;%\n  filter(tscompleted == 1 | tscompleted == 2) %&gt;%\n  mutate(max.rep1.remote = pmax(tsrep1initialpainrem, tsrep1finalpainrem)) %&gt;%\n  mutate(diff.rep1.remote = max.rep1.remote - tsrep1initialpainrem) %&gt;%\n  mutate(max.rep2.remote = pmax(tsrep2initialpainrem, tsrep2finalpainrem)) %&gt;%\n  mutate(diff.rep2.remote = max.rep2.remote - tsrep2initialpainrem) %&gt;%\n  mutate(max.rep3.remote = pmax(tsinitialpainremsclr3, tsfinalpainremsclr3)) %&gt;%\n  mutate(diff.rep3.remote = max.rep3.remote - tsinitialpainremsclr3) %&gt;%\n  mutate(diff.rep1.remote = as.numeric(diff.rep1.remote)) %&gt;%\n  mutate(diff.rep2.remote = as.numeric(diff.rep2.remote)) %&gt;%\n  mutate(diff.rep3.remote = as.numeric(diff.rep3.remote)) %&gt;%\n  rowwise() %&gt;%\n  mutate(\n    mean.remote = mean(c(diff.rep1.remote, diff.rep2.remote, diff.rep3.remote))\n  ) %&gt;%\n  rename(primary_ts_remote_tka = mean.remote) %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    primary_ts_remote_tka\n  )\n\nSecondary outcome: Mean of 3 Wind-up ratios (WUR) computed ([Max +1]/ [initial +1]). (1 added to handle possibility of zero initial pain rating in denominator). (A2CPS: Site Manual of Procedures v3.0, pg. 156). This is conditional on having 3 repetitions, if a record has &lt; 3 repetitions, it will be flagged\nSecondary outcome for the index site\n\nsecondary_ts_index_tka &lt;- tr.complete %&gt;%\n  filter(tscompleted == 1 | tscompleted == 3) %&gt;%\n  mutate(\n    max.rep1.index1 = 1 + (pmax(tsrep1finalpainindex, tsrep1initialpainindex))\n  ) %&gt;%\n  mutate(init.rep1.index1 = 1 + (tsrep1initialpainindex)) %&gt;%\n  mutate(div.rep1.index1 = max.rep1.index1 / init.rep1.index1) %&gt;%\n  mutate(\n    max.rep2.index1 = 1 + (pmax(tsfinalpainindexsclr2, tsinitialpainindexsclr2))\n  ) %&gt;%\n  mutate(init.rep2.index1 = 1 + (tsinitialpainindexsclr2)) %&gt;%\n  mutate(div.rep2.index1 = max.rep2.index1 / init.rep2.index1) %&gt;%\n  mutate(\n    max.rep3.index1 = 1 + (pmax(tsfinalpainindexsclr3, tsinitialpainindexsclr3))\n  ) %&gt;%\n  mutate(init.rep3.index1 = 1 + (tsinitialpainindexsclr3)) %&gt;%\n  mutate(div.rep3.index1 = max.rep3.index1 / init.rep3.index1) %&gt;%\n  rowwise() %&gt;%\n  mutate(\n    mean.sec.index = mean(c(div.rep1.index1, div.rep2.index1, div.rep3.index1))\n  ) %&gt;%\n  rename(secondary_ts_index_tka = mean.sec.index) %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    secondary_ts_index_tka\n  )\n\nSecondary outcome for the Remote site.\n\nsecondary_ts_remote_tka &lt;- tr.complete %&gt;%\n  filter(tscompleted == 1 | tscompleted == 2) %&gt;%\n  mutate(\n    max.rep1.remote1 = 1 + (pmax(tsrep1initialpainrem, tsrep1finalpainrem))\n  ) %&gt;%\n  mutate(init.rep1.remote1 = 1 + (tsrep1initialpainrem)) %&gt;%\n  mutate(div.rep1.remote1 = max.rep1.remote1 / init.rep1.remote1) %&gt;%\n  mutate(\n    max.rep2.remote1 = 1 + (pmax(tsrep2initialpainrem, tsrep2finalpainrem))\n  ) %&gt;%\n  mutate(init.rep2.remote1 = 1 + (tsrep2initialpainrem)) %&gt;%\n  mutate(div.rep2.remote1 = max.rep2.remote1 / init.rep2.remote1) %&gt;%\n  mutate(\n    max.rep3.remote1 = 1 + (pmax(tsinitialpainremsclr3, tsfinalpainremsclr3))\n  ) %&gt;%\n  mutate(init.rep3.remote1 = 1 + (tsinitialpainremsclr3)) %&gt;%\n  mutate(div.rep3.remote1 = max.rep3.remote1 / init.rep3.remote1) %&gt;%\n  rowwise() %&gt;%\n  mutate(\n    mean.sec.remote = mean(c(\n      div.rep1.remote1,\n      div.rep2.remote1,\n      div.rep3.remote1\n    ))\n  ) %&gt;%\n  rename(secondary_ts_remote_tka = mean.sec.remote) %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    secondary_ts_remote_tka\n  )\n\n\n\nH.2.7.0.10.3 CPM Biomarkers:\nPrimary outcome (A2CPS: Site Manual of Procedures v3.0, pg. 159) i.e. [(pre hand immersion PPT-post immersion PPT)/pre immersion PPT] *100 \n\nprimary_cpm_tka &lt;- trcpm.complete %&gt;%\n  filter(pptcompleteyn == 1 | pptcompleteyn == 2) %&gt;%\n  rowwise() %&gt;%\n  mutate(mean_pre = mean(c(pptremote1val, pptremote2val, pptremote3val))) %&gt;%\n  rowwise() %&gt;%\n  mutate(mean_post = mean(c(cpmppt1val, cpmppt2val, cpmppt3val))) %&gt;%\n  mutate(cpm_change = ((mean_pre - mean_post) / mean_pre) * 100) %&gt;%\n  rename(primary_cpm_tka = cpm_change) %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    primary_cpm_tka\n  )\n\nSecondary outcome (A2CPS: Site Manual of Procedures v3.0, pg. 159) i.e. CPM difference score computed as pre hand immersion PPT-post immersion PPT\n\nsecondary_cpm_tka &lt;- trcpm.complete %&gt;%\n  filter(pptcompleteyn == 1 | pptcompleteyn == 2) %&gt;%\n  rowwise() %&gt;%\n  mutate(mean_pre = mean(c(pptremote1val, pptremote2val, pptremote3val))) %&gt;%\n  rowwise() %&gt;%\n  mutate(mean_post = mean(c(cpmppt1val, cpmppt2val, cpmppt3val))) %&gt;%\n  mutate(cpm_diff = mean_pre - mean_post) %&gt;%\n  rename(secondary_cpm_tka = cpm_diff) %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    secondary_cpm_tka\n  )\n\nMerge computed biomarkers to the “tka_qst” dataset:\n\ntka_qst &lt;- left_join(\n  tka_qst,\n  primary_ppt_tka,\n  by = c(\n    \"record_id\",\n    \"redcap_data_access_group\",\n    \"redcap_repeat_instrument\",\n    \"redcap_repeat_instance\"\n  )\n) %&gt;%\n  left_join(\n    .,\n    secondary_ppt_tka,\n    by = c(\n      \"record_id\",\n      \"redcap_data_access_group\",\n      \"redcap_repeat_instrument\",\n      \"redcap_repeat_instance\"\n    )\n  ) %&gt;%\n  left_join(\n    .,\n    primary_ts_index_tka,\n    by = c(\n      \"record_id\",\n      \"redcap_data_access_group\",\n      \"redcap_repeat_instrument\",\n      \"redcap_repeat_instance\"\n    )\n  ) %&gt;%\n  left_join(\n    .,\n    primary_ts_remote_tka,\n    by = c(\n      \"record_id\",\n      \"redcap_data_access_group\",\n      \"redcap_repeat_instrument\",\n      \"redcap_repeat_instance\"\n    )\n  ) %&gt;%\n  left_join(\n    .,\n    secondary_ts_index_tka,\n    by = c(\n      \"record_id\",\n      \"redcap_data_access_group\",\n      \"redcap_repeat_instrument\",\n      \"redcap_repeat_instance\"\n    )\n  ) %&gt;%\n  left_join(\n    .,\n    secondary_ts_remote_tka,\n    by = c(\n      \"record_id\",\n      \"redcap_data_access_group\",\n      \"redcap_repeat_instrument\",\n      \"redcap_repeat_instance\"\n    )\n  ) %&gt;%\n  left_join(\n    .,\n    primary_cpm_tka,\n    by = c(\n      \"record_id\",\n      \"redcap_data_access_group\",\n      \"redcap_repeat_instrument\",\n      \"redcap_repeat_instance\"\n    )\n  ) %&gt;%\n  left_join(\n    .,\n    secondary_cpm_tka,\n    by = c(\n      \"record_id\",\n      \"redcap_data_access_group\",\n      \"redcap_repeat_instrument\",\n      \"redcap_repeat_instance\"\n    )\n  )\n\n\n\n\nH.2.7.0.11 New field name(s):\nAdd field names for the computed biomarkers to the QST data dictionary\n\n# Create field names\nprimary_ppt_tka_new_row &lt;- data.frame(\n  field_name = \"primary_ppt_tka\",\n  field_type = \"numeric\",\n  field_note = \"PPT primary biomarker:TKA \"\n)\n\nsecondary_ppt_tka_new_row &lt;- data.frame(\n  field_name = \"secondary_ppt_tka\",\n  field_type = \"numeric\",\n  field_note = \"PPT secondary biomarker:TKA \"\n)\n\n\nprimary_ts_index_tka_new_row &lt;- data.frame(\n  field_name = \"primary_ts_index_tka\",\n  field_type = \"numeric\",\n  field_note = \"TS primary biomarker for the index site:TKA \"\n)\n\nprimary_ts_remote_tka_new_row &lt;- data.frame(\n  field_name = \"primary_ts_remote_tka\",\n  field_type = \"numeric\",\n  field_note = \"TS primary biomarker for the remote site:TKA \"\n)\n\nsecondary_ts_index_tka_new_row &lt;- data.frame(\n  field_name = \"secondary_ts_index_tka\",\n  field_type = \"numeric\",\n  field_note = \"TS secondary biomarker for the index site:TKA \"\n)\n\nsecondary_ts_remote_tka_new_row &lt;- data.frame(\n  field_name = \" secondary_ts_remote_tka\",\n  field_type = \"numeric\",\n  field_note = \"TS secondary biomarker for the remote site:TKA \"\n)\n\n\nprimary_cpm_tka_new_row &lt;- data.frame(\n  field_name = \" primary_cpm_tka\",\n  field_type = \"numeric\",\n  field_note = \"CPM primary biomarker:TKA \"\n)\n\nsecondary_cpm_tka_new_row &lt;- data.frame(\n  field_name = \" secondary_cpm_tka\",\n  field_type = \"numeric\",\n  field_note = \"CPM secondary biomarker:TKA \"\n)\n\n\n# Add the new row after the last row\n\nqst_dict &lt;- qst_dict %&gt;%\n  slice(1:nrow(.)) %&gt;%\n  add_row(.after = nrow(.), !!!primary_ppt_tka_new_row) %&gt;%\n  add_row(.after = nrow(.), !!!secondary_ppt_tka_new_row) %&gt;%\n  add_row(.after = nrow(.), !!!primary_ts_index_tka_new_row) %&gt;%\n  add_row(.after = nrow(.), !!!primary_ts_remote_tka_new_row) %&gt;%\n  add_row(.after = nrow(.), !!!secondary_ts_index_tka_new_row) %&gt;%\n  add_row(.after = nrow(.), !!!secondary_ts_remote_tka_new_row) %&gt;%\n  add_row(.after = nrow(.), !!!primary_cpm_tka_new_row) %&gt;%\n  add_row(.after = nrow(.), !!!secondary_cpm_tka_new_row)\n\n\n\nH.2.7.0.12 Create QST error report for the TKA cohort.\n\n# Specify the common prefix\nqst_error &lt;- \"qerror\"\n\n# Find data frames in the global environment with the specified prefix\nqst_list &lt;- mget(ls(pattern = paste0(\"^\", qst_error)))\n\n# Combine the data frames using bind_rows\nqst_report &lt;- bind_rows(qst_list) %&gt;%\n  as_tibble() %&gt;%\n  mutate_all(as.character) %&gt;%\n  pivot_wider(names_from = \"error_type\", values_from = \"errors\") %&gt;%\n  mutate_all(~ replace_na(., \"\"))\n\n\nqst_report %&gt;%\n  gt() %&gt;%\n  tab_header(\n    title = md(\"**TKA Cohort QST form Error Report**\")\n  ) %&gt;%\n  tab_options(\n    table.font.size = px(12),\n    column_labels.font.size = px(12)\n  ) %&gt;%\n  tab_style(\n    style = list(cell_fill(color = \"#F4F4F4\")),\n    locations = cells_body(columns = record_id)\n  )\n\n\n\n\n\n\n\nTKA Cohort QST form Error Report\n\n\nrecord_id\nredcap_data_access_group\nredcap_repeat_instrument\nredcap_repeat_instance\nLocation of index site not entered\nPPT: Both sites were checked but PPT information was not filled out for the remote site\nPPT: Not enough information was available to compute mean PPT values at the index site\nPPT: Not enough information was available to compute mean PPT values at the remote site\nTS:TS was completed for both sites and at least 1 repetition for both sites had no mismatch errors or missing data\nTS: Missing after sensation at 15 secs if TS Remote site (contralateral deltoid) was completed\nTS: Missing after sensation at 30 secs if TS Remote site (contralateral deltoid) was completed\nTS:Remote site was checked but pain ratings were filled out for the index site\nPPT Repetition 1:Missing or mismatch in PPT ratings for Remote site\nTS: Missing after sensation at 30 secs if TS Index site (med/lat knee) was completed\nTS:Both sites were checked but pain ratings were not filled out for the remote site\nTS: Not enough information was available to compute primary outcome for the index site\nTS: Not enough information was available to compute primary outcome for the remote site\nTS: Not enough information was available to compute secondary outcome for the index site\nTS: Not enough information was available to compute secondary outcome for the remote site\nCPM: Water temperature not checked\nPPT repetition 2:Missing or mismatch in PPT ratings for Remote site\nCPM: Missing or mismatch in cold water pain ratings at 30 sec\nCPM: Missing or mismatch in cold water pain ratings at 60 sec\nCPM PPT Rep2:Missing or mismatch in PPT ratings for Remote site\nCPM PPT Rep3:Missing or mismatch in PPT ratings for Remote site\nCPM: Not enough information to compute primary outcome\nCPM: Not enough information to compute secondary outcome\nQST: Missing values for cuff Pressure to achieve 4/10 pain outside of scanner during QST as well as missing values for recalibration pressure during imaging\nPPT repetition 3:Missing or mismatch in PPT ratings for Remote site\nPPT Repetition 2:Missing or mismatch in PPT ratings for the index site\nPPT Repetition 3:Missing or mismatch in PPT ratings for the index site\nPPT: Both sites were checked but PPT information was not filled out for the index site\n\n\n\n\n10216\nrush_university_me\nqst_mcc1_v03\n1\nerror\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nerror\nerror\nerror\n\n\n\n\n\n\n\n10222\nrush_university_me\nqst_mcc1_v03\n1\nerror\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n25050\nuniversity_of_mich\nqst_mcc1_v03\n1\nerror\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n10040\nuchicago\nqst_mcc1_v03\n1\n\nerror\n\nerror\n\n\n\n\nerror\n\n\n\n\n\n\n\nerror\n\n\n\n\n\n\n\nerror\n\n\n\n\n\n10643\nuchicago\nqst_mcc1_v03\n1\n\n\nerror\n\n\n\n\nerror\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nerror\nerror\nerror\n\n\n10015\nrush_university_me\nqst_mcc1_v03\n1\n\n\n\n\nerror\nerror\nerror\n\n\n\nerror\n\nerror\n\nerror\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n10378\nuchicago\nqst_mcc1_v03\n1\n\n\n\n\nerror\n\n\n\n\nerror\n\nerror\n\nerror\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n10637\nuchicago\nqst_mcc1_v03\n1\n\n\n\n\nerror\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nerror\n\n\n\n\n\n10679\nrush_university_me\nqst_mcc1_v03\n1\n\n\n\n\nerror\n\n\n\n\nerror\n\nerror\n\nerror\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n10758\nuchicago\nqst_mcc1_v03\n1\n\n\n\n\nerror\n\n\n\n\n\n\nerror\n\nerror\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n10147\nuchicago\nqst_mcc1_v03\n1\n\n\n\n\n\nerror\nerror\n\n\n\n\n\nerror\n\nerror\n\n\n\n\nerror\nerror\nerror\nerror\n\n\n\n\n\n\n\n10360\nuchicago\nqst_mcc1_v03\n1\n\n\n\n\n\nerror\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n10372\nuchicago\nqst_mcc1_v03\n1\n\n\n\n\n\nerror\nerror\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n25048\nuniversity_of_mich\nqst_mcc1_v03\n1\n\n\n\n\n\nerror\nerror\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n10013\nrush_university_me\nqst_mcc1_v03\n1\n\n\n\n\n\n\n\nerror\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n10018\nrush_university_me\nqst_mcc1_v03\n1\n\n\n\n\n\n\n\nerror\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n10181\nrush_university_me\nqst_mcc1_v03\n1\n\n\n\n\n\n\n\nerror\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n10066\nuchicago\nqst_mcc1_v03\n1\n\n\n\n\n\n\n\n\n\nerror\n\nerror\n\nerror\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n10283\nrush_university_me\nqst_mcc1_v03\n1\n\n\n\n\n\n\n\n\n\nerror\n\nerror\n\nerror\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n10315\nuchicago\nqst_mcc1_v03\n1\n\n\n\n\n\n\n\n\n\nerror\n\nerror\n\nerror\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n10418\nuchicago\nqst_mcc1_v03\n1\n\n\n\n\n\n\n\n\n\nerror\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n10436\nuchicago\nqst_mcc1_v03\n1\n\n\n\n\n\n\n\n\n\nerror\n\nerror\n\nerror\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n10539\nuchicago\nqst_mcc1_v03\n1\n\n\n\n\n\n\n\n\n\nerror\n\nerror\n\nerror\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n10684\nnorthshore\nqst_mcc1_v03\n1\n\n\n\n\n\n\n\n\n\nerror\n\nerror\n\nerror\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n25136\nuniversity_of_mich\nqst_mcc1_v03\n1\n\n\n\n\n\n\n\n\n\nerror\n\nerror\n\nerror\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n10738\nuchicago\nqst_mcc1_v03\n1\n\n\n\n\n\n\n\n\n\n\n\nerror\n\nerror\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n10778\nrush_university_me\nqst_mcc1_v03\n1\n\n\n\n\n\n\n\n\n\n\n\nerror\n\nerror\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n10905\nrush_university_me\nqst_mcc1_v03\n1\n\n\n\n\n\n\n\n\n\n\n\nerror\n\nerror\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n10425\nuchicago\nqst_mcc1_v03\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nerror\n\n\n\n\n\n\n\nerror\n\n\n\n\n\n\n10438\nuchicago\nqst_mcc1_v03\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nerror\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n10696\nuchicago\nqst_mcc1_v03\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nerror\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n10055\nuchicago\nqst_mcc1_v03\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nerror\n\n\n\n\n\n\n\n\n\n\n\n\n25157\nuniversity_of_mich\nqst_mcc1_v03\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nerror\n\n\n\n\n\n\n\n\n\n\n\n\n10363\nuchicago\nqst_mcc1_v03\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nerror\n\n\n\n\nerror\n\n\n\n\n\n\n10613\nuchicago\nqst_mcc1_v03\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nerror\n\n\n\n\n\n\n\n\n\n\n\n10698\nnorthshore\nqst_mcc1_v03\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nerror\n\n\n\n\n\n\n\n\n\n\n\n10872\nnorthshore\nqst_mcc1_v03\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nerror\n\n\n\n\n\n\n\n\n\n\n\n10899\nnorthshore\nqst_mcc1_v03\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nerror\n\n\n\n\n\n\n\n\n\n\n\n25051\nuniversity_of_mich\nqst_mcc1_v03\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nerror\n\n\n\n\n\n\n\n\n\n\n\n10201\nuchicago\nqst_mcc1_v03\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nerror\nerror\nerror\nerror\nerror\n\n\n\n\n\n\n10655\nuchicago\nqst_mcc1_v03\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nerror\n\n\n\n\n\n\n\n\n\n\n10703\nuchicago\nqst_mcc1_v03\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nerror\n\n\n\n\n\n\n\n\n\n\n10006\nrush_university_me\nqst_mcc1_v03\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nerror\nerror\nerror\n\n\n\n\n\n\n\n10249\nrush_university_me\nqst_mcc1_v03\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nerror\nerror\nerror\n\n\n\n\n\n\n\n10077\nnorthshore\nqst_mcc1_v03\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nerror\n\n\n\n\n\n\n10103\nuchicago\nqst_mcc1_v03\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nerror\n\n\n\n\n\n\n10258\nnorthshore\nqst_mcc1_v03\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nerror\n\n\n\n\n\n\n10297\nnorthshore\nqst_mcc1_v03\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nerror\n\n\n\n\n\n\n10327\nuchicago\nqst_mcc1_v03\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nerror\n\n\n\n\n\n\n10335\nuchicago\nqst_mcc1_v03\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nerror\n\n\n\n\n\n\n10352\nnorthshore\nqst_mcc1_v03\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nerror\n\n\n\n\n\n\n10442\nuchicago\nqst_mcc1_v03\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nerror\n\n\n\n\n\n\n10483\nuchicago\nqst_mcc1_v03\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nerror\n\n\n\n\n\n\n10487\nuchicago\nqst_mcc1_v03\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nerror\n\n\n\n\n\n\n\n\n\n\n\n\n\nH.2.7.0.13 Save:\nSave “tka_qst” and data dictionary as .csv files in the folder named “reformatted_QST”\n\nwrite_csv(\n  tka_qst,\n  file = here::here(\"data\", \"QST\", \"Reformatted\", \"reformatted_tka_qst.csv\")\n)\n\nwrite_csv(\n  qst_dict,\n  file = here::here(\"data\", \"QST\", \"Reformatted\", \"updated_qst_dict.csv\")\n)\n\n\n\n\nH.2.8 QST: Thoracotomy cohort\n\nthor_qst &lt;- qst\n\nWe will also read in Imaging data since the information on recalibration is recorded in the Imaging CRF. We will later merge field names related to recalibration with the imaging data.\n\nthor_img_4_qst &lt;- read_csv(here(\n  \"data\",\n  \"imaging\",\n  \"imaging-2024-11-06.csv\"\n)) %&gt;%\n  filter(redcap_repeat_instrument == \"imaging_mcc2_v01\") %&gt;%\n  select(\n    record_id,\n    redcap_event_name,\n    redcap_data_access_group,\n    redcap_repeat_instance,\n    fmricuffcontrarecal,\n    fmricuffcontrarecal,\n    fmricuffcalfpressurerecal,\n    fmricuffipyn,\n    fmricuffcompletescl,\n    imaging_mcc2_v01_complete\n  ) %&gt;%\n  filter(imaging_mcc2_v01_complete == 2 & !is.na(redcap_repeat_instance)) %&gt;%\n  group_by(record_id, redcap_event_name) %&gt;%\n  top_n(1, redcap_repeat_instance) %&gt;%\n  ungroup() %&gt;%\n  select(where(not_all_na))\n\nkeep subjects from the Thoracotomy cohort, with the most recent baseline visit and merge with QST data.\n\nthor_qst &lt;- thor_qst %&gt;%\n  filter(cohort == \"Thoracic\") %&gt;%\n  filter(redcap_repeat_instrument == \"qst_mcc1_v03\") %&gt;%\n  filter(qst_mcc1_v03_complete == 2 & !is.na(redcap_repeat_instance)) %&gt;%\n  group_by(record_id, redcap_event_name) %&gt;%\n  top_n(1, redcap_repeat_instance) %&gt;%\n  ungroup() %&gt;%\n  select(where(not_all_na))\n\n\nthor_qst &lt;- left_join(\n  thor_qst,\n  thor_img_4_qst,\n  by = intersect(names(thor_qst), names(thor_img_4_qst))\n)\n\n\n\nH.2.9 Pressure Pain Thresholds (PPT)\nkeep subjects with completed QST and PPT test.\n\nqdatam2 &lt;- thor_qst %&gt;%\n  filter(qst_mcc1_v03_complete == 2) %&gt;%\n  filter(pptcompleteyn == 2 | pptcompleteyn == 1 | pptcompleteyn == 3)\n\n\nH.2.9.0.1 Flag 1:\nRemote site: Shoulder (deltoid muscle), contralateral to surgical chest side.\nCheck for missing or mismatch in PPT ratings for Remote site.\nRepetition 1:\n\nm2qerror1 &lt;- qdatam2 %&gt;%\n  filter(pptcompleteyn == 1 | pptcompleteyn == 2) %&gt;%\n  mutate(ppt_contr_diff1 = pptremoter1val - pptremoter1val_d) %&gt;%\n  filter(ppt_contr_diff1 != 0 | is.na(ppt_contr_diff1)) %&gt;%\n  add_column(\n    error_type = \"PPT Repetition 1:Missing or mismatch in PPT ratings for Remote site\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.9.0.2 Flag 2:\nRepetition 2:\n\nm2qerror2 &lt;- qdatam2 %&gt;%\n  filter(pptcompleteyn == 1 | pptcompleteyn == 2) %&gt;%\n  mutate(ppt_contr_diff2 = pptremoter2val - pptremoter2val_d) %&gt;%\n  filter(ppt_contr_diff2 != 0 | is.na(ppt_contr_diff2)) %&gt;%\n  add_column(\n    error_type = \"PPT repetition 2:Missing or mismatch in PPT ratings for Remote site\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.9.0.3 Flag 3:\nRepetition 3:\n\nm2qerror3 &lt;- qdatam2 %&gt;%\n  filter(pptcompleteyn == 1 | pptcompleteyn == 2) %&gt;%\n  mutate(ppt_contr_diff3 = pptremoter3val - pptremoter3val_d) %&gt;%\n  filter(ppt_contr_diff3 != 0 | is.na(ppt_contr_diff3)) %&gt;%\n  add_column(\n    error_type = \"PPT repetition 3:Missing or mismatch in PPT ratings for Remote site\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.9.0.4 Flag 4:\nIndex site: Surgical site, lateral thorax on the midaxillary line in the intercostal space between the fifth and sixth rib\nCheck for missing or mismatch in PPT ratings for the index site.\nRepetition 1:\n\nm2qerror4 &lt;- qdatam2 %&gt;%\n  filter(pptcompleteyn == 1 | pptcompleteyn == 3) %&gt;%\n  mutate(ppt_index_diff1 = pptindxr1val - pptindxr1val_d) %&gt;%\n  filter(ppt_index_diff1 != 0 | is.na(ppt_index_diff1)) %&gt;%\n  add_column(\n    error_type = \"PPT Repetition 1:Missing or mismatch in PPT ratings for the index site\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.9.0.5 Flag 5:\nRepetition 2:\n\nm2qerror5 &lt;- qdatam2 %&gt;%\n  filter(pptcompleteyn == 1 | pptcompleteyn == 3) %&gt;%\n  mutate(ppt_index_diff2 = pptindxr2val - pptindxr2val_d) %&gt;%\n  filter(ppt_index_diff2 != 0 | is.na(ppt_index_diff2)) %&gt;%\n  add_column(\n    error_type = \"PPT Repetition 2:Missing or mismatch in PPT ratings for the index site\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.9.0.6 Flag 6:\nRepetition 3:\n\nm2qerror6 &lt;- qdatam2 %&gt;%\n  filter(pptcompleteyn == 1 | pptcompleteyn == 3) %&gt;%\n  mutate(ppt_index_diff3 = pptindxr3val - pptindxr3val_d) %&gt;%\n  filter(ppt_index_diff3 != 0 | is.na(ppt_index_diff3)) %&gt;%\n  add_column(\n    error_type = \"PPT Repetition 3:Missing or mismatch in PPT ratings for the index site\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.9.0.7 Flag 7:\nCheck if PPT was performed on remote site (pptcompleteyn == 2) but PPT information was filled out for the index site.\n\nm2qerror7 &lt;- qdatam2 %&gt;%\n  filter(pptcompleteyn == 2) %&gt;%\n  mutate(\n    index1 = case_when(\n      (!is.na(pptindxr1val) & !is.na(pptindxr1val_d)) |\n        (!is.na(pptindxr2val) & !is.na(pptindxr2val_d)) |\n        (!is.na(pptindxr3val) & !is.na(pptindxr3val_d)) ~\n        1,\n      TRUE ~ 0\n    )\n  ) %&gt;%\n  filter(index1 == 1) %&gt;%\n  add_column(\n    error_type = \"PPT: Remote site was checked but PPT information was filled out for the index site\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.9.0.8 Flag 8:\nCheck if PPT was performed on both sites (pptcompleteyn == 1) but PPT information was not filled out for the index site.\n\nm2qerror8 &lt;- qdatam2 %&gt;%\n  filter(pptcompleteyn == 1) %&gt;%\n  mutate(\n    index2 = case_when(\n      (is.na(pptindxr1val) & is.na(pptindxr1val_d)) |\n        (is.na(pptindxr2val) & is.na(pptindxr2val_d)) |\n        (is.na(pptindxr3val) & is.na(pptindxr3val_d)) ~\n        1,\n      TRUE ~ 0\n    )\n  ) %&gt;%\n  filter(index2 == 1) %&gt;%\n  add_column(\n    error_type = \"PPT: Both sites were checked but PPT information was not filled out for the index site\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.9.0.9 Flag 9:\nCheck if PPT was performed on the index site (pptcompleteyn == 3) but PPT information was filled out for the remote site\n\nm2qerror9 &lt;- qdatam2 %&gt;%\n  filter(pptcompleteyn == 3) %&gt;%\n  mutate(\n    remote1 = case_when(\n      (!is.na(pptremoter1val) & !is.na(pptremoter1val_d)) |\n        (!is.na(pptremoter2val) & !is.na(pptremoter2val_d)) |\n        (!is.na(pptremoter3val) & !is.na(pptremoter3val_d)) ~\n        1,\n      TRUE ~ 0\n    )\n  ) %&gt;%\n  filter(remote1 == 1) %&gt;%\n  add_column(\n    error_type = \"PPT: Index site was checked but PPT information was filled out for the remote site\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.9.0.10 Flag 10:\nCheck if PPT was performed on the both sites (pptcompleteyn == 1) but PPT information was not filled out for the remote site\n\nm2qerror10 &lt;- qdatam2 %&gt;%\n  filter(pptcompleteyn == 1) %&gt;%\n  mutate(\n    remote2 = case_when(\n      (is.na(pptremoter1val) & is.na(pptremoter1val_d)) |\n        (is.na(pptremoter2val) & is.na(pptremoter2val_d)) |\n        (is.na(pptremoter3val) & is.na(pptremoter3val_d)) ~\n        1,\n      TRUE ~ 0\n    )\n  ) %&gt;%\n  filter(remote2 == 1) %&gt;%\n  add_column(\n    error_type = \"PPT: Both sites were checked but PPT information was not filled out for the remote site\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.9.0.11 Flag 11:\nCheck if information was available to compute mean PPT values at the index site = primary data point (A2CPS: Site Manual of Procedures v3.0, pg. 154).\n\nm2qerror11 &lt;- qdatam2 %&gt;%\n  filter((pptcompleteyn == 1 | pptcompleteyn == 3)) %&gt;%\n  rowwise() %&gt;%\n  mutate(mean1 = mean(c(pptindxr1val, pptindxr2val, pptindxr3val))) %&gt;%\n  filter(is.na(mean1)) %&gt;%\n  add_column(\n    error_type = \"PPT: Not enough information was available to compute mean PPT values at the index site\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.9.0.12 Flag 12:\nCheck if information was available to compute mean PPT values at the remote site = secondary data point (A2CPS: Site Manual of Procedures v3.0, pg. 154).\n\nm2qerror12 &lt;- qdatam2 %&gt;%\n  filter((pptcompleteyn == 1 | pptcompleteyn == 2)) %&gt;%\n  rowwise() %&gt;%\n  mutate(mean2 = mean(c(pptremoter1val, pptremoter2val, pptremoter3val))) %&gt;%\n  filter(is.na(mean2)) %&gt;%\n  add_column(\n    error_type = \"PPT: Not enough information was available to compute mean PPT values at the remote site\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\n\nH.2.10 Temporal Summation (TS):\nKeep subjects with completed QST and TS test.\n\nm2tr.complete &lt;- thor_qst %&gt;%\n  filter(qst_mcc1_v03_complete == 2) %&gt;%\n  filter(tscompleted == 2 | tscompleted == 1 | tscompleted == 3)\n\nIf TS was completed for both sites then information on at least 1 repetition for both sites should be available.\nCreate a field name for each repetition (initial and final) and assign 1 if at least one repetition has information without mismatch errors.\n\nthor_ts_recoded &lt;- m2tr.complete %&gt;%\n  mutate(ts_contr_init1 = tsremoter1initial - tsremoter1initial_d) %&gt;%\n  mutate(ts_contr_fin1 = tsremoter1final - tsremoter1final_d) %&gt;%\n  mutate(ts_contr_init2 = tsremoter2initial - tsremoter2initial_d) %&gt;%\n  mutate(ts_contr_fin2 = tsremoter2final - tsremoter2final_d) %&gt;%\n  mutate(ts_contr_init3 = tsremoter3initial - tsremoter3initial_d) %&gt;%\n  mutate(ts_contr_fin3 = tsremoter3final - tsremoter3final_d) %&gt;%\n  mutate(\n    trrep1 = case_when(\n      (tscompleted == 1 | tscompleted == 2) &\n        ts_contr_init1 == 0 &\n        ts_contr_fin1 == 0 ~\n        1,\n      TRUE ~ 0\n    )\n  ) %&gt;%\n  mutate(\n    trrep2 = case_when(\n      (tscompleted == 1 | tscompleted == 2) &\n        ts_contr_init2 == 0 &\n        ts_contr_fin2 == 0 ~\n        1,\n      TRUE ~ 0\n    )\n  ) %&gt;%\n  mutate(\n    trrep3 = case_when(\n      (tscompleted == 1 | tscompleted == 2) &\n        ts_contr_init3 == 0 &\n        ts_contr_fin3 == 0 ~\n        1,\n      TRUE ~ 0\n    )\n  ) %&gt;%\n  mutate(ts_ind_init1 = tsindxr1initial - tsindxr1initial_d) %&gt;%\n  mutate(ts_ind_fin1 = tsindxr1final - tsindxr1final_d) %&gt;%\n  mutate(ts_ind_init2 = tsindxr2initial - tsindxr2initial_d) %&gt;%\n  mutate(ts_ind_fin2 = tsindxr2final - tsindxr2final_d) %&gt;%\n  mutate(ts_ind_init3 = tsindxr3initial - tsindxr3initial_d) %&gt;%\n  mutate(ts_ind_fin3 = tsindxr3final - tsindxr3final_d) %&gt;%\n  mutate(\n    indrep1 = case_when(\n      (tscompleted == 1 | tscompleted == 3) &\n        ts_ind_init1 == 0 &\n        ts_ind_fin1 == 0 ~\n        1,\n      TRUE ~ 0\n    )\n  ) %&gt;%\n  mutate(\n    indrep2 = case_when(\n      (tscompleted == 1 | tscompleted == 3) &\n        ts_ind_init2 == 0 &\n        ts_ind_fin2 == 0 ~\n        1,\n      TRUE ~ 0\n    )\n  ) %&gt;%\n  mutate(\n    indrep3 = case_when(\n      (tscompleted == 1 | tscompleted == 3) &\n        ts_ind_init3 == 0 &\n        ts_ind_fin3 == 0 ~\n        1,\n      TRUE ~ 0\n    )\n  ) %&gt;%\n  mutate(\n    one_rem = case_when(trrep1 == 1 | trrep2 == 1 | trrep3 ~ 1, TRUE ~ 0)\n  ) %&gt;%\n  mutate(\n    one_ind = case_when(indrep1 == 1 | indrep2 == 1 | indrep3 ~ 1, TRUE ~ 0)\n  ) %&gt;%\n  mutate(one_rep = case_when(one_rem == 1 & one_ind == 1 ~ 1, TRUE ~ 0))\n\n\nH.2.10.0.1 Flag 13:\nCheck if TS was completed for both sites and at least 1 repetition for both sites had no mismatch errors or missing data.\n\nm2qerror13 &lt;- thor_ts_recoded %&gt;%\n  filter(tscompleted == 1 & one_rep == 0) %&gt;%\n  add_column(\n    error_type = \"TS: TS was completed for both sites and at least 1 repetition for both sites has no mismatch errors or missing data\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.10.0.2 Flag 14:\nCheck if TS was completed for the remote site and at least 1 repetition had no mismatch errors or missing data.\n\nm2qerror14 &lt;- thor_ts_recoded %&gt;%\n  filter(tscompleted == 2 & one_rem == 0) %&gt;%\n  add_column(\n    error_type = \"TS: TS was completed for the remote site and at least 1 repetition had no mismatch errors or missing data\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.10.0.3 Flag 15:\nCheck if TS was completed for the index site and at least 1 repetition had no mismatch errors or missing data.\n\nm2qerror15 &lt;- thor_ts_recoded %&gt;%\n  filter(tscompleted == 3 & one_ind == 0) %&gt;%\n  add_column(\n    error_type = \"TS: TS was completed for the index site and at least 1 repetition had no mismatch errors or missing data\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.10.0.4 Flag 16\nCheck for missing after sensation at 15 secs if TS Remote site (contralateral deltoid) was completed\n\nm2qerror16 &lt;- m2tr.complete %&gt;%\n  filter(tscompleted == 1 | tscompleted == 2) %&gt;%\n  filter(is.na(tsremoteafter15)) %&gt;%\n  add_column(\n    error_type = \"TS: Missing after sensation at 15 secs if TS Remote site (contralateral deltoid) was completed\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.10.0.5 Flag 17\nCheck for missing after sensation at 30 secs if TS Remote site (contralateral deltoid) was completed\n\nm2qerror17 &lt;- m2tr.complete %&gt;%\n  filter(tscompleted == 1 | tscompleted == 2) %&gt;%\n  filter(is.na(tsfinalpainremafts31)) %&gt;%\n  add_column(\n    error_type = \"TS: Missing after sensation at 30 secs if TS Remote site (contralateral deltoid) was completed\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.10.0.6 Flag 18\nCheck for missing after sensation at 15 secs if TS Index site was completed\n\nm2qerror18 &lt;- m2tr.complete %&gt;%\n  filter(tscompleted == 1 | tscompleted == 3) %&gt;%\n  filter(is.na(tsindxafter15)) %&gt;%\n  add_column(\n    error_type = \"TS: Missing after sensation at 15 secs if TS Index site was completed\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.10.0.7 Flag 19\nCheck for missing after sensation at 30 secs if TS Index site was completed\n\nm2qerror19 &lt;- m2tr.complete %&gt;%\n  filter(tscompleted == 1 | tscompleted == 3) %&gt;%\n  filter(is.na(tsindxafter30)) %&gt;%\n  add_column(\n    error_type = \"TS: Missing after sensation at 30 secs if TS Index site (med/lat knee) was completed\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.10.0.8 Flag 20:\nCheck if TS was performed on the remote site but pain ratings were filled out for the index site.\n\nm2qerror20 &lt;- m2tr.complete %&gt;%\n  filter(tscompleted == 2 & tscompleted != 3) %&gt;%\n  mutate(\n    ts.index1 = case_when(\n      (!is.na(tsindxr1initial) & !is.na(tsindxr1initial_d)) |\n        (!is.na(tsindxr1final) & !is.na(tsindxr1final_d)) |\n        (!is.na(tsindxr2initial) & !is.na(tsindxr2initial_d)) |\n        (!is.na(tsindxr2final) & !is.na(tsindxr2final_d)) |\n        (!is.na(tsindxr3initial) & !is.na(tsindxr3initial_d)) |\n        (!is.na(tsindxr3final) & !is.na(tsindxr3final_d)) ~\n        1,\n      TRUE ~ 0\n    )\n  ) %&gt;%\n  filter(ts.index1 == 1) %&gt;%\n  add_column(\n    error_type = \"TS:Remote site was checked but pain ratings were filled out for the index site\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.10.0.9 Flag 21:\nCheck if TS was performed on both sites but pain ratings were not filled out for the index site.\n\nm2qerror21 &lt;- m2tr.complete %&gt;%\n  filter(tscompleted == 1) %&gt;%\n  mutate(\n    ts.bothindex1 = case_when(\n      is.na(tsindxr1initial) &\n        is.na(tsindxr1initial_d) &\n        is.na(tsindxr1final) &\n        is.na(tsindxr1final_d) &\n        is.na(tsindxr2initial) &\n        is.na(tsindxr2initial_d) &\n        is.na(tsindxr2final) &\n        is.na(tsindxr2final_d) &\n        is.na(tsindxr3initial) &\n        is.na(tsindxr3initial_d) &\n        is.na(tsindxr3final) &\n        is.na(tsindxr3final_d) ~\n        1,\n      TRUE ~ 0\n    )\n  ) %&gt;%\n  filter(ts.bothindex1 == 1) %&gt;%\n  add_column(\n    error_type = \"TS:Both sites were checked but pain ratings were not filled out for the index site\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.10.0.10 Flag 22:\nCheck if TS was performed on both sites but pain ratings were not filled out for the remote.\n\nm2qerror22 &lt;- m2tr.complete %&gt;%\n  filter(tscompleted == 1) %&gt;%\n  mutate(\n    ts.bothrem1 = case_when(\n      is.na(tsremoter1initial) &\n        is.na(tsremoter1initial_d) &\n        is.na(tsremoter1final) &\n        is.na(tsremoter1final_d) &\n        is.na(tsremoter2initial) &\n        is.na(tsremoter2initial_d) &\n        is.na(tsremoter2final) &\n        is.na(tsremoter2final_d) &\n        is.na(tsremoter3initial) &\n        is.na(tsremoter3initial_d) &\n        is.na(tsremoter3final) &\n        is.na(tsremoter3final_d) ~\n        1,\n      TRUE ~ 0\n    )\n  ) %&gt;%\n  filter(ts.bothrem1 == 1) %&gt;%\n  add_column(\n    error_type = \"TS:Both sites were checked but pain ratings were not filled out for the remote site\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.10.0.11 Flag 23:\nCheck if TS was performed on the index site but pain ratings were filled out for the remote site.\n\nm2qerror23 &lt;- m2tr.complete %&gt;%\n  filter(tscompleted == 3 & tscompleted != 2) %&gt;%\n  mutate(\n    ts.remote1 = case_when(\n      (!is.na(tsremoter1initial) & !is.na(tsremoter1initial_d)) |\n        (!is.na(tsremoter1final) & !is.na(tsremoter1final_d)) |\n        (!is.na(tsremoter2initial) & !is.na(tsremoter2initial_d)) |\n        (!is.na(tsremoter2final) & !is.na(tsremoter2final_d)) |\n        (!is.na(tsremoter3initial) & !is.na(tsremoter3initial_d)) |\n        (!is.na(tsremoter3final) & !is.na(tsremoter3final_d)) ~\n        1,\n      TRUE ~ 0\n    )\n  ) %&gt;%\n  filter(ts.remote1 == 1) %&gt;%\n  add_column(\n    error_type = \"TS:index site was checked but pain ratings were filled out for the remote site\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.10.0.12 Flag 24\nCheck if information was available to compute primary outcome: Mean of 3 MTS Difference scores computed (Max – initial), (A2CPS: Site Manual of Procedures v3.0, pg. 156). This is conditional on having 3 repetitions, if a record has &lt; 3 repetitions, it will be flagged.\nPrimary outcome for the Index site.\n\nm2qerror24 &lt;- m2tr.complete %&gt;%\n  filter(tscompleted == 1 | tscompleted == 3) %&gt;%\n  mutate(max.rep1.index = pmax(tsindxr1final, tsindxr1initial)) %&gt;%\n  mutate(diff.rep1.index = max.rep1.index - tsindxr1initial) %&gt;%\n  mutate(max.rep2.index = pmax(tsindxr2final, tsindxr2initial)) %&gt;%\n  mutate(diff.rep2.index = max.rep2.index - tsindxr2initial) %&gt;%\n  mutate(max.rep3.index = pmax(tsindxr3final, tsindxr3initial)) %&gt;%\n  mutate(diff.rep3.index = max.rep3.index - tsindxr3initial) %&gt;%\n  mutate(diff.rep1.index = as.numeric(diff.rep1.index)) %&gt;%\n  mutate(diff.rep2.index = as.numeric(diff.rep2.index)) %&gt;%\n  mutate(diff.rep3.index = as.numeric(diff.rep3.index)) %&gt;%\n  rowwise() %&gt;%\n  mutate(\n    mean.index = mean(c(diff.rep1.index, diff.rep2.index, diff.rep3.index))\n  ) %&gt;%\n  filter(is.na(mean.index)) %&gt;%\n  add_column(\n    error_type = \"TS: Not enough information was available to compute primary outcome for the index site\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.10.0.13 Flag 25\nPrimary outcome for the Remote site.\n\nm2qerror25 &lt;- m2tr.complete %&gt;%\n  filter(tscompleted == 1 | tscompleted == 2) %&gt;%\n  mutate(max.rep1.remote = pmax(tsremoter1initial, tsremoter1final)) %&gt;%\n  mutate(diff.rep1.remote = max.rep1.remote - tsremoter1initial) %&gt;%\n  mutate(max.rep2.remote = pmax(tsremoter2initial, tsremoter2final)) %&gt;%\n  mutate(diff.rep2.remote = max.rep2.remote - tsremoter2initial) %&gt;%\n  mutate(max.rep3.remote = pmax(tsremoter3initial, tsremoter3final)) %&gt;%\n  mutate(diff.rep3.remote = max.rep3.remote - tsremoter3initial) %&gt;%\n  mutate(diff.rep1.remote = as.numeric(diff.rep1.remote)) %&gt;%\n  mutate(diff.rep2.remote = as.numeric(diff.rep2.remote)) %&gt;%\n  mutate(diff.rep3.remote = as.numeric(diff.rep3.remote)) %&gt;%\n  rowwise() %&gt;%\n  mutate(\n    mean.remote = mean(c(diff.rep1.remote, diff.rep2.remote, diff.rep3.remote))\n  ) %&gt;%\n  filter(is.na(mean.remote)) %&gt;%\n  add_column(\n    error_type = \"TS: Not enough information was available to compute primary outcome for the remote site\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.10.0.14 Flag 26\nCheck if information was available to compute secondary outcome: Mean of 3 Wind-up ratios (WUR) computed ([Max +1]/ [initial +1]). (1 added to handle possibility of zero initial pain rating in denominator). (A2CPS: Site Manual of Procedures v3.0, pg. 156). This is conditional on having 3 repetitions, if a record has &lt; 3 repetitions, it will be flagged\nSecondary outcome for the index site\n\nm2qerror26 &lt;- m2tr.complete %&gt;%\n  filter(tscompleted == 1 | tscompleted == 3) %&gt;%\n  mutate(max.rep1.index1 = 1 + (pmax(tsindxr1final, tsindxr1initial))) %&gt;%\n  mutate(init.rep1.index1 = 1 + (tsindxr1initial)) %&gt;%\n  mutate(div.rep1.index1 = max.rep1.index1 / init.rep1.index1) %&gt;%\n  mutate(max.rep2.index1 = 1 + (pmax(tsindxr2final, tsindxr2initial))) %&gt;%\n  mutate(init.rep2.index1 = 1 + (tsindxr2initial)) %&gt;%\n  mutate(div.rep2.index1 = max.rep2.index1 / init.rep2.index1) %&gt;%\n  mutate(max.rep3.index1 = 1 + (pmax(tsindxr3final, tsindxr3initial))) %&gt;%\n  mutate(init.rep3.index1 = 1 + (tsindxr3initial)) %&gt;%\n  mutate(div.rep3.index1 = max.rep3.index1 / init.rep3.index1) %&gt;%\n  rowwise() %&gt;%\n  mutate(\n    mean.sec.index = mean(c(div.rep1.index1, div.rep2.index1, div.rep3.index1))\n  ) %&gt;%\n  filter(is.na(mean.sec.index)) %&gt;%\n  add_column(\n    error_type = \"TS: Not enough information was available to compute secondary outcome for the index site\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.10.0.15 Flag 27\nSecondary outcome for the Remote site.\n\nm2qerror28 &lt;- m2tr.complete %&gt;%\n  filter(tscompleted == 1 | tscompleted == 2) %&gt;%\n  mutate(max.rep1.remote1 = 1 + (pmax(tsremoter1initial, tsremoter1final))) %&gt;%\n  mutate(init.rep1.remote1 = 1 + (tsremoter1initial)) %&gt;%\n  mutate(div.rep1.remote1 = max.rep1.remote1 / init.rep1.remote1) %&gt;%\n  mutate(max.rep2.remote1 = 1 + (pmax(tsremoter2initial, tsremoter2final))) %&gt;%\n  mutate(init.rep2.remote1 = 1 + (tsremoter2initial)) %&gt;%\n  mutate(div.rep2.remote1 = max.rep2.remote1 / init.rep2.remote1) %&gt;%\n  mutate(max.rep3.remote1 = 1 + (pmax(tsremoter3initial, tsremoter3final))) %&gt;%\n  mutate(init.rep3.remote1 = 1 + (tsremoter3initial)) %&gt;%\n  mutate(div.rep3.remote1 = max.rep3.remote1 / init.rep3.remote1) %&gt;%\n  rowwise() %&gt;%\n  mutate(\n    mean.sec.remote = mean(c(\n      div.rep1.remote1,\n      div.rep2.remote1,\n      div.rep3.remote1\n    ))\n  ) %&gt;%\n  filter(is.na(mean.sec.remote)) %&gt;%\n  add_column(\n    error_type = \"TS: Not enough information was available to compute secondary outcome for the remote site\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\n\nH.2.11 Conditioned Pain Modulation (CPM):\nKeep records with “CPM test completed”\n\nm2trcpm.complete &lt;- thor_qst %&gt;%\n  filter(qst_mcc1_v03_complete == 2) %&gt;%\n  filter(!is.na(cpmcompleteyn) & cpmcompleteyn != 0)\n\n\nH.2.11.0.1 Flag 28:\nCheck if water temperature was not checked:\n\nm2qerror28 &lt;- m2trcpm.complete %&gt;%\n  filter(cpmcoldwatertemp != 1) %&gt;%\n  add_column(error_type = \"CPM: Water temperature not checked\") %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.11.0.2 Flag 29:\nCheck for missing or mismatch in cold water pain ratings at 30 seconds.\n\nm2qerror29 &lt;- m2trcpm.complete %&gt;%\n  filter(\n    cpmbathrangeyn == 1 | (cpmbathrangeyn == 2 & cpmoutrangetime &gt;= 30)\n  ) %&gt;%\n  mutate(diff_30 = cpmcoldwaterpain30 - cpmcoldwaterpain30_d) %&gt;%\n  filter(diff_30 != 0 | is.na(diff_30)) %&gt;%\n  add_column(\n    error_type = \"CPM: Missing or mismatch in cold water pain ratings at 30 sec\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.11.0.3 Flag 30:\nCheck for missing or mismatch in cold water pain ratings at 60 seconds.\n\nm2qerror30 &lt;- m2trcpm.complete %&gt;%\n  filter(\n    cpmbathrangeyn == 1 | (cpmbathrangeyn == 2 & cpmoutrangetime &gt;= 60)\n  ) %&gt;%\n  mutate(diff_60 = cpmcoldwaterpain60 - cpmcoldwaterpain60_d) %&gt;%\n  filter(diff_60 != 0 | is.na(diff_60)) %&gt;%\n  add_column(\n    error_type = \"CPM: Missing or mismatch in cold water pain ratings at 60 sec\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.11.0.4 Flag 31:\nCheck for missing or mismatch in PPT ratings for Remote site (repetition 1).\n\nm2qerror31 &lt;- m2trcpm.complete %&gt;%\n  mutate(diff_cpm1 = cpmpptremr1val - cpmpptremr1val_d) %&gt;%\n  filter(diff_cpm1 != 0 | is.na(diff_cpm1)) %&gt;%\n  add_column(\n    error_type = \"CPM PPT Rep1:Missing or mismatch in PPT ratings for Remote site\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.11.0.5 Flag 32:\nCheck for missing or mismatch in PPT ratings for Remote site (repetition 2).\n\nm2qerror32 &lt;- m2trcpm.complete %&gt;%\n  mutate(diff_cpm2 = cpmpptremr2val - cpmpptremr2val_d) %&gt;%\n  filter(diff_cpm2 != 0 | is.na(diff_cpm2)) %&gt;%\n  add_column(\n    error_type = \"CPM PPT Rep2:Missing or mismatch in PPT ratings for Remote site\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.11.0.6 Flag 33:\nCheck for missing or mismatch in PPT ratings for Remote site (repetition 3).\n\nm2qerror33 &lt;- m2trcpm.complete %&gt;%\n  mutate(diff_cpm3 = cpmpptremr3val - cpmpptremr3val_d) %&gt;%\n  filter(diff_cpm3 != 0 | is.na(diff_cpm3)) %&gt;%\n  add_column(\n    error_type = \"CPM PPT Rep3:Missing or mismatch in PPT ratings for Remote site\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.11.0.7 Flag 34:\nCheck if information was available to compute primary outcome (A2CPS MOP v.3.0, pg. 159) i.e. [(pre hand immersion PPT-post immersion PPT)/pre immersion PPT] *100\n\nm2qerror34 &lt;- m2trcpm.complete %&gt;%\n  filter(pptcompleteyn == 1 | pptcompleteyn == 2) %&gt;%\n  rowwise() %&gt;%\n  mutate(mean_pre = mean(c(pptremoter1val, pptremoter2val, pptremoter3val))) %&gt;%\n  rowwise() %&gt;%\n  mutate(\n    mean_post = mean(c(cpmpptremr1val, cpmpptremr2val, cpmpptremr3val))\n  ) %&gt;%\n  mutate(cpm_change = ((mean_pre - mean_post) / mean_pre) * 100) %&gt;%\n  filter(is.na(cpm_change)) %&gt;%\n  add_column(\n    error_type = \"CPM: Not enough information to compute primary outcome\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.11.0.8 Flag 35:\nCheck if information was available to compute secondary outcome (A2CPS MOP v.3.0, pg. 159) i.e. CPM difference score computed as pre hand immersion PPT-post immersion PPT\n\nm2qerror35 &lt;- m2trcpm.complete %&gt;%\n  filter(pptcompleteyn == 1 | pptcompleteyn == 2) %&gt;%\n  rowwise() %&gt;%\n  mutate(mean_pre = mean(c(pptremoter1val, pptremoter2val, pptremoter3val))) %&gt;%\n  rowwise() %&gt;%\n  mutate(\n    mean_post = mean(c(cpmpptremr1val, cpmpptremr2val, cpmpptremr3val))\n  ) %&gt;%\n  mutate(cpm_diff = mean_pre - mean_post) %&gt;%\n  filter(is.na(cpm_diff)) %&gt;%\n  add_column(\n    error_type = \"CPM: Not enough information to compute secondary outcome\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.11.0.9 Flag 36:\nCheck If personalized pressure was performed during imaging and there were missing values for cuff Pressure to achieve 4/10 pain outside of scanner during QST as well as missing values for recalibration pressure during imaging.\n\nm2qerror36 &lt;- thor_qst %&gt;%\n  mutate(\n    no.qst = case_when(\n      is.na(fmricuffcalfpressurerecal) & is.na(cuffpfmripressure) ~ 1,\n      TRUE ~ 0\n    )\n  ) %&gt;%\n  mutate(\n    personal.cuff = case_when(\n      fmricuffcompletescl == 1 | fmricuffipyn == 1 ~ 1,\n      TRUE ~ 0\n    )\n  ) %&gt;%\n  filter(personal.cuff == 1 & no.qst == 1) %&gt;%\n  add_column(\n    error_type = \"QST: Missing values for cuff Pressure to achieve 4/10 pain outside of scanner during QST  as well as missing values for recalibration pressure during imaging\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\n\nH.2.12 Dynamic Mechanical Allodynia (DMA)\nKeep records with “DMA test completed”\n\nm2dma.baseline &lt;- thor_qst %&gt;%\n  filter(!is.na(dmatestcompyn) & dmatestcompyn != 0)\n\n\nH.2.12.0.1 Flag 37:\nIf DMA was performed on both or either site but “DMA complete” was missing.\n\nm2qerror37 &lt;- m2dma.baseline %&gt;%\n  filter(is.na(dmatestcompyn)) %&gt;%\n  filter(\n    !is.na(\n      dmacontr1pain &\n        dmacontr1pain_d &\n        dmacontr2pain &\n        dmacontr2pain_d &\n        dmacontr3pain &\n        dmacontr3pain_d &\n        dmacontr4pain &\n        dmacontr4pain_d &\n        dmacontr5pain &\n        dmacontr5pain_d |\n        dmaindxr1pain &\n          dmaindxr1pain_d &\n          dmaindxr2pain &\n          dmaindxr2pain_d &\n          dmaindxr3pain &\n          dmaindxr3pain_d &\n          dmaindxr4pain &\n          dmaindxr4pain_d &\n          dmaindxr5pain &\n          dmaindxr5pain_d &\n          dmasenscompare\n    )\n  ) %&gt;%\n  add_column(\n    error_type = \"DMA:DMA  was performed on both or either site but DMA complete was missing\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.12.0.2 Flag 38:\nCheck if DMA was performed on all the sites and completion status for Standardized control site (contralateral) and Standardized index site (surgical) was also checked.\n\nm2qerror38 &lt;- m2dma.baseline %&gt;%\n  filter(\n    dmatestcompyn == 1 & (dmatestcompwhich___1 == 1 | dmatestcompwhich___2 == 1)\n  ) %&gt;%\n  add_column(\n    error_type = \"DMA:DMA was performed on all the sites and completion status for  Standardized control site (contralateral) and Standardized index site (surgical) was also checked\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.12.0.3 Flag 39:\nCheck if DMA was performed on some sites and completion status for Standardized control site (contralateral) and Standardized index site (surgical) was not specified.\n\nm2qerror39 &lt;- m2dma.baseline %&gt;%\n  filter(\n    (dmatestcompyn == 2 &\n      dmatestcompwhich___1 == 0 &\n      dmatestcompwhich___2 == 0) |\n      (dmatestcompyn == 2 &\n        dmatestcompwhich___1 == 0 &\n        dmatestcompwhich___2 == 0)\n  ) %&gt;%\n  add_column(\n    error_type = \"DMA:DMA was performed on some sites and completion status for  Standardized control site (contralateral) and Standardized index site (surgical) was not specified\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.12.0.4 Flag 40:\nCheck for mismatch in or missing pain data for Standardized control site (contralateral).\nRepetition 1\n\nm2qerror40 &lt;- m2dma.baseline %&gt;%\n  filter(\n    dmatestcompyn == 1 | (dmatestcompyn == 2 & dmatestcompwhich___1 == 1)\n  ) %&gt;%\n  mutate(dma_stand_cont_diff1 = dmacontr1pain - dmacontr1pain_d) %&gt;%\n  filter(dma_stand_cont_diff1 != 0 | is.na(dma_stand_cont_diff1)) %&gt;%\n  add_column(\n    error_type = \"DMA: Repetition 1-Mismatch or missing pain data for standardized control site\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.12.0.5 Flag 41:\nRepetition 2\n\nm2qerror41 &lt;- m2dma.baseline %&gt;%\n  filter(\n    dmatestcompyn == 1 | (dmatestcompyn == 2 & dmatestcompwhich___1 == 1)\n  ) %&gt;%\n  mutate(dma_stand_cont_diff2 = dmacontr2pain - dmacontr2pain_d) %&gt;%\n  filter(dma_stand_cont_diff2 != 0 | is.na(dma_stand_cont_diff2)) %&gt;%\n  add_column(\n    error_type = \"DMA: Repetition 2-Mismatch or missing pain data for standardized control site\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.12.0.6 Flag 42:\nRepetition 3\n\nm2qerror42 &lt;- m2dma.baseline %&gt;%\n  filter(\n    dmatestcompyn == 1 | (dmatestcompyn == 2 & dmatestcompwhich___1 == 1)\n  ) %&gt;%\n  mutate(dma_stand_cont_diff3 = dmacontr3pain - dmacontr3pain_d) %&gt;%\n  filter(dma_stand_cont_diff3 != 0 | is.na(dma_stand_cont_diff3)) %&gt;%\n  add_column(\n    error_type = \"DMA: Repetition 3-Mismatch or missing pain data for standardized control site\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.12.0.7 Flag 43:\nRepetition 4\n\nm2qerror43 &lt;- m2dma.baseline %&gt;%\n  filter(\n    dmatestcompyn == 1 | (dmatestcompyn == 2 & dmatestcompwhich___1 == 1)\n  ) %&gt;%\n  mutate(dma_stand_cont_diff4 = dmacontr4pain - dmacontr4pain_d) %&gt;%\n  filter(dma_stand_cont_diff4 != 0 | is.na(dma_stand_cont_diff4)) %&gt;%\n  add_column(\n    error_type = \"DMA: Repetition 4-Mismatch or missing pain data for standardized control site\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.12.0.8 Flag 44:\nRepetition 5\n\nm2qerror44 &lt;- m2dma.baseline %&gt;%\n  filter(\n    dmatestcompyn == 1 | (dmatestcompyn == 2 & dmatestcompwhich___1 == 1)\n  ) %&gt;%\n  mutate(dma_stand_cont_diff5 = dmacontr5pain - dmacontr5pain_d) %&gt;%\n  filter(dma_stand_cont_diff5 != 0 | is.na(dma_stand_cont_diff5)) %&gt;%\n  add_column(\n    error_type = \"DMA: Repetition 5-Mismatch or missing pain data for standardized control site\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.12.0.9 Flag 45:\nCheck for mismatch or missing pain data for standardized index site\nRepetition 1\n\nm2qerror45 &lt;- m2dma.baseline %&gt;%\n  filter(\n    dmatestcompyn == 1 | (dmatestcompyn == 2 & dmatestcompwhich___2 == 1)\n  ) %&gt;%\n  mutate(dma_stand_ind_diff1 = dmaindxr1pain - dmaindxr1pain_d) %&gt;%\n  filter(dma_stand_ind_diff1 != 0 | is.na(dma_stand_ind_diff1)) %&gt;%\n  add_column(\n    error_type = \"DMA: Repetition 1-Mismatch or missing pain data for standardized index site\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.12.0.10 Flag 46:\nRepetition 2\n\nm2qerror46 &lt;- m2dma.baseline %&gt;%\n  filter(\n    dmatestcompyn == 1 | (dmatestcompyn == 2 & dmatestcompwhich___2 == 1)\n  ) %&gt;%\n  mutate(dma_stand_ind_diff2 = dmaindxr2pain - dmaindxr2pain_d) %&gt;%\n  filter(dma_stand_ind_diff2 != 0 | is.na(dma_stand_ind_diff2)) %&gt;%\n  add_column(\n    error_type = \"DMA: Repetition 2-Mismatch or missing pain data for standardized index site\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.12.0.11 Flag 47:\nRepetition 3\n\nm2qerror47 &lt;- m2dma.baseline %&gt;%\n  filter(\n    dmatestcompyn == 1 | (dmatestcompyn == 2 & dmatestcompwhich___2 == 1)\n  ) %&gt;%\n  mutate(dma_stand_ind_diff3 = dmaindxr3pain - dmaindxr3pain_d) %&gt;%\n  filter(dma_stand_ind_diff3 != 0 | is.na(dma_stand_ind_diff3)) %&gt;%\n  add_column(\n    error_type = \"DMA: Repetition 3-Mismatch or missing pain data for standardized index site\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.12.0.12 Flag 48:\nRepetition 4\n\nm2qerror48 &lt;- m2dma.baseline %&gt;%\n  filter(\n    dmatestcompyn == 1 | (dmatestcompyn == 2 & dmatestcompwhich___2 == 1)\n  ) %&gt;%\n  mutate(dma_stand_ind_diff4 = dmaindxr4pain - dmaindxr4pain_d) %&gt;%\n  filter(dma_stand_ind_diff4 != 0 | is.na(dma_stand_ind_diff4)) %&gt;%\n  add_column(\n    error_type = \"DMA: Repetition 4-Mismatch or missing pain data for standardized index site\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.12.0.13 Flag 49:\nRepetition 5\n\nm2qerror49 &lt;- m2dma.baseline %&gt;%\n  filter(\n    dmatestcompyn == 1 | (dmatestcompyn == 2 & dmatestcompwhich___2 == 1)\n  ) %&gt;%\n  mutate(dma_stand_ind_diff5 = dmaindxr5pain - dmaindxr5pain_d) %&gt;%\n  filter(dma_stand_ind_diff5 != 0 | is.na(dma_stand_ind_diff5)) %&gt;%\n  add_column(\n    error_type = \"DMA: Repetition 5-Mismatch or missing pain data for standardized index site\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.12.0.14 Flag 50:\nCheck if both sites were tested and standardized site comparison was not entered\n\nm2qerror50 &lt;- m2dma.baseline %&gt;%\n  filter(dmatestcompyn == 1 & is.na(dmasenscompare)) %&gt;%\n  add_column(\n    error_type = \"If both sites were tested and standardized site comparison was not entered\"\n  ) %&gt;%\n  add_column(errors = \"error\") %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    error_type,\n    errors\n  )\n\n\n\nH.2.12.0.15 QST Biomarkers\n\nH.2.12.0.15.1 PPT Biomarkers:\nMean PPT values at the index site = primary data point (A2CPS: Site Manual of Procedures v3.0, pg. 154).\n\nprimary_ppt_thor &lt;- qdatam2 %&gt;%\n  filter((pptcompleteyn == 1 | pptcompleteyn == 3)) %&gt;%\n  rowwise() %&gt;%\n  mutate(mean1 = mean(c(pptindxr1val, pptindxr2val, pptindxr3val))) %&gt;%\n  rename(primary_ppt_thor = mean1) %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    primary_ppt_thor\n  )\n\nMean PPT values at the remote site = secondary data point (A2CPS: Site Manual of Procedures v3.0, pg. 154).\n\nsecondary_ppt_thor &lt;- qdatam2 %&gt;%\n  filter((pptcompleteyn == 1 | pptcompleteyn == 2)) %&gt;%\n  rowwise() %&gt;%\n  mutate(mean2 = mean(c(pptremoter1val, pptremoter2val, pptremoter3val))) %&gt;%\n  rename(secondary_ppt_thor = mean2) %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    secondary_ppt_thor\n  )\n\n\n\nH.2.12.0.15.2 TS Biomarkers:\nPrimary outcome: Mean of 3 MTS Difference scores computed (Max – initial), (A2CPS: Site Manual of Procedures v3.0, pg. 156). This is conditional on having 3 repetitions.\nPrimary outcome for the Index site.\n\nprimary_ts_index_thor &lt;- m2tr.complete %&gt;%\n  filter(tscompleted == 1 | tscompleted == 3) %&gt;%\n  mutate(max.rep1.index = pmax(tsindxr1final, tsindxr1initial)) %&gt;%\n  mutate(diff.rep1.index = max.rep1.index - tsindxr1initial) %&gt;%\n  mutate(max.rep2.index = pmax(tsindxr2final, tsindxr2initial)) %&gt;%\n  mutate(diff.rep2.index = max.rep2.index - tsindxr2initial) %&gt;%\n  mutate(max.rep3.index = pmax(tsindxr3final, tsindxr3initial)) %&gt;%\n  mutate(diff.rep3.index = max.rep3.index - tsindxr3initial) %&gt;%\n  mutate(diff.rep1.index = as.numeric(diff.rep1.index)) %&gt;%\n  mutate(diff.rep2.index = as.numeric(diff.rep2.index)) %&gt;%\n  mutate(diff.rep3.index = as.numeric(diff.rep3.index)) %&gt;%\n  rowwise() %&gt;%\n  mutate(\n    mean.index = mean(c(diff.rep1.index, diff.rep2.index, diff.rep3.index))\n  ) %&gt;%\n  rename(primary_ts_index_thor = mean.index) %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    primary_ts_index_thor\n  )\n\nPrimary outcome for the Remote site.\n\nprimary_ts_remote_thor &lt;- m2tr.complete %&gt;%\n  filter(tscompleted == 1 | tscompleted == 2) %&gt;%\n  mutate(max.rep1.remote = pmax(tsremoter1initial, tsremoter1final)) %&gt;%\n  mutate(diff.rep1.remote = max.rep1.remote - tsremoter1initial) %&gt;%\n  mutate(max.rep2.remote = pmax(tsremoter2initial, tsremoter2final)) %&gt;%\n  mutate(diff.rep2.remote = max.rep2.remote - tsremoter2initial) %&gt;%\n  mutate(max.rep3.remote = pmax(tsremoter3initial, tsremoter3final)) %&gt;%\n  mutate(diff.rep3.remote = max.rep3.remote - tsremoter3initial) %&gt;%\n  mutate(diff.rep1.remote = as.numeric(diff.rep1.remote)) %&gt;%\n  mutate(diff.rep2.remote = as.numeric(diff.rep2.remote)) %&gt;%\n  mutate(diff.rep3.remote = as.numeric(diff.rep3.remote)) %&gt;%\n  rowwise() %&gt;%\n  mutate(\n    mean.remote = mean(c(diff.rep1.remote, diff.rep2.remote, diff.rep3.remote))\n  ) %&gt;%\n  rename(primary_ts_remote_thor = mean.remote) %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    primary_ts_remote_thor\n  )\n\nSecondary outcome: Mean of 3 Wind-up ratios (WUR) computed ([Max +1]/ [initial +1]). (1 added to handle possibility of zero initial pain rating in denominator). (A2CPS: Site Manual of Procedures v3.0, pg. 156). This is conditional on having 3 repetitions, if a record has &lt; 3 repetitions, it will be flagged\nSecondary outcome for the index site\n\nsecondary_ts_index_thor &lt;- m2tr.complete %&gt;%\n  filter(tscompleted == 1 | tscompleted == 3) %&gt;%\n  mutate(max.rep1.index1 = 1 + (pmax(tsindxr1final, tsindxr1initial))) %&gt;%\n  mutate(init.rep1.index1 = 1 + (tsindxr1initial)) %&gt;%\n  mutate(div.rep1.index1 = max.rep1.index1 / init.rep1.index1) %&gt;%\n  mutate(max.rep2.index1 = 1 + (pmax(tsindxr2final, tsindxr2initial))) %&gt;%\n  mutate(init.rep2.index1 = 1 + (tsindxr2initial)) %&gt;%\n  mutate(div.rep2.index1 = max.rep2.index1 / init.rep2.index1) %&gt;%\n  mutate(max.rep3.index1 = 1 + (pmax(tsindxr3final, tsindxr3initial))) %&gt;%\n  mutate(init.rep3.index1 = 1 + (tsindxr3initial)) %&gt;%\n  mutate(div.rep3.index1 = max.rep3.index1 / init.rep3.index1) %&gt;%\n  rowwise() %&gt;%\n  mutate(\n    mean.sec.index = mean(c(div.rep1.index1, div.rep2.index1, div.rep3.index1))\n  ) %&gt;%\n  rename(secondary_ts_index_thor = mean.sec.index) %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    secondary_ts_index_thor\n  )\n\nSecondary outcome for the Remote site.\n\nsecondary_ts_remote_thor &lt;- m2tr.complete %&gt;%\n  filter(tscompleted == 1 | tscompleted == 2) %&gt;%\n  mutate(max.rep1.remote1 = 1 + (pmax(tsremoter1initial, tsremoter1final))) %&gt;%\n  mutate(init.rep1.remote1 = 1 + (tsremoter1initial)) %&gt;%\n  mutate(div.rep1.remote1 = max.rep1.remote1 / init.rep1.remote1) %&gt;%\n  mutate(max.rep2.remote1 = 1 + (pmax(tsremoter2initial, tsremoter2final))) %&gt;%\n  mutate(init.rep2.remote1 = 1 + (tsremoter2initial)) %&gt;%\n  mutate(div.rep2.remote1 = max.rep2.remote1 / init.rep2.remote1) %&gt;%\n  mutate(max.rep3.remote1 = 1 + (pmax(tsremoter3initial, tsremoter3final))) %&gt;%\n  mutate(init.rep3.remote1 = 1 + (tsremoter3initial)) %&gt;%\n  mutate(div.rep3.remote1 = max.rep3.remote1 / init.rep3.remote1) %&gt;%\n  rowwise() %&gt;%\n  mutate(\n    mean.sec.remote = mean(c(\n      div.rep1.remote1,\n      div.rep2.remote1,\n      div.rep3.remote1\n    ))\n  ) %&gt;%\n  rename(secondary_ts_remote_thor = mean.sec.remote) %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    secondary_ts_remote_thor\n  )\n\n\n\nH.2.12.0.15.3 CPM Biomarkers:\nPrimary outcome (A2CPS: Site Manual of Procedures v3.0, pg. 159) i.e. [(pre hand immersion PPT-post immersion PPT)/pre immersion PPT] *100 \n\nprimary_cpm_thor &lt;- m2trcpm.complete %&gt;%\n  filter(pptcompleteyn == 1 | pptcompleteyn == 2) %&gt;%\n  rowwise() %&gt;%\n  mutate(mean_pre = mean(c(pptremoter1val, pptremoter2val, pptremoter3val))) %&gt;%\n  rowwise() %&gt;%\n  mutate(\n    mean_post = mean(c(cpmpptremr1val, cpmpptremr2val, cpmpptremr3val))\n  ) %&gt;%\n  mutate(cpm_change = ((mean_pre - mean_post) / mean_pre) * 100) %&gt;%\n  rename(primary_cpm_thor = cpm_change) %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    primary_cpm_thor\n  )\n\nSecondary outcome (A2CPS: Site Manual of Procedures v3.0, pg. 159) i.e. CPM difference score computed as pre hand immersion PPT-post immersion PPT\n\nsecondary_cpm_thor &lt;- m2trcpm.complete %&gt;%\n  filter(pptcompleteyn == 1 | pptcompleteyn == 2) %&gt;%\n  rowwise() %&gt;%\n  mutate(mean_pre = mean(c(pptremoter1val, pptremoter2val, pptremoter3val))) %&gt;%\n  rowwise() %&gt;%\n  mutate(\n    mean_post = mean(c(cpmpptremr1val, cpmpptremr2val, cpmpptremr3val))\n  ) %&gt;%\n  mutate(cpm_diff = mean_pre - mean_post) %&gt;%\n  rename(secondary_cpm_thor = cpm_diff) %&gt;%\n  select(\n    record_id,\n    redcap_data_access_group,\n    redcap_repeat_instrument,\n    redcap_repeat_instance,\n    secondary_cpm_thor\n  )\n\nMerge computed biomarkers to the “thor_qst” dataset:\n\nthor_qst &lt;- left_join(\n  thor_qst,\n  primary_ppt_thor,\n  by = c(\n    \"record_id\",\n    \"redcap_data_access_group\",\n    \"redcap_repeat_instrument\",\n    \"redcap_repeat_instance\"\n  )\n) %&gt;%\n  left_join(\n    .,\n    secondary_ppt_thor,\n    by = c(\n      \"record_id\",\n      \"redcap_data_access_group\",\n      \"redcap_repeat_instrument\",\n      \"redcap_repeat_instance\"\n    )\n  ) %&gt;%\n  left_join(\n    .,\n    primary_ts_index_thor,\n    by = c(\n      \"record_id\",\n      \"redcap_data_access_group\",\n      \"redcap_repeat_instrument\",\n      \"redcap_repeat_instance\"\n    )\n  ) %&gt;%\n  left_join(\n    .,\n    primary_ts_remote_thor,\n    by = c(\n      \"record_id\",\n      \"redcap_data_access_group\",\n      \"redcap_repeat_instrument\",\n      \"redcap_repeat_instance\"\n    )\n  ) %&gt;%\n  left_join(\n    .,\n    secondary_ts_index_thor,\n    by = c(\n      \"record_id\",\n      \"redcap_data_access_group\",\n      \"redcap_repeat_instrument\",\n      \"redcap_repeat_instance\"\n    )\n  ) %&gt;%\n  left_join(\n    .,\n    secondary_ts_remote_thor,\n    by = c(\n      \"record_id\",\n      \"redcap_data_access_group\",\n      \"redcap_repeat_instrument\",\n      \"redcap_repeat_instance\"\n    )\n  ) %&gt;%\n  left_join(\n    .,\n    primary_cpm_thor,\n    by = c(\n      \"record_id\",\n      \"redcap_data_access_group\",\n      \"redcap_repeat_instrument\",\n      \"redcap_repeat_instance\"\n    )\n  ) %&gt;%\n  left_join(\n    .,\n    secondary_cpm_thor,\n    by = c(\n      \"record_id\",\n      \"redcap_data_access_group\",\n      \"redcap_repeat_instrument\",\n      \"redcap_repeat_instance\"\n    )\n  )\n\n\n\n\nH.2.12.0.16 New field name(s):\nAdd field names for the computed biomarkers to the QST data dictionary\n\n# Create field names\nprimary_ppt_thor_new_row &lt;- data.frame(\n  field_name = \"primary_ppt_thor\",\n  field_type = \"numeric\",\n  field_note = \"PPT primary biomarker:thor \"\n)\n\nsecondary_ppt_thor_new_row &lt;- data.frame(\n  field_name = \"secondary_ppt_thor\",\n  field_type = \"numeric\",\n  field_note = \"PPT secondary biomarker:thoracic \"\n)\n\n\nprimary_ts_index_thor_new_row &lt;- data.frame(\n  field_name = \"primary_ts_index_thor\",\n  field_type = \"numeric\",\n  field_note = \"TS primary biomarker for the index site:thoracic \"\n)\n\nprimary_ts_remote_thor_new_row &lt;- data.frame(\n  field_name = \"primary_ts_remote_thor\",\n  field_type = \"numeric\",\n  field_note = \"TS primary biomarker for the remote site:thoracic \"\n)\n\nsecondary_ts_index_thor_new_row &lt;- data.frame(\n  field_name = \"secondary_ts_index_thor\",\n  field_type = \"numeric\",\n  field_note = \"TS secondary biomarker for the index site:thoracic \"\n)\n\nsecondary_ts_remote_thor_new_row &lt;- data.frame(\n  field_name = \"secondary_ts_remote_thor\",\n  field_type = \"numeric\",\n  field_note = \"TS secondary biomarker for the remote site:thoracic \"\n)\n\n\nprimary_cpm_thor_new_row &lt;- data.frame(\n  field_name = \"primary_cpm_thor\",\n  field_type = \"numeric\",\n  field_note = \"CPM primary biomarker:thoracic \"\n)\n\nsecondary_cpm_thor_new_row &lt;- data.frame(\n  field_name = \"secondary_cpm_thor\",\n  field_type = \"numeric\",\n  field_note = \"CPM secondary biomarker:thoracic \"\n)\n\n\n# Add the new row after the last row\n\nqst_dict &lt;- qst_dict %&gt;%\n  slice(1:nrow(.)) %&gt;%\n  add_row(.after = nrow(.), !!!primary_ppt_thor_new_row) %&gt;%\n  add_row(.after = nrow(.), !!!secondary_ppt_thor_new_row) %&gt;%\n  add_row(.after = nrow(.), !!!primary_ts_index_thor_new_row) %&gt;%\n  add_row(.after = nrow(.), !!!primary_ts_remote_thor_new_row) %&gt;%\n  add_row(.after = nrow(.), !!!secondary_ts_index_thor_new_row) %&gt;%\n  add_row(.after = nrow(.), !!!secondary_ts_remote_thor_new_row) %&gt;%\n  add_row(.after = nrow(.), !!!primary_cpm_thor_new_row) %&gt;%\n  add_row(.after = nrow(.), !!!secondary_cpm_thor_new_row)\n\n\n\nH.2.12.0.17 Create QST error report for the Thoracotomy cohort.\n\n# Specify the common prefix\nm2qst_error &lt;- \"m2qerror\"\n\n# Find data frames in the global environment with the specified prefix\nm2qst_list &lt;- mget(ls(pattern = paste0(\"^\", m2qst_error)))\n\n# Combine the data frames using bind_rows\nm2qst_report &lt;- bind_rows(m2qst_list) %&gt;%\n  as_tibble() %&gt;%\n  mutate_all(as.character) %&gt;%\n  pivot_wider(names_from = \"error_type\", values_from = \"errors\") %&gt;%\n  mutate_all(~ replace_na(., \"\"))\n\n\nm2qst_report %&gt;%\n  gt() %&gt;%\n  tab_header(\n    title = md(\"**Thoracotomy Cohort QST form Error Report**\")\n  ) %&gt;%\n  tab_options(\n    table.font.size = px(12),\n    column_labels.font.size = px(12)\n  ) %&gt;%\n  tab_style(\n    style = list(cell_fill(color = \"#F4F4F4\")),\n    locations = cells_body(columns = record_id)\n  )\n\n\n\n\n\n\n\nThoracotomy Cohort QST form Error Report\n\n\nrecord_id\nredcap_data_access_group\nredcap_repeat_instrument\nredcap_repeat_instance\nTS: Not enough information was available to compute primary outcome for the index site\nTS: Not enough information was available to compute primary outcome for the remote site\nTS: Not enough information was available to compute secondary outcome for the index site\nCPM: Water temperature not checked\n\n\n\n\n20108\nspectrum_health\nqst_mcc1_v03\n1\nerror\nerror\nerror\n\n\n\n20133\nuniversity_of_mich\nqst_mcc1_v03\n1\nerror\n\nerror\n\n\n\n20337\nuniversity_of_mich\nqst_mcc1_v03\n1\nerror\n\nerror\n\n\n\n20028\nuniversity_of_mich\nqst_mcc1_v03\n1\n\nerror\n\n\n\n\n20054\nuniversity_of_mich\nqst_mcc1_v03\n1\n\n\n\nerror\n\n\n20144\nuniversity_of_mich\nqst_mcc1_v03\n2\n\n\n\nerror\n\n\n\n\n\n\n\n\n\nH.2.12.0.18 Save:\nSave “thor_qst” and data dictionary as .csv files in the folder named “reformatted_QST”\n\nwrite_csv(\n  thor_qst,\n  file = here::here(\"data\", \"qst\", \"Reformatted\", \"reformatted_thor_qst.csv\")\n)\n\nwrite_csv(\n  qst_dict,\n  file = here::here(\"data\", \"qst\", \"Reformatted\", \"updated_qst_dict.csv\")\n)",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>H</span>  <span class='chapter-title'>QST CRF Data Quality Checks</span>"
    ]
  }
]